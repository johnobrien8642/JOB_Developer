{"ast":null,"code":"import { gql } from '@apollo/client';\nimport AllPostQueryFragments from './all_posts_query_fragment.js';\nconst {\n  ALL_POSTS\n} = AllPostQueryFragments;\nconst Mutations = {\n  LOGIN_USER: gql`\n    mutation LoginUser($email: String!, $password: String!) {\n      loginUser(email: $email, password: $password) {\n        token\n        loggedIn\n        blogName\n      }\n    }\n  `,\n  REGISTER_USER: gql`\n    mutation RegisterUser($instanceData: JSONObject) {\n      registerUser(instanceData: $instanceData) {\n        token\n        loggedIn\n        blogName\n      }\n    }\n  `,\n  VERIFY_USER: gql`\n    mutation VerifyUser($token: String!) {\n      verifyUser(token: $token) {\n        loggedIn\n      }\n    }\n  `,\n  LOGOUT_USER: gql`\n    mutation LogoutUser($token: String!) {\n      logoutUser(token: $token) {\n        token\n        loggedIn\n        blogName\n      }\n    }\n  `,\n  LIKE_POST: gql`\n    mutation LikePost($postId: ID, $user: String, $postKind: String) {\n      likePost(postId: $postId, user: $user, postKind: $postKind) {\n        _id\n      }\n    }\n  `,\n  UNLIKE_POST: gql`\n    mutation unlikePost($likeId: ID, $postId: ID) {\n      unlikePost(likeId: $likeId, postId: $postId) {\n        _id\n      }\n    }\n  `,\n  FOLLOW: gql`\n    mutation Follow($user: String, $item: String, $itemKind: String) {\n      follow(user: $user, item: $item, itemKind: $itemKind) {\n        __typename\n        ... on UserType {\n          _id\n        }\n        ... on TagType {\n          _id\n        }\n      }\n    }\n  `,\n  UNFOLLOW: gql`\n    mutation Unfollow($user: String, $item: ID) {\n      unfollow(user: $user, item: $item) {\n        __typename\n        ... on UserType {\n          _id\n        }\n        ... on TagType {\n          _id\n        }\n      }\n    }\n  `,\n  CREATE_OR_UPDATE_POST: gql`\n    mutation CreateOrUpdatePost($instanceData: JSONObject ) {\n      createOrUpdatePost(instanceData: $instanceData) {\n        __typename\n       ${ALL_POSTS}\n      }\n    }\n  `,\n  DELETE_POST: gql`\n    mutation deletePost($post: JSONObject ) {\n      deletePost(post: $post)\n    }\n  `,\n  UPDATE_REPOST: gql`\n    mutation UpdateRepost($repostData: JSONObject) {\n      updateRepost(repostData: $repostData) {\n        _id\n      }\n    }\n  `,\n  CREATE_REPOST: gql`\n    mutation CreateRepost($repostData: JSONObject ) {\n      repost(repostData: $repostData) {     \n        _id\n        repostTrail {\n          _id\n          caption\n          user {\n            _id\n          }\n          repost {\n            _id\n          }\n        }\n          post {\n            ${ALL_POSTS}\n          }\n        }\n    }\n  `,\n  COMMENT_POST: gql`\n    mutation CommentPost($commentData: JSONObject) {\n      comment(commentData: $commentData) {\n        _id\n        content\n        user {\n          _id\n          blogName\n        }\n      }\n    }\n  `,\n  DELETE_COMMENT: gql`\n    mutation deleteComment($commentId: ID, $postId: ID) {\n      deleteComment(commentId: $commentId, postId: $postId) {\n        _id\n      }\n    }\n  `,\n  UPDATE_PROFILE_PIC: gql`\n    mutation UpdateProfilePic($instanceData: JSONObject) {\n      updateProfilePic(instanceData: $instanceData) {\n        _id\n        profilePic {\n          _id\n          src\n        }\n      }\n    }\n  `,\n  UPDATE_USER_EMAIL: gql`\n    mutation UpdateUserEmail($email: String, $password: String, $user: String) {\n      updateUserEmail(email: $email, password: $password, user: $user) {\n        _id\n        email\n        blogName\n      }\n    }\n  `,\n  UPDATE_USER_BLOG_DESCRIPTION: gql`\n    mutation UpdateUserBlogDescription($blogDescription: String, $password: String, $user: String) {\n      updateUserBlogDescription(blogDescription: $blogDescription, password: $password, user: $user) {\n        _id\n        email\n        blogName\n        blogDescription\n      }\n    }\n  `,\n  UPDATE_USER_PASSWORD: gql`\n    mutation UpdateUserPassword($currentPW: String, $newPassword: String, $user: String) {\n      updateUserPassword(currentPW: $currentPW, newPassword: $newPassword, user: $user) {\n        _id\n        email\n        blogName\n      }\n    }\n  `,\n  ADD_FILTER_TAG: gql`\n    mutation AddFilterTag($tag: String, $user: String) {\n      addFilterTag(tag: $tag, user: $user) {\n        filteredTags\n      }\n    }\n  `,\n  DELETE_FILTER_TAG: gql`\n    mutation DeleteFilterTag($tag: String, $user: String) {\n      deleteFilterTag(tag: $tag, user: $user) {\n        filteredTags\n      }\n    }\n  `,\n  ADD_FILTER_POST_CONTENT: gql`\n    mutation AddFilterPostContent($postContent: String, $user: String) {\n      addFilterPostContent(postContent: $postContent, user: $user) {\n        filteredPostContent\n      }\n    }\n  `,\n  DELETE_FILTER_POST_CONTENT: gql`\n    mutation DeleteFilterPostContent($postContent: String, $user: String) {\n      deleteFilterPostContent(postContent: $postContent, user: $user) {\n        filteredPostContent\n      }\n    }\n  `,\n  DELETE_MY_ACCOUNT: gql`\n    mutation DeleteMyAccount($query: String, $password: String, $token: String) {\n      deleteMyAccount(query: $query, password: $password, token: $token)\n    }\n  `\n};\nexport default Mutations;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/graphql/mutations.js"],"names":["gql","AllPostQueryFragments","ALL_POSTS","Mutations","LOGIN_USER","REGISTER_USER","VERIFY_USER","LOGOUT_USER","LIKE_POST","UNLIKE_POST","FOLLOW","UNFOLLOW","CREATE_OR_UPDATE_POST","DELETE_POST","UPDATE_REPOST","CREATE_REPOST","COMMENT_POST","DELETE_COMMENT","UPDATE_PROFILE_PIC","UPDATE_USER_EMAIL","UPDATE_USER_BLOG_DESCRIPTION","UPDATE_USER_PASSWORD","ADD_FILTER_TAG","DELETE_FILTER_TAG","ADD_FILTER_POST_CONTENT","DELETE_FILTER_POST_CONTENT","DELETE_MY_ACCOUNT"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,qBAAP,MAAkC,+BAAlC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBD,qBAAtB;AAEA,MAAME,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEJ,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATkB;AAUhBK,EAAAA,aAAa,EAAEL,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlBkB;AAmBhBM,EAAAA,WAAW,EAAEN,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA,GAzBkB;AA0BhBO,EAAAA,WAAW,EAAEP,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlCkB;AAmChBQ,EAAAA,SAAS,EAAER,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA,GAzCkB;AA0ChBS,EAAAA,WAAW,EAAET,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA,GAhDkB;AAiDhBU,EAAAA,MAAM,EAAEV,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA7DkB;AA8DhBW,EAAAA,QAAQ,EAAEX,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1EkB;AA2EhBY,EAAAA,qBAAqB,EAAEZ,GAAI;AAC7B;AACA;AACA;AACA,SAASE,SAAU;AACnB;AACA;AACA,GAlFkB;AAmFhBW,EAAAA,WAAW,EAAEb,GAAI;AACnB;AACA;AACA;AACA,GAvFkB;AAwFhBc,EAAAA,aAAa,EAAEd,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA,GA9FkB;AA+FhBe,EAAAA,aAAa,EAAEf,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAcE,SAAU;AACxB;AACA;AACA;AACA,GAlHkB;AAmHhBc,EAAAA,YAAY,EAAEhB,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA9HkB;AA+HhBiB,EAAAA,cAAc,EAAEjB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,GArIkB;AAsIhBkB,EAAAA,kBAAkB,EAAElB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhJkB;AAiJhBmB,EAAAA,iBAAiB,EAAEnB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAzJkB;AA0JhBoB,EAAAA,4BAA4B,EAAEpB,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnKkB;AAoKhBqB,EAAAA,oBAAoB,EAAErB,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA5KkB;AA6KhBsB,EAAAA,cAAc,EAAEtB,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,GAnLkB;AAoLhBuB,EAAAA,iBAAiB,EAAEvB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA,GA1LkB;AA2LhBwB,EAAAA,uBAAuB,EAAExB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,GAjMkB;AAkMhByB,EAAAA,0BAA0B,EAAEzB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,GAxMkB;AAyMhB0B,EAAAA,iBAAiB,EAAE1B,GAAI;AACzB;AACA;AACA;AACA;AA7MkB,CAAlB;AAgNA,eAAeG,SAAf","sourcesContent":["import { gql } from '@apollo/client';\nimport AllPostQueryFragments from './all_posts_query_fragment.js'\nconst { ALL_POSTS } = AllPostQueryFragments;\n\nconst Mutations = {\n  LOGIN_USER: gql`\n    mutation LoginUser($email: String!, $password: String!) {\n      loginUser(email: $email, password: $password) {\n        token\n        loggedIn\n        blogName\n      }\n    }\n  `,\n  REGISTER_USER: gql`\n    mutation RegisterUser($instanceData: JSONObject) {\n      registerUser(instanceData: $instanceData) {\n        token\n        loggedIn\n        blogName\n      }\n    }\n  `,\n  VERIFY_USER: gql`\n    mutation VerifyUser($token: String!) {\n      verifyUser(token: $token) {\n        loggedIn\n      }\n    }\n  `,\n  LOGOUT_USER: gql`\n    mutation LogoutUser($token: String!) {\n      logoutUser(token: $token) {\n        token\n        loggedIn\n        blogName\n      }\n    }\n  `,\n  LIKE_POST: gql`\n    mutation LikePost($postId: ID, $user: String, $postKind: String) {\n      likePost(postId: $postId, user: $user, postKind: $postKind) {\n        _id\n      }\n    }\n  `,\n  UNLIKE_POST: gql`\n    mutation unlikePost($likeId: ID, $postId: ID) {\n      unlikePost(likeId: $likeId, postId: $postId) {\n        _id\n      }\n    }\n  `,\n  FOLLOW: gql`\n    mutation Follow($user: String, $item: String, $itemKind: String) {\n      follow(user: $user, item: $item, itemKind: $itemKind) {\n        __typename\n        ... on UserType {\n          _id\n        }\n        ... on TagType {\n          _id\n        }\n      }\n    }\n  `,\n  UNFOLLOW: gql`\n    mutation Unfollow($user: String, $item: ID) {\n      unfollow(user: $user, item: $item) {\n        __typename\n        ... on UserType {\n          _id\n        }\n        ... on TagType {\n          _id\n        }\n      }\n    }\n  `,\n  CREATE_OR_UPDATE_POST: gql`\n    mutation CreateOrUpdatePost($instanceData: JSONObject ) {\n      createOrUpdatePost(instanceData: $instanceData) {\n        __typename\n       ${ALL_POSTS}\n      }\n    }\n  `,\n  DELETE_POST: gql`\n    mutation deletePost($post: JSONObject ) {\n      deletePost(post: $post)\n    }\n  `,\n  UPDATE_REPOST: gql`\n    mutation UpdateRepost($repostData: JSONObject) {\n      updateRepost(repostData: $repostData) {\n        _id\n      }\n    }\n  `,\n  CREATE_REPOST: gql`\n    mutation CreateRepost($repostData: JSONObject ) {\n      repost(repostData: $repostData) {     \n        _id\n        repostTrail {\n          _id\n          caption\n          user {\n            _id\n          }\n          repost {\n            _id\n          }\n        }\n          post {\n            ${ALL_POSTS}\n          }\n        }\n    }\n  `,\n  COMMENT_POST: gql`\n    mutation CommentPost($commentData: JSONObject) {\n      comment(commentData: $commentData) {\n        _id\n        content\n        user {\n          _id\n          blogName\n        }\n      }\n    }\n  `,\n  DELETE_COMMENT: gql`\n    mutation deleteComment($commentId: ID, $postId: ID) {\n      deleteComment(commentId: $commentId, postId: $postId) {\n        _id\n      }\n    }\n  `,\n  UPDATE_PROFILE_PIC: gql`\n    mutation UpdateProfilePic($instanceData: JSONObject) {\n      updateProfilePic(instanceData: $instanceData) {\n        _id\n        profilePic {\n          _id\n          src\n        }\n      }\n    }\n  `,\n  UPDATE_USER_EMAIL: gql`\n    mutation UpdateUserEmail($email: String, $password: String, $user: String) {\n      updateUserEmail(email: $email, password: $password, user: $user) {\n        _id\n        email\n        blogName\n      }\n    }\n  `,\n  UPDATE_USER_BLOG_DESCRIPTION: gql`\n    mutation UpdateUserBlogDescription($blogDescription: String, $password: String, $user: String) {\n      updateUserBlogDescription(blogDescription: $blogDescription, password: $password, user: $user) {\n        _id\n        email\n        blogName\n        blogDescription\n      }\n    }\n  `,\n  UPDATE_USER_PASSWORD: gql`\n    mutation UpdateUserPassword($currentPW: String, $newPassword: String, $user: String) {\n      updateUserPassword(currentPW: $currentPW, newPassword: $newPassword, user: $user) {\n        _id\n        email\n        blogName\n      }\n    }\n  `,\n  ADD_FILTER_TAG: gql`\n    mutation AddFilterTag($tag: String, $user: String) {\n      addFilterTag(tag: $tag, user: $user) {\n        filteredTags\n      }\n    }\n  `,\n  DELETE_FILTER_TAG: gql`\n    mutation DeleteFilterTag($tag: String, $user: String) {\n      deleteFilterTag(tag: $tag, user: $user) {\n        filteredTags\n      }\n    }\n  `,\n  ADD_FILTER_POST_CONTENT: gql`\n    mutation AddFilterPostContent($postContent: String, $user: String) {\n      addFilterPostContent(postContent: $postContent, user: $user) {\n        filteredPostContent\n      }\n    }\n  `,\n  DELETE_FILTER_POST_CONTENT: gql`\n    mutation DeleteFilterPostContent($postContent: String, $user: String) {\n      deleteFilterPostContent(postContent: $postContent, user: $user) {\n        filteredPostContent\n      }\n    }\n  `,\n  DELETE_MY_ACCOUNT: gql`\n    mutation DeleteMyAccount($query: String, $password: String, $token: String) {\n      deleteMyAccount(query: $query, password: $password, token: $token)\n    }\n  `\n};\n\nexport default Mutations;"]},"metadata":{},"sourceType":"module"}