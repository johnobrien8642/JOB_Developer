{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/functions/post_show_util.js\";\nimport React from 'react';\nimport DOMPurify from 'dompurify';\nimport { Link } from 'react-router-dom';\nimport AudioPlayer from 'react-h5-audio-player';\nimport ReactPlayer from 'react-player';\nimport UserResult from '../../../search/resultTypes/User_Result';\nimport ProfilePic from '../../../user/util/components/Profile_Pic';\nimport FollowButton from '../../../posts/util/components/social/Follow_Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst postHeader = (post, discover, radar, doesUserFollowUserRef, repostFormBool) => {\n  if (post.kind === 'Repost') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userRepostHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n          user: post.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/view/blog/${post.user.blogName}`,\n          children: post.user.blogName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else if (discover || radar) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postRadarPostHeader discoverPostHeader\",\n      children: /*#__PURE__*/_jsxDEV(UserResult, {\n        user: post.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } else if (repostFormBool) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"repostHeaderExtraProPic\",\n      children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n        user: post.user,\n        standaloneLink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profilePicAndLinkContainer\",\n        children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n          user: post.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/view/blog/${post.user.blogName}`,\n          children: post.user.blogName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"userPostHeader\",\n      children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n        user: post.user,\n        standaloneLink: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/view/blog/${post.user.blogName}`,\n        children: post.user.blogName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FollowButton, {\n        feed: true,\n        user: post.user,\n        followed: doesUserFollowUserRef.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst repostFooter = (post, update, repostCaption, setRepostCaption) => {\n  let repost = post;\n\n  if (post.kind === 'Repost') {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"repostItemList\",\n      children: repost.repostTrail.map((obj, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"repostShowItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n              user: obj.user,\n              activity: {\n                kind: 'Repost'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/view/blog/${obj.user.blogName}`,\n              children: obj.user.blogName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"repostCaptionDiv\",\n            contentEditable: update && i === repost.repostTrail.length - 1 ? true : false,\n            dangerouslySetInnerHTML: {\n              __html: DOMPurify.sanitize(obj.caption)\n            },\n            onInput: e => {\n              setRepostCaption(repostCaption = e.target.innerHTML);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst postTags = post => {\n  var data = demeterPost(post);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postTags\",\n    children: data.tagIds.map((tag, i) => {\n      var cleanedTitle = tag.title.slice(1);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/view/tag/${cleanedTitle}`,\n          children: tag.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, tag._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 3\n  }, this);\n};\n\nconst postBody = post => {\n  var data = demeterPost(post);\n  var descriptionArr = [...data.descriptionImages];\n  data.descriptions.forEach((obj, i) => {\n    descriptionArr.splice(obj.displayIdx, 0, obj);\n  });\n\n  if (data.kind === 'TextPost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"textPostTitle\",\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  } else if (data.kind === 'PhotoPost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainImageContainer\",\n        children: data.mainImages.map((mainImg, i) => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mainImage\",\n            src: `${mainImg.src}`,\n            alt: 'usefilename'\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  } else if (data.kind === 'QuotePost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"quote\",\n        children: data.quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"source\",\n        children: data.source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  } else if (data.kind === 'LinkPost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"linkContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: data.linkObj.link,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgModal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"siteImage\",\n              src: data.linkObj.imageUrl,\n              alt: 'link page img'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"siteTitle\",\n              children: data.linkObj.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"siteDescription\",\n            children: data.linkObj.linkDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"siteName\",\n            children: data.linkObj.siteName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  } else if (data.kind === 'ChatPost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatDiv\",\n        dangerouslySetInnerHTML: {\n          __html: DOMPurify.sanitize(data.chat)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  } else if (data.kind === 'AudioPost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audioPlayerContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audioDataContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: data.audioMeta.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artist\",\n            children: data.audioMeta.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"album\",\n            children: data.audioMeta.album\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n          src: data.audioFile.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  } else if (data.kind === 'VideoPost') {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        width: '100%',\n        url: data.videoLink.url,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), displayDescription(descriptionArr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst demeterPost = post => {\n  if (post.kind === 'Like' && post.post.kind === 'Repost') {\n    return post.post.post;\n  } else if (post.kind === 'Like' || post.kind === 'Repost') {\n    return post.post;\n  } else {\n    return post;\n  }\n};\n\nconst displayDescription = descriptionArr => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"descriptionTextAndImage\",\n    children: descriptionArr.map((obj, i) => {\n      switch (obj.kind) {\n        case 'text':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"descriptionText\",\n            dangerouslySetInnerHTML: {\n              __html: DOMPurify.sanitize(obj.content)\n            }\n          }, obj._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this);\n\n        case 'Image':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"descriptionImgContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"descriptionImg\",\n              src: `${obj.src}`,\n              alt: 'usefilename'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)\n          }, obj._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this);\n\n        default:\n          return 'no keys matched postBody PhotoPost';\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n};\n\nconst handlePostClassName = obj => {\n  var demeterPost;\n\n  if (obj.kind === 'Like') {\n    demeterPost = obj.post;\n  } else {\n    demeterPost = obj;\n  }\n\n  var {\n    kind\n  } = demeterPost;\n\n  if (kind === 'TextPost') {\n    return 'post textPost';\n  } else if (kind === 'PhotoPost') {\n    return 'post photoPost';\n  } else if (kind === 'QuotePost') {\n    return 'post quotePost';\n  } else if (kind === 'LinkPost') {\n    return 'post linkPost';\n  } else if (kind === 'ChatPost') {\n    return 'post chatPost';\n  } else if (kind === 'AudioPost') {\n    return 'post audioPost';\n  } else if (kind === 'VideoPost') {\n    return 'post videoPost';\n  } else if (kind === 'Repost') {\n    if (demeterPost.post.kind === 'TextPost') {\n      return 'post repost textPost';\n    } else if (demeterPost.post.kind === 'PhotoPost') {\n      return 'post repost photoPost';\n    } else if (demeterPost.post.kind === 'QuotePost') {\n      return 'post repost quotePost';\n    } else if (demeterPost.post.kind === 'LinkPost') {\n      return 'post repost linkPost';\n    } else if (demeterPost.post.kind === 'ChatPost') {\n      return 'post repost chatPost';\n    } else if (demeterPost.post.kind === 'AudioPost') {\n      return 'post repost audioPost';\n    } else if (demeterPost.post.kind === 'VideoPost') {\n      return 'post repost videoPost';\n    }\n  }\n};\n\nconst handleDemeterActivityPost = activity => {\n  if (activity.post.kind === 'Repost') {\n    return activity.post.post;\n  } else {\n    return activity.post;\n  }\n};\n\nconst PostShowUtil = {\n  postHeader,\n  postBody,\n  repostFooter,\n  postTags,\n  handlePostClassName,\n  handleDemeterActivityPost\n};\nexport default PostShowUtil;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/functions/post_show_util.js"],"names":["React","DOMPurify","Link","AudioPlayer","ReactPlayer","UserResult","ProfilePic","FollowButton","postHeader","post","discover","radar","doesUserFollowUserRef","repostFormBool","kind","user","blogName","current","repostFooter","update","repostCaption","setRepostCaption","repost","repostTrail","map","obj","i","length","__html","sanitize","caption","e","target","innerHTML","postTags","data","demeterPost","tagIds","tag","cleanedTitle","title","slice","_id","postBody","descriptionArr","descriptionImages","descriptions","forEach","splice","displayIdx","displayDescription","mainImages","mainImg","src","description","quote","source","linkObj","link","imageUrl","linkDescription","siteName","chat","audioMeta","artist","album","audioFile","url","videoLink","content","handlePostClassName","handleDemeterActivityPost","activity","PostShowUtil"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DOMPurify from 'dompurify';\nimport { Link } from 'react-router-dom';\nimport AudioPlayer from 'react-h5-audio-player';\nimport ReactPlayer from 'react-player';\nimport UserResult from '../../../search/resultTypes/User_Result';\nimport ProfilePic from '../../../user/util/components/Profile_Pic';\nimport FollowButton from '../../../posts/util/components/social/Follow_Button';\n\nconst postHeader = (\n  post, \n  discover, \n  radar,\n  doesUserFollowUserRef,\n  repostFormBool\n) => {\n  if (post.kind === 'Repost') {\n    return (\n      <div\n        className='userRepostHeader'\n      >\n        <span>\n          <ProfilePic \n            user={post.user}\n          />\n          <Link\n            to={`/view/blog/${post.user.blogName}`}\n          >\n            {post.user.blogName}\n          </Link>\n        </span>\n      </div>\n    )\n  } else if (discover || radar) {\n    return (\n      <div\n        className='postRadarPostHeader discoverPostHeader'\n      >\n        <UserResult user={post.user} />\n      </div>\n    )\n  } else if (repostFormBool) {\n    return (\n      <span\n        className='repostHeaderExtraProPic'\n      >\n        <ProfilePic\n          user={post.user}\n          standaloneLink={true}\n        />\n\n        <div\n          className='profilePicAndLinkContainer'\n        >\n          <ProfilePic \n            user={post.user}\n          />\n\n          <Link\n            to={`/view/blog/${post.user.blogName}`}\n          >\n            {post.user.blogName}\n          </Link>\n        </div>\n      </span>\n    )\n  } else {\n    return (\n      <span\n        className='userPostHeader'\n      >\n        <ProfilePic\n          user={post.user}\n          standaloneLink={true}\n        />\n\n        <Link\n          to={`/view/blog/${post.user.blogName}`}\n        >\n          {post.user.blogName}\n        </Link>\n\n        <FollowButton\n          feed={true}\n          user={post.user}\n          followed={doesUserFollowUserRef.current}\n        />\n      </span>\n    )\n  }\n}\n\nconst repostFooter = (post, update, repostCaption, setRepostCaption) => {\n  let repost = post\n\n  if (post.kind === 'Repost') {\n    return (\n      <ul\n      className='repostItemList'\n      >\n        {repost.repostTrail.map((obj, i) => {\n          return (\n            <li\n              className='repostShowItem'\n              key={i}\n            >\n              <span>\n                <ProfilePic \n                  user={obj.user}\n                  activity={{ kind: 'Repost' }}\n                />\n                <Link to={`/view/blog/${obj.user.blogName}`}>\n                  {obj.user.blogName}\n                </Link>\n              </span>\n\n              <div\n                className='repostCaptionDiv'\n                contentEditable={\n                  update && i === repost.repostTrail.length - 1 ?\n                  true : false\n                }\n                dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(obj.caption)\n                }}\n                onInput={e => {\n                  setRepostCaption(repostCaption = e.target.innerHTML)\n                }}\n              />\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nconst postTags = (post) => {\n  var data = demeterPost(post)\n  \n  return (\n  <div\n    className='postTags'\n  >\n    {data.tagIds.map((tag, i) => {\n      var cleanedTitle = tag.title.slice(1)\n      return (\n        <div\n         key={tag._id}\n         className='tag'\n        >\n          <Link \n            to={`/view/tag/${cleanedTitle}`}\n          >\n            {tag.title}\n          </Link>\n        </div>\n      )\n    })}\n    </div>\n  )\n}\n\nconst postBody = (post) => {\n  var data = demeterPost(post)\n  var descriptionArr = [...data.descriptionImages]\n  \n  data.descriptions.forEach((obj, i) => {\n    descriptionArr.splice(obj.displayIdx, 0, obj)\n  })\n  \n  if (data.kind === 'TextPost') {\n    return (\n      <React.Fragment>\n        <h3\n          className='textPostTitle'\n        >\n          {data.title}\n        </h3>\n        {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n\n  } else if (data.kind === 'PhotoPost') {\n    return (\n      <React.Fragment>\n        <div\n          className='mainImageContainer'\n        >\n          {data.mainImages.map((mainImg, i) => {\n            return (\n              <img\n                className='mainImage'\n                key={i} \n                src={`${mainImg.src}`} \n                alt={'usefilename'} \n              />\n            )\n          })}\n        </div>\n        <p>{data.description}</p>\n        {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n\n  } else if (data.kind === 'QuotePost') {\n    \n    return (\n      <React.Fragment>\n        <h1\n          className='quote'\n        >{data.quote}</h1>\n        \n        <p\n          className='source'\n        >\n          {data.source}\n        </p>\n          {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n  } else if (data.kind === 'LinkPost') {\n    return (\n      <React.Fragment>\n        <div\n          className='linkContainer'\n        >\n          <a href={data.linkObj.link}>\n            <div\n              className='imgContainer'\n            >\n              <div className='imgModal'/>\n              <img\n                className='siteImage'\n                src={data.linkObj.imageUrl}  \n                alt={'link page img'}\n              />\n              <h2\n                className='siteTitle'\n              >{data.linkObj.title}</h2>\n            </div>\n            <p\n              className='siteDescription'\n            >{data.linkObj.linkDescription}</p>\n            <span\n              className='siteName'\n            >{data.linkObj.siteName}</span>\n          </a>\n        </div>\n        {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n  } else if (data.kind === 'ChatPost') {\n    return (\n      <React.Fragment>\n        <div\n          className='chatDiv'\n          dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(data.chat)}}\n        />\n        {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n  } else if (data.kind === 'AudioPost') {\n    return (\n      <React.Fragment>\n      <div\n        className='audioPlayerContainer'\n      >\n        <div\n          className='audioDataContainer'\n        >\n          <p\n            className='title'\n          >{data.audioMeta.title}</p>\n          <p\n            className='artist'\n          >{data.audioMeta.artist}</p>\n          <p\n            className='album'\n          >{data.audioMeta.album}</p>\n        </div>\n        <AudioPlayer\n          src={data.audioFile.url}\n        />\n      </div>\n      {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n  } else if (data.kind === 'VideoPost') {\n    return (\n      <React.Fragment>\n        <ReactPlayer\n          width={'100%'}\n          url={data.videoLink.url}\n          controls\n        />\n        {displayDescription(descriptionArr)}\n      </React.Fragment>\n    )\n  }\n}\n\nconst demeterPost = (post) => {\n  if (post.kind === 'Like' && post.post.kind === 'Repost') {\n    return post.post.post\n  } else if (post.kind === 'Like' || post.kind === 'Repost') {\n    return post.post\n  } else {\n    return post\n  }\n}\n\nconst displayDescription = (descriptionArr) => {\n  return (\n    <div\n      className='descriptionTextAndImage'\n    >\n      {descriptionArr.map((obj, i) => {\n        switch(obj.kind) {\n          case 'text':\n            return (\n              <div\n                className='descriptionText'\n                key={obj._id}\n                dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(obj.content) }}\n              />\n            )\n          case 'Image':\n            return (\n              <div\n                className='descriptionImgContainer'\n                key={obj._id}\n              >\n                <img \n                  className='descriptionImg' \n                  src={`${obj.src}`} \n                  alt={'usefilename'} \n                />\n              </div>\n            )\n          default:\n            return 'no keys matched postBody PhotoPost'\n        }\n      })}\n    </div>\n  )\n}\n\nconst handlePostClassName = (obj) => {\n  var demeterPost \n\n  if (obj.kind === 'Like') {\n    demeterPost = obj.post\n  } else {\n    demeterPost = obj\n  }\n  \n  var { kind } = demeterPost;\n\n  if (kind === 'TextPost') {\n    return 'post textPost'\n  } else if (kind === 'PhotoPost') {\n    return 'post photoPost'\n  } else if (kind === 'QuotePost') {\n    return 'post quotePost'\n  } else if (kind === 'LinkPost') {\n    return 'post linkPost'\n  } else if (kind === 'ChatPost') {\n    return 'post chatPost'\n  } else if (kind === 'AudioPost') {\n    return 'post audioPost'\n  } else if (kind === 'VideoPost') {\n    return 'post videoPost'\n  } else if (kind === 'Repost') {\n    if (demeterPost.post.kind === 'TextPost') {\n      return 'post repost textPost'\n    } else if (demeterPost.post.kind === 'PhotoPost') {\n      return 'post repost photoPost'\n    } else if (demeterPost.post.kind === 'QuotePost') {\n      return 'post repost quotePost'\n    } else if (demeterPost.post.kind === 'LinkPost') {\n      return 'post repost linkPost'\n    } else if (demeterPost.post.kind === 'ChatPost') {\n      return 'post repost chatPost'\n    } else if (demeterPost.post.kind === 'AudioPost') {\n      return 'post repost audioPost'\n    } else if (demeterPost.post.kind === 'VideoPost') {\n      return 'post repost videoPost'\n    }\n  }\n}\n\nconst handleDemeterActivityPost = (activity) => {\n  if (activity.post.kind === 'Repost') {\n    return activity.post.post\n  } else {\n    return activity.post\n  }\n}\n\n\nconst PostShowUtil = { \n  postHeader, \n  postBody, \n  repostFooter, \n  postTags,\n  handlePostClassName,\n  handleDemeterActivityPost\n}\n\nexport default PostShowUtil;"]},"metadata":{},"sourceType":"module"}