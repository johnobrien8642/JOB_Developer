{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdentificationHeader = exports.CommonHeader = exports.VorbisPictureToken = void 0;\n\nvar Token = require(\"token-types\");\n\nvar ID3v2Token_1 = require(\"../../id3v2/ID3v2Token\");\n/**\r\n * Parse the METADATA_BLOCK_PICTURE\r\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\r\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\r\n * // ToDo: move to ID3 / APIC?\r\n */\n\n\nvar VorbisPictureToken = /*#__PURE__*/function () {\n  function VorbisPictureToken(len) {\n    _classCallCheck(this, VorbisPictureToken);\n\n    this.len = len;\n  }\n\n  _createClass(VorbisPictureToken, [{\n    key: \"get\",\n    value: function get(buffer, offset) {\n      var type = ID3v2Token_1.AttachedPictureType[Token.UINT32_BE.get(buffer, offset)];\n      var mimeLen = Token.UINT32_BE.get(buffer, offset += 4);\n      var format = buffer.toString('utf-8', offset += 4, offset + mimeLen);\n      var descLen = Token.UINT32_BE.get(buffer, offset += mimeLen);\n      var description = buffer.toString('utf-8', offset += 4, offset + descLen);\n      var width = Token.UINT32_BE.get(buffer, offset += descLen);\n      var height = Token.UINT32_BE.get(buffer, offset += 4);\n      var colour_depth = Token.UINT32_BE.get(buffer, offset += 4);\n      var indexed_color = Token.UINT32_BE.get(buffer, offset += 4);\n      var picDataLen = Token.UINT32_BE.get(buffer, offset += 4);\n      var data = Buffer.from(buffer.slice(offset += 4, offset + picDataLen));\n      return {\n        type: type,\n        format: format,\n        description: description,\n        width: width,\n        height: height,\n        colour_depth: colour_depth,\n        indexed_color: indexed_color,\n        data: data\n      };\n    }\n  }], [{\n    key: \"fromBase64\",\n    value: function fromBase64(base64str) {\n      return this.fromBuffer(Buffer.from(base64str, 'base64'));\n    }\n  }, {\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      var pic = new VorbisPictureToken(buffer.length);\n      return pic.get(buffer, 0);\n    }\n  }]);\n\n  return VorbisPictureToken;\n}();\n\nexports.VorbisPictureToken = VorbisPictureToken;\n/**\r\n * Comment header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\r\n */\n\nexports.CommonHeader = {\n  len: 7,\n  get: function get(buf, off) {\n    return {\n      packetType: buf.readUInt8(off),\n      vorbis: new Token.StringType(6, 'ascii').get(buf, off + 1)\n    };\n  }\n};\n/**\r\n * Identification header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\r\n */\n\nexports.IdentificationHeader = {\n  len: 23,\n  get: function get(buf, off) {\n    return {\n      version: buf.readUInt32LE(off + 0),\n      channelMode: buf.readUInt8(off + 4),\n      sampleRate: buf.readUInt32LE(off + 5),\n      bitrateMax: buf.readUInt32LE(off + 9),\n      bitrateNominal: buf.readUInt32LE(off + 13),\n      bitrateMin: buf.readUInt32LE(off + 17)\n    };\n  }\n};","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js"],"names":["Object","defineProperty","exports","value","IdentificationHeader","CommonHeader","VorbisPictureToken","Token","require","ID3v2Token_1","len","buffer","offset","type","AttachedPictureType","UINT32_BE","get","mimeLen","format","toString","descLen","description","width","height","colour_depth","indexed_color","picDataLen","data","Buffer","from","slice","base64str","fromBuffer","pic","length","buf","off","packetType","readUInt8","vorbis","StringType","version","readUInt32LE","channelMode","sampleRate","bitrateMax","bitrateNominal","bitrateMin"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IdentificationHeader = exports.CommonHeader = exports.VorbisPictureToken = void 0;\r\nconst Token = require(\"token-types\");\r\nconst ID3v2Token_1 = require(\"../../id3v2/ID3v2Token\");\r\n/**\r\n * Parse the METADATA_BLOCK_PICTURE\r\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\r\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\r\n * // ToDo: move to ID3 / APIC?\r\n */\r\nclass VorbisPictureToken {\r\n    constructor(len) {\r\n        this.len = len;\r\n    }\r\n    static fromBase64(base64str) {\r\n        return this.fromBuffer(Buffer.from(base64str, 'base64'));\r\n    }\r\n    static fromBuffer(buffer) {\r\n        const pic = new VorbisPictureToken(buffer.length);\r\n        return pic.get(buffer, 0);\r\n    }\r\n    get(buffer, offset) {\r\n        const type = ID3v2Token_1.AttachedPictureType[Token.UINT32_BE.get(buffer, offset)];\r\n        const mimeLen = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const format = buffer.toString('utf-8', offset += 4, offset + mimeLen);\r\n        const descLen = Token.UINT32_BE.get(buffer, offset += mimeLen);\r\n        const description = buffer.toString('utf-8', offset += 4, offset + descLen);\r\n        const width = Token.UINT32_BE.get(buffer, offset += descLen);\r\n        const height = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const colour_depth = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const indexed_color = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const picDataLen = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const data = Buffer.from(buffer.slice(offset += 4, offset + picDataLen));\r\n        return {\r\n            type,\r\n            format,\r\n            description,\r\n            width,\r\n            height,\r\n            colour_depth,\r\n            indexed_color,\r\n            data\r\n        };\r\n    }\r\n}\r\nexports.VorbisPictureToken = VorbisPictureToken;\r\n/**\r\n * Comment header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\r\n */\r\nexports.CommonHeader = {\r\n    len: 7,\r\n    get: (buf, off) => {\r\n        return {\r\n            packetType: buf.readUInt8(off),\r\n            vorbis: new Token.StringType(6, 'ascii').get(buf, off + 1)\r\n        };\r\n    }\r\n};\r\n/**\r\n * Identification header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\r\n */\r\nexports.IdentificationHeader = {\r\n    len: 23,\r\n    get: (buf, off) => {\r\n        return {\r\n            version: buf.readUInt32LE(off + 0),\r\n            channelMode: buf.readUInt8(off + 4),\r\n            sampleRate: buf.readUInt32LE(off + 5),\r\n            bitrateMax: buf.readUInt32LE(off + 9),\r\n            bitrateNominal: buf.readUInt32LE(off + 13),\r\n            bitrateMin: buf.readUInt32LE(off + 17)\r\n        };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}