{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/forms/Link_Preview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Validator from 'validator';\nimport LinkNameAndImage from '../forms/Link_Name_And_Image';\nimport LinkTitleAndDesc from '../forms/Link_Title_And_Desc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LinkPreview = ({\n  displayBodyImageAndTextInput,\n  setDisplayBodyImageAndTextInput,\n  post,\n  link,\n  setLink,\n  result,\n  siteName,\n  setSiteName,\n  imageUrl,\n  setImageUrl,\n  setTitle,\n  title,\n  linkDescription,\n  setLinkDescription,\n  resetLink\n}) => {\n  _s();\n\n  let [input, setInput] = useState('');\n  let [showNameAndUrl, setShowNameAndUrl] = useState(true);\n  let [showTitleAndLinkDescription, setShowTitleAndLinkDescription] = useState(true);\n  useEffect(() => {\n    if (post) {\n      const {\n        linkObj\n      } = post; //eslint-disable-next-line\n\n      setLink(link = linkObj.link); //eslint-disable-next-line\n\n      setSiteName(siteName = linkObj.siteName); //eslint-disable-next-line\n\n      setImageUrl(imageUrl = linkObj.imageUrl); //eslint-disable-next-line\n\n      setTitle(title = linkObj.title); //eslint-disable-next-line\n\n      setLinkDescription(linkDescription = linkObj.linkDescription); //eslint-disable-next-line\n\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true);\n    } //eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    const resetInput = () => {\n      //eslint-disable-next-line\n      setShowNameAndUrl(showNameAndUrl = true); //eslint-disable-next-line\n\n      setShowTitleAndLinkDescription(showTitleAndLinkDescription = true); //eslint-disable-next-line\n\n      setInput(input = '');\n    };\n\n    if (!showNameAndUrl && !showTitleAndLinkDescription) {\n      //eslint-disable-next-line\n      resetLink(); //eslint-disable-next-line\n\n      resetInput();\n    }\n  }, [showNameAndUrl, showTitleAndLinkDescription, resetLink]);\n  useEffect(() => {\n    if (result) {\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true);\n    }\n  }, [result]);\n\n  if (result) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"linkPreviewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(LinkNameAndImage, {\n        link: link,\n        showNameAndUrl: showNameAndUrl,\n        setShowNameAndUrl: setShowNameAndUrl,\n        siteName: siteName,\n        setSiteName: setSiteName,\n        imageUrl: imageUrl,\n        setImageUrl: setImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinkTitleAndDesc, {\n        link: link,\n        showTitleAndLinkDescription: showTitleAndLinkDescription,\n        setShowTitleAndLinkDescription: setShowTitleAndLinkDescription,\n        title: title,\n        setTitle: setTitle,\n        linkDescription: linkDescription,\n        setLinkDescription: setLinkDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"urlInputContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"urlInput\",\n        value: input,\n        placeholder: \"Type or paste a URL\",\n        onChange: e => {\n          setInput(input = e.target.value);\n\n          if (Validator.isURL(input)) {\n            setLink(link = input);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(LinkPreview, \"VwFMH3w3XqnlZfzZyHIRu6JCgvY=\");\n\n_c = LinkPreview;\nexport default LinkPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkPreview\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/forms/Link_Preview.js"],"names":["React","useEffect","useState","Validator","LinkNameAndImage","LinkTitleAndDesc","LinkPreview","displayBodyImageAndTextInput","setDisplayBodyImageAndTextInput","post","link","setLink","result","siteName","setSiteName","imageUrl","setImageUrl","setTitle","title","linkDescription","setLinkDescription","resetLink","input","setInput","showNameAndUrl","setShowNameAndUrl","showTitleAndLinkDescription","setShowTitleAndLinkDescription","linkObj","resetInput","e","target","value","isURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Validator from 'validator';\n\nimport LinkNameAndImage from '../forms/Link_Name_And_Image'\nimport LinkTitleAndDesc from '../forms/Link_Title_And_Desc'\n\nconst LinkPreview = ({\n  displayBodyImageAndTextInput,\n  setDisplayBodyImageAndTextInput,\n  post, \n  link, \n  setLink, \n  result,\n  siteName, \n  setSiteName,\n  imageUrl, \n  setImageUrl, \n  setTitle,\n  title, \n  linkDescription,\n  setLinkDescription, \n  resetLink\n}) => {\n  let [input, setInput] = useState('');\n  let [showNameAndUrl, setShowNameAndUrl] = useState(true)\n  let [showTitleAndLinkDescription, \n        setShowTitleAndLinkDescription] = useState(true)\n\n  useEffect(() => {\n    \n    if (post) {\n      const { linkObj } = post;\n      //eslint-disable-next-line\n      setLink(link = linkObj.link)\n      //eslint-disable-next-line\n      setSiteName(siteName = linkObj.siteName)\n      //eslint-disable-next-line\n      setImageUrl(imageUrl = linkObj.imageUrl)\n      //eslint-disable-next-line\n      setTitle(title = linkObj.title)\n      //eslint-disable-next-line\n      setLinkDescription(linkDescription = linkObj.linkDescription)\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true)\n    }\n\n    //eslint-disable-next-line\n  }, [])\n  \n  \n  useEffect(() => {\n\n    const resetInput = () => {\n      //eslint-disable-next-line\n      setShowNameAndUrl(showNameAndUrl = true)\n      //eslint-disable-next-line\n      setShowTitleAndLinkDescription(showTitleAndLinkDescription = true)\n      //eslint-disable-next-line\n      setInput(input = '')\n    }\n\n    if (!showNameAndUrl && !showTitleAndLinkDescription) {\n      //eslint-disable-next-line\n      resetLink()\n      //eslint-disable-next-line\n      resetInput()\n    }\n  }, [showNameAndUrl, showTitleAndLinkDescription, resetLink])\n\n  useEffect(() => {\n    if (result) {\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true)\n    }\n  }, [result])\n\n \n\n  if (result) {\n    return (\n      <div\n        className='linkPreviewContainer'\n      >\n        <LinkNameAndImage\n          link={link}\n          showNameAndUrl={showNameAndUrl}\n          setShowNameAndUrl={setShowNameAndUrl}\n          siteName={siteName}\n          setSiteName={setSiteName}\n          imageUrl={imageUrl}\n          setImageUrl={setImageUrl}\n        />\n  \n        <LinkTitleAndDesc\n          link={link}\n          showTitleAndLinkDescription={showTitleAndLinkDescription}\n          setShowTitleAndLinkDescription={setShowTitleAndLinkDescription}\n          title={title}\n          setTitle={setTitle}\n          linkDescription={linkDescription}\n          setLinkDescription={setLinkDescription}\n        />\n      </div>\n    )\n  } else {\n    return(\n      <div\n        className='urlInputContainer'\n      >\n        <textarea\n            className='urlInput'\n            value={input}\n            placeholder='Type or paste a URL'\n            onChange={e => {\n                setInput(input = e.target.value)\n                if (Validator.isURL(input)) {\n                  setLink(link = input)\n                }\n              }\n            }\n        ></textarea>\n      </div>\n    )\n  }\n}\n\nexport default LinkPreview;"]},"metadata":{},"sourceType":"module"}