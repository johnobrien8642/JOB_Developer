{"ast":null,"code":"import _toConsumableArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";//reassemble state\nvar reassembleBody=function reassembleBody(body,descriptionImages,descriptions){var descImgDup=descriptionImages.map(function(img){return _objectSpread(_objectSpread({},img),{},{srcType:img.path?'oldImgUpload':'oldImgLink'});});var descTextDup=descriptions.map(function(obj){return _objectSpread(_objectSpread({},obj),{},{srcType:'oldText'});});body.current=[].concat(_toConsumableArray(descImgDup),_toConsumableArray(descTextDup)).sort(function(a,b){return a.displayIdx-b.displayIdx;});};var reassemblePhotoPostMain=function reassemblePhotoPostMain(main,mainImages){var mainImgDup=mainImages.map(function(img){return _objectSpread(_objectSpread({},img),{},{srcType:img.path?'oldImgUpload':'oldImgLink'});});main.current=_toConsumableArray(mainImgDup).sort(function(a,b){return a.displayIdx-b.displayIdx;});};var pushTags=function pushTags(postTags,tags,setTags){var titles=postTags.map(function(tag){return tag.title;});//eslint-disable-next-line\nsetTags(tags=titles);};var reassembleTextPostStatics=function reassembleTextPostStatics(post,title,setTitle){setTitle(title=post.title);};var PostUpdateUtil={reassembleBody:reassembleBody,pushTags:pushTags,reassembleTextPostStatics:reassembleTextPostStatics,reassemblePhotoPostMain:reassemblePhotoPostMain};export default PostUpdateUtil;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/functions/post_update_util.js"],"names":["reassembleBody","body","descriptionImages","descriptions","descImgDup","map","img","srcType","path","descTextDup","obj","current","sort","a","b","displayIdx","reassemblePhotoPostMain","main","mainImages","mainImgDup","pushTags","postTags","tags","setTags","titles","tag","title","reassembleTextPostStatics","post","setTitle","PostUpdateUtil"],"mappings":"6UACA;AAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAOC,iBAAP,CAA0BC,YAA1B,CAA2C,CAEhE,GAAIC,CAAAA,UAAU,CAAGF,iBAAiB,CAACG,GAAlB,CAAsB,SAAAC,GAAG,wCACrCA,GADqC,MAExCC,OAAO,CAAED,GAAG,CAACE,IAAJ,CAAW,cAAX,CAA4B,YAFG,IAAzB,CAAjB,CAKA,GAAIC,CAAAA,WAAW,CAAGN,YAAY,CAACE,GAAb,CAAiB,SAAAK,GAAG,wCACjCA,GADiC,MAEpCH,OAAO,CAAE,SAF2B,IAApB,CAAlB,CAKAN,IAAI,CAACU,OAAL,CAAe,6BAAIP,UAAJ,qBAAmBK,WAAnB,GAAgCG,IAAhC,CAAqC,SAACC,CAAD,CAAIC,CAAJ,QAClDD,CAAAA,CAAC,CAACE,UAAF,CAAeD,CAAC,CAACC,UADiC,EAArC,CAAf,CAGD,CAfD,CAiBA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,IAAD,CAAOC,UAAP,CAAwB,CAEtD,GAAIC,CAAAA,UAAU,CAAGD,UAAU,CAACb,GAAX,CAAe,SAAAC,GAAG,wCAC9BA,GAD8B,MAEjCC,OAAO,CAAED,GAAG,CAACE,IAAJ,CAAW,cAAX,CAA4B,YAFJ,IAAlB,CAAjB,CAKAS,IAAI,CAACN,OAAL,CAAe,mBAAIQ,UAAJ,EAAgBP,IAAhB,CAAqB,SAACC,CAAD,CAAIC,CAAJ,QAClCD,CAAAA,CAAC,CAACE,UAAF,CAAeD,CAAC,CAACC,UADiB,EAArB,CAAf,CAGD,CAVD,CAYA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,IAAX,CAAiBC,OAAjB,CAA6B,CAC5C,GAAIC,CAAAA,MAAM,CAAGH,QAAQ,CAAChB,GAAT,CAAa,SAAAoB,GAAG,QAAIA,CAAAA,GAAG,CAACC,KAAR,EAAhB,CAAb,CACA;AACAH,OAAO,CAACD,IAAI,CAAGE,MAAR,CAAP,CACD,CAJD,CAMA,GAAMG,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAChCC,IADgC,CAC1BF,KAD0B,CACnBG,QADmB,CAE7B,CACHA,QAAQ,CAACH,KAAK,CAAGE,IAAI,CAACF,KAAd,CAAR,CACD,CAJD,CAMA,GAAMI,CAAAA,cAAc,CAAG,CACrB9B,cAAc,CAAdA,cADqB,CACLoB,QAAQ,CAARA,QADK,CAErBO,yBAAyB,CAAzBA,yBAFqB,CAGrBX,uBAAuB,CAAvBA,uBAHqB,CAAvB,CAMA,cAAec,CAAAA,cAAf","sourcesContent":["\n//reassemble state\n\nconst reassembleBody = (body, descriptionImages, descriptions) => {\n\n  var descImgDup = descriptionImages.map(img => ({\n    ...img,\n    srcType: img.path ? 'oldImgUpload' : 'oldImgLink'\n  }))\n  \n  var descTextDup = descriptions.map(obj => ({\n    ...obj,\n    srcType: 'oldText'\n  }))\n  \n  body.current = [...descImgDup, ...descTextDup].sort((a, b) => \n    a.displayIdx - b.displayIdx\n  )\n}\n\nconst reassemblePhotoPostMain = (main, mainImages, ) => {\n\n  var mainImgDup = mainImages.map(img => ({\n    ...img,\n    srcType: img.path ? 'oldImgUpload' : 'oldImgLink'\n  }))\n\n  main.current = [...mainImgDup].sort((a, b) => \n    a.displayIdx - b.displayIdx\n  )\n}\n\nconst pushTags = (postTags, tags, setTags) => {\n  var titles = postTags.map(tag => tag.title)\n  //eslint-disable-next-line\n  setTags(tags = titles)\n}\n\nconst reassembleTextPostStatics = (\n  post, title, setTitle\n) => {\n  setTitle(title = post.title)\n}\n\nconst PostUpdateUtil = {\n  reassembleBody, pushTags,\n  reassembleTextPostStatics,\n  reassemblePhotoPostMain\n};\n\nexport default PostUpdateUtil;"]},"metadata":{},"sourceType":"module"}