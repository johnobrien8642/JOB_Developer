{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Link}from'react-router-dom';import{useQuery}from'@apollo/client';import{useParams}from'react-router-dom';import PostUpdateOrShow from'../posts/types/showOrUpdate/PostUpdateOrShow';import ProfilePic from'../user/util/components/Profile_Pic';import PostLoading from'../nav/Post_Loading';import FollowButton from'../posts/util/components/social/Follow_Button';import Queries from'../../graphql/queries.js';import PostShowUtil from'../posts/util/functions/post_show_util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FETCH_POST=Queries.FETCH_POST;var handlePostClassName=PostShowUtil.handlePostClassName;var UserPostShow=function UserPostShow(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),uploading=_useState2[0],setUploading=_useState2[1];var _useParams=useParams(),postId=_useParams.postId;var _useQuery=useQuery(FETCH_POST,{variables:{query:postId}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(loading)return'Loading...';if(error)return\"Error: \".concat(error);if(data){var post=data.post;if(uploading){return/*#__PURE__*/_jsx(PostLoading,{uploading:uploading});}else{if(post.kind==='Repost'){return/*#__PURE__*/_jsxs(\"div\",{className:\"postShow\",children:[/*#__PURE__*/_jsx(Link,{className:\"backBtn\",to:\"/dashboard\",children:\"Back\"}),/*#__PURE__*/_jsxs(\"div\",{className:handlePostClassName(post),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"userRepostShowHeader\",children:[/*#__PURE__*/_jsx(ProfilePic,{user:post.post.user}),/*#__PURE__*/_jsxs(\"span\",{className:\"repostHeaderContainer\",children:[/*#__PURE__*/_jsx(Link,{className:\"user\",to:\"/view/blog/\".concat(post.user.blogName),children:post.user.blogName}),/*#__PURE__*/_jsxs(\"div\",{className:\"iconRepostedAndFollowContainer\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",alt:\"\"}),/*#__PURE__*/_jsx(Link,{className:\"repostedFrom\",to:\"/view/blog/\".concat(post.repostedFrom.blogName),children:post.user.blogName}),/*#__PURE__*/_jsx(FollowButton,{feed:true,user:post.repostedFrom})]})]})]}),/*#__PURE__*/_jsx(PostUpdateOrShow,{post:post,repostFormBool:false,uploading:uploading,setUploading:setUploading})]},post._id)]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"postShow\",children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",children:\"Back\"}),/*#__PURE__*/_jsx(\"div\",{className:handlePostClassName(post),children:/*#__PURE__*/_jsx(PostUpdateOrShow,{post:post,uploading:uploading,setUploading:setUploading})},post._id)]});}}}};export default UserPostShow;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/feeds/User_Post_Show.js"],"names":["React","useState","Link","useQuery","useParams","PostUpdateOrShow","ProfilePic","PostLoading","FollowButton","Queries","PostShowUtil","FETCH_POST","handlePostClassName","UserPostShow","uploading","setUploading","postId","variables","query","loading","error","data","post","kind","user","blogName","repostedFrom","_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\n\nimport PostUpdateOrShow from '../posts/types/showOrUpdate/PostUpdateOrShow'\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostLoading from '../nav/Post_Loading';\nimport FollowButton from '../posts/util/components/social/Follow_Button';\n\nimport Queries from '../../graphql/queries.js';\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nconst { FETCH_POST } = Queries;\nconst { handlePostClassName } = PostShowUtil;\n\n\nconst UserPostShow = () => {\n  let [uploading, setUploading] = useState(false)\n  let { postId } = useParams();\n\n  let { loading, error, data, } = useQuery(FETCH_POST, {\n    variables: {\n      query: postId\n    }\n  })\n\n  if (loading) return 'Loading...'\n  if (error) return `Error: ${error}`;\n\n  if (data) {\n    const { post } = data;\n  \n    if (uploading) {\n      return (\n        <PostLoading uploading={uploading} />\n      )\n    } else {\n      if (post.kind === 'Repost') {\n        return (\n          <div\n            className='postShow'\n          >\n\n          <Link\n            className='backBtn'\n            to='/dashboard'\n          >\n            Back\n          </Link>\n\n          <div\n            className={handlePostClassName(post)}\n            key={post._id}\n          >\n            \n            <div\n              className='userRepostShowHeader'\n            >\n              <ProfilePic\n                user={post.post.user}\n              />\n              <span\n                className='repostHeaderContainer'\n              >\n                <Link \n                  className='user'\n                  to={`/view/blog/${post.user.blogName}`}>\n                  {post.user.blogName}\n                </Link>\n    \n                <div\n                  className='iconRepostedAndFollowContainer'\n                >\n                  <img\n                    src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                    alt=''\n                  />\n                  <Link\n                    className='repostedFrom'\n                    to={`/view/blog/${post.repostedFrom.blogName}`}\n                  >\n                    {post.user.blogName}\n                  </Link>\n                  <FollowButton\n                    feed={true}\n                    user={post.repostedFrom}\n                  />\n                </div>\n              </span>\n            </div>\n    \n            <PostUpdateOrShow\n              post={post}\n              repostFormBool={false}\n              uploading={uploading}\n              setUploading={setUploading}\n            />\n          </div>\n        </div>\n        )\n      } else {\n        return (\n          <div\n            className='postShow'\n          >\n\n            <Link\n              to='/dashboard'\n            >\n              Back\n            </Link>\n            \n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <PostUpdateOrShow\n                post={post}\n                uploading={uploading}\n                setUploading={setUploading}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default UserPostShow;"]},"metadata":{},"sourceType":"module"}