{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BitReader = void 0;\n\nvar Token = require(\"token-types\");\n\nvar BitReader = /*#__PURE__*/function () {\n  function BitReader(tokenizer) {\n    _classCallCheck(this, BitReader);\n\n    this.tokenizer = tokenizer;\n    this.pos = 0;\n    this.dword = undefined;\n  }\n  /**\r\n   *\r\n   * @param bits 1..30 bits\r\n   */\n\n\n  _createClass(BitReader, [{\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(bits) {\n        var out;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.dword === undefined)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.tokenizer.readToken(Token.UINT32_LE);\n\n              case 3:\n                this.dword = _context.sent;\n                _context.next = 0;\n                break;\n\n              case 6:\n                out = this.dword;\n                this.pos += bits;\n\n                if (!(this.pos < 32)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                out >>>= 32 - this.pos;\n                return _context.abrupt(\"return\", out & (1 << bits) - 1);\n\n              case 13:\n                this.pos -= 32;\n\n                if (!(this.pos === 0)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                this.dword = undefined;\n                return _context.abrupt(\"return\", out & (1 << bits) - 1);\n\n              case 19:\n                _context.next = 21;\n                return this.tokenizer.readToken(Token.UINT32_LE);\n\n              case 21:\n                this.dword = _context.sent;\n\n                if (this.pos) {\n                  out <<= this.pos;\n                  out |= this.dword >>> 32 - this.pos;\n                }\n\n                return _context.abrupt(\"return\", out & (1 << bits) - 1);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function read(_x) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"ignore\",\n    value: function () {\n      var _ignore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bits) {\n        var remaining, remainder, numOfWords;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.pos > 0) {\n                  remaining = 32 - this.pos;\n                  this.dword = undefined;\n                  bits -= remaining;\n                  this.pos = 0;\n                }\n\n                remainder = bits % 32;\n                numOfWords = (bits - remainder) / 32;\n                _context2.next = 5;\n                return this.tokenizer.ignore(numOfWords * 4);\n\n              case 5:\n                return _context2.abrupt(\"return\", this.read(remainder));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function ignore(_x2) {\n        return _ignore.apply(this, arguments);\n      }\n\n      return ignore;\n    }()\n  }]);\n\n  return BitReader;\n}();\n\nexports.BitReader = BitReader;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/musepack/sv7/BitReader.js"],"names":["Object","defineProperty","exports","value","BitReader","Token","require","tokenizer","pos","dword","undefined","bits","readToken","UINT32_LE","out","remaining","remainder","numOfWords","ignore","read"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;IACMF,S;AACF,qBAAYG,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,GAAL,GAAW,CAAX;AACA,SAAKC,KAAL,GAAaC,SAAb;AACH;AACD;AACJ;AACA;AACA;;;;;;2EACI,iBAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACW,KAAKF,KAAL,KAAeC,SAD1B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAE2B,KAAKH,SAAL,CAAeK,SAAf,CAAyBP,KAAK,CAACQ,SAA/B,CAF3B;;AAAA;AAEQ,qBAAKJ,KAFb;AAAA;AAAA;;AAAA;AAIQK,gBAAAA,GAJR,GAIc,KAAKL,KAJnB;AAKI,qBAAKD,GAAL,IAAYG,IAAZ;;AALJ,sBAMQ,KAAKH,GAAL,GAAW,EANnB;AAAA;AAAA;AAAA;;AAOQM,gBAAAA,GAAG,MAAO,KAAK,KAAKN,GAApB;AAPR,iDAQeM,GAAG,GAAI,CAAC,KAAKH,IAAN,IAAc,CARpC;;AAAA;AAWQ,qBAAKH,GAAL,IAAY,EAAZ;;AAXR,sBAYY,KAAKA,GAAL,KAAa,CAZzB;AAAA;AAAA;AAAA;;AAaY,qBAAKC,KAAL,GAAaC,SAAb;AAbZ,iDAcmBI,GAAG,GAAI,CAAC,KAAKH,IAAN,IAAc,CAdxC;;AAAA;AAAA;AAAA,uBAiB+B,KAAKJ,SAAL,CAAeK,SAAf,CAAyBP,KAAK,CAACQ,SAA/B,CAjB/B;;AAAA;AAiBY,qBAAKJ,KAjBjB;;AAkBY,oBAAI,KAAKD,GAAT,EAAc;AACVM,kBAAAA,GAAG,KAAK,KAAKN,GAAb;AACAM,kBAAAA,GAAG,IAAI,KAAKL,KAAL,KAAgB,KAAK,KAAKD,GAAjC;AACH;;AArBb,iDAsBmBM,GAAG,GAAI,CAAC,KAAKH,IAAN,IAAc,CAtBxC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;6EA0BA,kBAAaA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,oBAAI,KAAKH,GAAL,GAAW,CAAf,EAAkB;AACRO,kBAAAA,SADQ,GACI,KAAK,KAAKP,GADd;AAEd,uBAAKC,KAAL,GAAaC,SAAb;AACAC,kBAAAA,IAAI,IAAII,SAAR;AACA,uBAAKP,GAAL,GAAW,CAAX;AACH;;AACKQ,gBAAAA,SAPV,GAOsBL,IAAI,GAAG,EAP7B;AAQUM,gBAAAA,UARV,GAQuB,CAACN,IAAI,GAAGK,SAAR,IAAqB,EAR5C;AAAA;AAAA,uBASU,KAAKT,SAAL,CAAeW,MAAf,CAAsBD,UAAU,GAAG,CAAnC,CATV;;AAAA;AAAA,kDAUW,KAAKE,IAAL,CAAUH,SAAV,CAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAaJd,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BitReader = void 0;\r\nconst Token = require(\"token-types\");\r\nclass BitReader {\r\n    constructor(tokenizer) {\r\n        this.tokenizer = tokenizer;\r\n        this.pos = 0;\r\n        this.dword = undefined;\r\n    }\r\n    /**\r\n     *\r\n     * @param bits 1..30 bits\r\n     */\r\n    async read(bits) {\r\n        while (this.dword === undefined) {\r\n            this.dword = await this.tokenizer.readToken(Token.UINT32_LE);\r\n        }\r\n        let out = this.dword;\r\n        this.pos += bits;\r\n        if (this.pos < 32) {\r\n            out >>>= (32 - this.pos);\r\n            return out & ((1 << bits) - 1);\r\n        }\r\n        else {\r\n            this.pos -= 32;\r\n            if (this.pos === 0) {\r\n                this.dword = undefined;\r\n                return out & ((1 << bits) - 1);\r\n            }\r\n            else {\r\n                this.dword = await this.tokenizer.readToken(Token.UINT32_LE);\r\n                if (this.pos) {\r\n                    out <<= this.pos;\r\n                    out |= this.dword >>> (32 - this.pos);\r\n                }\r\n                return out & ((1 << bits) - 1);\r\n            }\r\n        }\r\n    }\r\n    async ignore(bits) {\r\n        if (this.pos > 0) {\r\n            const remaining = 32 - this.pos;\r\n            this.dword = undefined;\r\n            bits -= remaining;\r\n            this.pos = 0;\r\n        }\r\n        const remainder = bits % 32;\r\n        const numOfWords = (bits - remainder) / 32;\r\n        await this.tokenizer.ignore(numOfWords * 4);\r\n        return this.read(remainder);\r\n    }\r\n}\r\nexports.BitReader = BitReader;\r\n"]},"metadata":{},"sourceType":"script"}