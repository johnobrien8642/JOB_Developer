{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/user/util/components/Blog_Description.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport UserSettingsUtil from '../functions/user_settings_util.js';\nimport Queries from '../../../../graphql/queries.js';\nimport Mutations from '../../../../graphql/mutations.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_USER\n} = Queries;\nconst {\n  UPDATE_USER_BLOG_DESCRIPTION\n} = Mutations;\nconst {\n  blogDescriptionCache\n} = UserSettingsUtil;\n\nconst BlogDescription = ({\n  mobile,\n  userBlogDescription\n}) => {\n  _s();\n\n  let blogDescriptionRef = useRef(userBlogDescription);\n  let [active, setActive] = useState(false);\n  let [blogDescription, setBlogDescription] = useState('');\n  let [password, setPassword] = useState('');\n  let [errorMessage, setError] = useState(null);\n  let [updateUserBlogDescription] = useMutation(UPDATE_USER_BLOG_DESCRIPTION, {\n    update(client, {\n      data\n    }) {\n      const {\n        updateUserBlogDescription\n      } = data;\n      var currentUser = Cookies.get('currentUser');\n      var query = FETCH_USER;\n      blogDescriptionCache(client, updateUserBlogDescription, currentUser, query);\n    },\n\n    onCompleted(data) {\n      console.log(data);\n      blogDescriptionRef.current = data.updateUserBlogDescription.blogDescription;\n      resetInputs();\n      setActive(active = false);\n    },\n\n    onError(error) {\n      setError(errorMessage = error.message);\n    }\n\n  });\n\n  const resetInputs = () => {\n    setBlogDescription(blogDescription = '');\n    setPassword(password = '');\n    setError(errorMessage = '');\n  };\n\n  if (active) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        updateUserBlogDescription({\n          variables: {\n            blogDescription: blogDescription,\n            password: password,\n            user: Cookies.get('currentUser')\n          }\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputAndBtnContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"blogDescriptionTextarea\",\n          value: blogDescription,\n          onChange: e => {\n            setBlogDescription(blogDescription = e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"characterCount\",\n          children: [150 - blogDescription.length, \" characters left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errMessage\",\n          children: errorMessage ? `${errorMessage}` : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n          value: password,\n          onChange: e => {\n            setPassword(password = e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            type: \"button\",\n            onClick: () => {\n              resetInputs();\n              setActive(active = false);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: blogDescriptionRef.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"editPostBtn\",\n        src: \"https://img.icons8.com/windows/64/000000/edit--v1.png\",\n        alt: \"\",\n        onClick: () => {\n          setActive(active = true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(BlogDescription, \"82N7qFqv342R+1s6n0bHYm4tKdg=\", false, function () {\n  return [useMutation];\n});\n\n_c = BlogDescription;\nexport default BlogDescription;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogDescription\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/user/util/components/Blog_Description.js"],"names":["React","useState","useRef","useMutation","Cookies","UserSettingsUtil","Queries","Mutations","FETCH_USER","UPDATE_USER_BLOG_DESCRIPTION","blogDescriptionCache","BlogDescription","mobile","userBlogDescription","blogDescriptionRef","active","setActive","blogDescription","setBlogDescription","password","setPassword","errorMessage","setError","updateUserBlogDescription","update","client","data","currentUser","get","query","onCompleted","console","log","current","resetInputs","onError","error","message","e","preventDefault","variables","user","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport UserSettingsUtil from '../functions/user_settings_util.js'\n\nimport Queries from '../../../../graphql/queries.js';\nimport Mutations from '../../../../graphql/mutations.js';\nconst { FETCH_USER } = Queries;\nconst { UPDATE_USER_BLOG_DESCRIPTION } = Mutations;\nconst { blogDescriptionCache } = UserSettingsUtil;\n\nconst BlogDescription = ({\n  mobile,\n  userBlogDescription\n}) => {\n  let blogDescriptionRef = useRef(userBlogDescription)\n  let [active, setActive] = useState(false);\n  let [blogDescription, setBlogDescription] = useState('');\n  let [password, setPassword] = useState('');\n  let [errorMessage, setError] = useState(null);\n\n  let [updateUserBlogDescription] = useMutation(UPDATE_USER_BLOG_DESCRIPTION, {\n    update(client, { data }) {\n      const { updateUserBlogDescription } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER\n      \n      blogDescriptionCache(client, updateUserBlogDescription, currentUser, query)\n    },\n    onCompleted(data) {\n      console.log(data)\n      blogDescriptionRef.current = data.updateUserBlogDescription.blogDescription\n      resetInputs()\n      setActive(active = false)\n    },\n    onError(error) {\n      setError(errorMessage = error.message)\n    }\n  })\n\n  const resetInputs = () => {\n    setBlogDescription(blogDescription = '')\n    setPassword(password = '')\n    setError(errorMessage = '')\n  }\n\n  if (active) {\n    return (\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          updateUserBlogDescription({\n            variables: {\n              blogDescription: blogDescription,\n              password: password,\n              user: Cookies.get('currentUser')\n            }\n          })\n        }}\n      >\n\n        <div\n          className='inputAndBtnContainer'\n        >\n          <textarea\n            className='blogDescriptionTextarea'\n            value={blogDescription}\n            onChange={e => {\n              setBlogDescription(blogDescription = e.target.value)\n            }}\n          />\n          <span\n            className='characterCount'\n          >{150 - blogDescription.length} characters left</span>\n          \n          <p\n            className='errMessage'\n          >{errorMessage ? `${errorMessage}` : ''}</p>\n          <input\n            type='password'\n            placeholder='Confirm password'\n            value={password}\n            onChange={e => {\n              setPassword(password = e.target.value)\n            }}\n          />\n\n          <div>\n            <button\n              className='cancel'\n              type='button'\n              onClick={() => {\n                resetInputs()\n                setActive(active = false)\n              }}\n            >Cancel</button>\n            <button\n              className='save'\n              type='submit'\n            >Save</button>\n          </div>\n        </div>\n      </form>\n    )\n  } else {\n    return (\n      <div\n        className='settingContainer'\n      >\n        <p>{blogDescriptionRef.current}</p>\n        <img\n          className='editPostBtn'\n          src=\"https://img.icons8.com/windows/64/000000/edit--v1.png\"\n          alt=''\n          onClick={() => {\n            setActive(active = true)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default BlogDescription;"]},"metadata":{},"sourceType":"module"}