{"ast":null,"code":"import React from'react';import{useQuery}from'@apollo/client';import Cookies from'js-cookie';import Queries from'../../graphql/queries.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FETCH_USER=Queries.FETCH_USER;var Tabs=function Tabs(_ref){var tab=_ref.tab,setTab=_ref.setTab,cursorId=_ref.cursorId,timeAgoRef=_ref.timeAgoRef;var _useQuery=useQuery(FETCH_USER,{variables:{query:Cookies.get('currentUser')}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(loading)return'User Fetch Loading...';if(error)return\"Error: \".concat(error);var user=data.user;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"activityTabsHeader\",children:user.blogName}),/*#__PURE__*/_jsxs(\"div\",{className:\"activityTabsDiv\",children:[/*#__PURE__*/_jsx(\"div\",{className:tab==='all'?'tab activityTabSelected':'tab',onClick:function onClick(){timeAgoRef.current=[];cursorId.current=new Date().getTime();setTab(tab='all');},children:/*#__PURE__*/_jsx(\"span\",{children:\"All\"})}),/*#__PURE__*/_jsx(\"div\",{className:tab==='Mention'?'tab activityTabSelected':'tab',onClick:function onClick(){timeAgoRef.current=[];cursorId.current=new Date().getTime();setTab(tab='Mention');},children:/*#__PURE__*/_jsx(\"span\",{children:\"Mentions\"})}),/*#__PURE__*/_jsx(\"div\",{className:tab==='Repost'?'tab activityTabSelected':'tab',onClick:function onClick(){timeAgoRef.current=[];cursorId.current=new Date().getTime();setTab(tab='Repost');},children:/*#__PURE__*/_jsx(\"span\",{children:\"Reblogs\"})}),/*#__PURE__*/_jsx(\"div\",{className:tab==='Comment'?'tab activityTabSelected':'tab',onClick:function onClick(){timeAgoRef.current=[];cursorId.current=new Date().getTime();setTab(tab='Comment');},children:/*#__PURE__*/_jsx(\"span\",{children:\"Replies\"})})]})]});};export default Tabs;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Tabs.js"],"names":["React","useQuery","Cookies","Queries","FETCH_USER","Tabs","tab","setTab","cursorId","timeAgoRef","variables","query","get","loading","error","data","user","blogName","current","Date","getTime"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,C,wFACA,GAAQC,CAAAA,UAAR,CAAuBD,OAAvB,CAAQC,UAAR,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAKP,IAJJC,CAAAA,GAII,MAJJA,GAII,CAHJC,MAGI,MAHJA,MAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,UACI,MADJA,UACI,CAEJ,cAA+BR,QAAQ,CAACG,UAAD,CAAa,CAClDM,SAAS,CAAE,CACTC,KAAK,CAAET,OAAO,CAACU,GAAR,CAAY,aAAZ,CADE,CADuC,CAAb,CAAvC,CAAMC,OAAN,WAAMA,OAAN,CAAeC,KAAf,WAAeA,KAAf,CAAsBC,IAAtB,WAAsBA,IAAtB,CAMA,GAAIF,OAAJ,CAAa,MAAO,uBAAP,CACb,GAAIC,KAAJ,CAAW,uBAAiBA,KAAjB,EAEX,GAAQE,CAAAA,IAAR,CAAiBD,IAAjB,CAAQC,IAAR,CAEA,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,YACE,SAAS,CAAC,oBADZ,UAGGA,IAAI,CAACC,QAHR,EADF,cAOE,aACE,SAAS,CAAC,iBADZ,wBAIE,YACA,SAAS,CAAEX,GAAG,GAAK,KAAR,CAAgB,yBAAhB,CAA4C,KADvD,CAEA,OAAO,CAAE,kBAAM,CACXG,UAAU,CAACS,OAAX,CAAqB,EAArB,CACAV,QAAQ,CAACU,OAAT,CAAmB,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAnB,CACAb,MAAM,CAACD,GAAG,CAAG,KAAP,CAAN,CACD,CANH,uBAQE,6BARF,EAJF,cAeE,YACE,SAAS,CAAEA,GAAG,GAAK,SAAR,CAAoB,yBAApB,CAAgD,KAD7D,CAEE,OAAO,CAAE,kBAAM,CACbG,UAAU,CAACS,OAAX,CAAqB,EAArB,CACAV,QAAQ,CAACU,OAAT,CAAmB,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAnB,CACAb,MAAM,CAACD,GAAG,CAAG,SAAP,CAAN,CACD,CANH,uBAQE,kCARF,EAfF,cA0BE,YACE,SAAS,CAAEA,GAAG,GAAK,QAAR,CAAmB,yBAAnB,CAA+C,KAD5D,CAEE,OAAO,CAAE,kBAAM,CACbG,UAAU,CAACS,OAAX,CAAqB,EAArB,CACAV,QAAQ,CAACU,OAAT,CAAmB,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAnB,CACAb,MAAM,CAACD,GAAG,CAAG,QAAP,CAAN,CACD,CANH,uBAQE,iCARF,EA1BF,cAqCE,YACE,SAAS,CAAEA,GAAG,GAAK,SAAR,CAAoB,yBAApB,CAAgD,KAD7D,CAEE,OAAO,CAAE,kBAAM,CACbG,UAAU,CAACS,OAAX,CAAqB,EAArB,CACAV,QAAQ,CAACU,OAAT,CAAmB,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAnB,CACAb,MAAM,CAACD,GAAG,CAAG,SAAP,CAAN,CACD,CANH,uBAQE,iCARF,EArCF,GAPF,GADF,CA2DD,CA7ED,CA+EA,cAAeD,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_USER } = Queries;\n\nconst Tabs = ({\n  tab, \n  setTab,\n  cursorId,\n  timeAgoRef\n}) => {\n\n  let { loading, error, data } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading) return 'User Fetch Loading...';\n  if (error) return `Error: ${error}`;\n\n  const { user } = data;\n\n  return(\n    <React.Fragment>\n      <div\n        className='activityTabsHeader'\n      >\n        {user.blogName}\n      </div>\n\n      <div\n        className='activityTabsDiv'\n      >\n\n        <div\n        className={tab === 'all' ? 'tab activityTabSelected' : 'tab'}\n        onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'all')\n          }}\n        >\n          <span>All</span>\n        </div>\n\n        <div\n          className={tab === 'Mention' ? 'tab activityTabSelected' : 'tab'}\n          onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'Mention')\n          }}\n        >\n          <span>Mentions</span>\n        </div>\n\n        <div\n          className={tab === 'Repost' ? 'tab activityTabSelected' : 'tab'}\n          onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'Repost')\n          }}\n        >\n          <span>Reblogs</span>\n        </div>\n\n        <div\n          className={tab === 'Comment' ? 'tab activityTabSelected' : 'tab'}\n          onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'Comment')\n          }}\n        >\n          <span>Replies</span>\n        </div>\n        \n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}