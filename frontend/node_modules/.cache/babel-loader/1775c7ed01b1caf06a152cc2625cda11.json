{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/social/Delete_Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  DELETE_COMMENT\n} = Mutations;\nconst {\n  FETCH_LIKES_REPOSTS_AND_COMMENTS\n} = Queries;\n\nconst DeleteComment = ({\n  post,\n  comment\n}) => {\n  _s();\n\n  let [active, setActive] = useState(false);\n  let [deleteComment] = useMutation(DELETE_COMMENT, {\n    update(client) {\n      var query = FETCH_LIKES_REPOSTS_AND_COMMENTS;\n      var readFeed = client.readQuery({\n        query: query,\n        variables: {\n          postId: post._id\n        }\n      });\n      var {\n        fetchLikesRepostsAndComments\n      } = readFeed;\n      var newPostArr = fetchLikesRepostsAndComments.filter(note => {\n        if (note._id === comment._id) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      client.writeQuery({\n        query: query,\n        variables: {\n          postId: post._id\n        },\n        data: {\n          fetchLikesRepostsAndComments: newPostArr\n        }\n      });\n    },\n\n    onCompleted() {\n      setActive(active = false);\n    }\n\n  });\n\n  if (comment.user.blogName === Cookies.get('currentUser')) {\n    if (active) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"commentOptions active\",\n          src: \"https://img.icons8.com/ios-glyphs/64/000000/more.png\",\n          alt: \"\",\n          onClick: () => {\n            setActive(active = false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleteCommentContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deleteCommentBtn\",\n            onClick: () => {\n              deleteComment({\n                variables: {\n                  commentId: comment._id,\n                  postId: post._id\n                }\n              });\n            },\n            children: \"Delete reply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"closeCommentBtn\",\n            onClick: () => {\n              setActive(active = false);\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"commentOptions\",\n          src: \"https://img.icons8.com/ios-glyphs/64/000000/more.png\",\n          alt: \"\",\n          onClick: () => {\n            setActive(active = true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(DeleteComment, \"NJ+Q2JumZICeOCcPn8BPA83ewho=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteComment;\nexport default DeleteComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteComment\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/social/Delete_Comment.js"],"names":["React","useState","useMutation","Cookies","Queries","Mutations","DELETE_COMMENT","FETCH_LIKES_REPOSTS_AND_COMMENTS","DeleteComment","post","comment","active","setActive","deleteComment","update","client","query","readFeed","readQuery","variables","postId","_id","fetchLikesRepostsAndComments","newPostArr","filter","note","writeQuery","data","onCompleted","user","blogName","get","commentId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nconst { DELETE_COMMENT } = Mutations;\nconst { FETCH_LIKES_REPOSTS_AND_COMMENTS } = Queries\n\nconst DeleteComment = ({\n  post, \n  comment\n}) => {\n  let [active, setActive] = useState(false)\n  \n  let [deleteComment] = useMutation(DELETE_COMMENT, {\n    update(client) {\n      var query = FETCH_LIKES_REPOSTS_AND_COMMENTS\n      \n      var readFeed = client.readQuery({\n        query: query,\n        variables: {\n          postId: post._id\n        }\n      })\n      \n      var { fetchLikesRepostsAndComments } = readFeed;\n      \n      var newPostArr = fetchLikesRepostsAndComments.filter(note => {\n        if (note._id === comment._id) {\n          return false\n        } else {\n          return true\n        }\n      })\n\n      client.writeQuery({\n        query: query,\n        variables: {\n          postId: post._id\n        },\n        data: {\n          fetchLikesRepostsAndComments: newPostArr\n        }\n      })\n    },\n    onCompleted() {\n      setActive(active = false)\n    }\n  })\n\n  if (comment.user.blogName === Cookies.get('currentUser')) {\n    if (active) {\n      return (\n        <React.Fragment>\n          <img\n              className='commentOptions active'\n              src=\"https://img.icons8.com/ios-glyphs/64/000000/more.png\"\n              alt=''\n              onClick={() => {\n                setActive(active = false)\n              }}\n            />\n          <div\n            className='deleteCommentContainer'\n          >\n            <div\n              className='deleteCommentBtn'\n              onClick={() => {\n                deleteComment({\n                  variables: {\n                    commentId: comment._id,\n                    postId: post._id\n                  }\n                })\n              }}\n            >\n              Delete reply\n            </div>\n            <div\n              className='closeCommentBtn'\n              onClick={() => {\n                setActive(active = false)\n              }}\n            >\n              Close\n            </div>\n          </div>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <img\n            className='commentOptions'\n            src=\"https://img.icons8.com/ios-glyphs/64/000000/more.png\"\n            alt=''\n            onClick={() => {\n              setActive(active = true)\n            }}\n          />\n        </React.Fragment>\n      )\n    }\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n\n}\n\nexport default DeleteComment;"]},"metadata":{},"sourceType":"module"}