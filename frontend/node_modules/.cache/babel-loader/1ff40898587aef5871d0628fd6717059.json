{"ast":null,"code":"//preview files\n\n/* eslint-disable no-loop-func */\nimport axios from 'axios';\nimport Validator from 'validator';\n\nconst handlePostId = post => {\n  if (post.kind === 'Like' && post.kind === 'Repost') {\n    return post.post.post._id;\n  } else if (post.kind === 'Like') {\n    return post.post._id;\n  } else {\n    return post._id;\n  }\n};\n\nconst previewMainImages = (e, main, mainImageFiles, setMainImageFiles, setErrMessage, errMessage) => {\n  const files = Object.values(e.currentTarget.files);\n\n  if (mainImageFiles.length + 1 > 10) {\n    setErrMessage(errMessage = 'Only 10 images can be uploaded here');\n    return;\n  }\n\n  const readAndPreview = (file, i) => {\n    var reader = new FileReader();\n\n    reader.onloadend = () => {\n      var imgObj = {};\n      imgObj.src = reader.result;\n      imgObj.alt = file.name;\n      imgObj.srcType = 'newImgFile';\n      imgObj._id = null;\n      imgObj.arrPos = mainImageFiles.length;\n      file.arrPos = mainImageFiles.length;\n      main.current.push(imgObj);\n      setMainImageFiles(mainImageFiles = [...mainImageFiles, file]);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  if (files) {\n    files.forEach((f, i) => {\n      readAndPreview(f, i);\n    });\n  }\n};\n\nconst previewProfilePic = (e, previewProfilePicRef, profileImageFile, setProfileImageFile) => {\n  const file = Object.values(e.currentTarget.files);\n  var reader = new FileReader();\n  reader.addEventListener('load', () => {\n    previewProfilePicRef.current.src = reader.result;\n    previewProfilePicRef.current.alt = '';\n    setProfileImageFile(profileImageFile = file);\n  }, false);\n\n  if (file[0]) {\n    reader.readAsDataURL(file[0]);\n  }\n};\n\nconst previewBodyImages = (e, body, bodyImageFiles, setBodyImageFiles, setErrMessage, errMessage) => {\n  const files = Object.values(e.currentTarget.files);\n\n  if (bodyImageFiles.length + 1 > 10) {\n    setErrMessage(errMessage = 'Only 10 images can be uploaded here');\n    return;\n  }\n\n  const readAndPreview = (file, i) => {\n    var reader = new FileReader();\n\n    reader.onloadend = () => {\n      var imgObj = {};\n      imgObj.src = reader.result;\n      imgObj.alt = file.name;\n      imgObj.srcType = 'newImgFile';\n      imgObj._id = null;\n      imgObj.arrPos = bodyImageFiles.length;\n      file.arrPos = bodyImageFiles.length;\n      body.current.push(imgObj);\n      setBodyImageFiles(bodyImageFiles = [...bodyImageFiles, file]);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  if (files) {\n    files.forEach((f, i) => {\n      readAndPreview(f, i);\n    });\n  }\n};\n\nconst previewLink = e => {\n  if (Validator.isURL(e.target.value)) {\n    var imgObj = {};\n    imgObj.src = e.target.value;\n    imgObj.alt = '';\n    imgObj._id = null;\n    imgObj.kind = 'Image';\n    imgObj.srcType = 'newImgLink';\n    return imgObj;\n  }\n};\n\nconst previewAudio = (e, mm, audioFile, setAudioFile, title, setTitle, artist, setArtist, album, setAlbum, src, setSrc, active, setActive, objsToClean, post) => {\n  const file = e.currentTarget.files[0];\n  var reader = new FileReader();\n\n  reader.onloadend = () => {\n    if (post) {\n      objsToClean.current = [post.audioFile];\n    }\n\n    mm.parseBlob(file).then(meta => {\n      const {\n        common\n      } = meta;\n      setTitle(title = common.title || '');\n      setArtist(artist = common.artist || '');\n      setAlbum(album = common.album || '');\n      setSrc(src = reader.result);\n      setAudioFile(audioFile = file);\n      setActive(active = true);\n    });\n  };\n\n  reader.readAsDataURL(file);\n};\n\nconst previewVideoFile = (e, post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, objsToClean) => {\n  const file = e.currentTarget.files[0];\n  const videoPath = URL.createObjectURL(file);\n\n  if (post) {\n    objsToClean.current = [post.videoLink];\n  }\n\n  setVideoFile(videoFile = file);\n  setVideoObj(videoObj = videoPath);\n  setActive(active = true);\n};\n\nconst previewVideoLink = (e, post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, objsToClean) => {\n  if (Validator.isURL(e.target.value)) {\n    var matched = new RegExp(/youtube|vimeo|twitch|dailymotion/);\n\n    if (matched) {\n      if (post) {\n        objsToClean.current = [post.videoLink];\n      }\n\n      if (videoFile) {\n        setVideoFile(videoFile = '');\n      }\n\n      setVideoObj(videoObj = e.target.value);\n      setActive(active = true);\n    }\n  }\n}; //remove objs\n\n\nconst removeMainObj = (srcType, main, setMainImageFiles, mainImageFiles, objsToClean, mainIdx, optionalArrPos) => {\n  var plucked = main.current.splice(mainIdx, 1);\n\n  if (srcType === 'oldImgUpload' || srcType === 'oldImgLink') {\n    objsToClean.current.push(plucked[0]);\n  }\n\n  if (srcType === 'newImgFile' && mainImageFiles.length === 1) {\n    setMainImageFiles(mainImageFiles = []);\n  } else if (srcType === 'newImgFile') {\n    var mainImageFileDup = [...mainImageFiles]; //use arrPos key to find correct\n    //image file to delete\n\n    mainImageFileDup.forEach((file, i) => {\n      if (file.arrPos === optionalArrPos) {\n        mainImageFileDup.splice(i, 1);\n      }\n    }); //remap arrPos key for bodyImageFiles and newImgFile\n    //in main.current, this ensures consistent\n    //drag and drop if file is deleted\n    //and uploading a new one\n\n    mainImageFileDup.forEach((f, i) => {\n      f.arrPos = i;\n    });\n    var i2 = 0;\n    main.current.forEach((obj, i) => {\n      if (obj.srcType === 'newImgFile') {\n        obj.arrPos = i2;\n        i2++;\n      }\n    });\n    setMainImageFiles(mainImageFiles = mainImageFileDup);\n  }\n};\n\nconst removeBodyObj = (srcType, body, setBodyImageFiles, bodyImageFiles, objsToClean, bodyIdx, optionalArrPos) => {\n  var plucked = body.current.splice(bodyIdx, 1);\n\n  if (srcType === 'oldImgUpload' || srcType === 'oldImgLink') {\n    objsToClean.current.push(plucked[0]);\n  }\n\n  if (srcType === 'newImgFile' && bodyImageFiles.length === 1) {\n    setBodyImageFiles(bodyImageFiles = []);\n  } else if (srcType === 'newImgFile') {\n    var bodyImageFileDup = [...bodyImageFiles]; //use arrPos key to find correct\n    //image file to delete\n\n    bodyImageFileDup.forEach((file, i) => {\n      if (file.arrPos === optionalArrPos) {\n        bodyImageFileDup.splice(i, 1);\n      }\n    }); //remap arrPos key for bodyImageFiles and newImgFile\n    //in body.current, this ensures consistent\n    //drag and drop in the case of an image\n    //being removed and then a new image added\n\n    bodyImageFileDup.forEach((f, i) => {\n      f.arrPos = i;\n    });\n    var i2 = 0;\n    body.current.forEach((obj, i) => {\n      if (obj.srcType === 'newImgFile') {\n        obj.arrPos = i2;\n        i2++;\n      }\n    });\n    setBodyImageFiles(bodyImageFiles = bodyImageFileDup);\n  }\n};\n\nconst removeTag = (i, tags, setTags) => {\n  var filtered = tags.filter((t, i2) => i !== i2);\n  setTags(tags = filtered);\n};\n\nconst removeLinkSiteNameAndImage = (siteName, setSitename, imageUrl, setImageUrl, showNameAndUrl, setShowNameAndUrl) => {\n  setSitename(siteName = '');\n  setImageUrl(imageUrl = '');\n  setShowNameAndUrl(showNameAndUrl = false);\n};\n\nconst removeLinkTitleAndDesc = (title, setTitle, setLinkDescription, linkDescription, showTitleAndLinkDescription, setShowTitleAndLinkDescription) => {\n  setTitle(title = '');\n  setLinkDescription(linkDescription = '');\n  setShowTitleAndLinkDescription(showTitleAndLinkDescription = false);\n};\n\nconst removeAudioObj = (post, audioObj, setAudioObj, audioFile, setAudioFile, active, setActive, objsToClean) => {\n  if (post) {\n    objsToClean.current = [post.audioLink];\n  }\n\n  setAudioFile(audioFile = {});\n  setActive(active = false);\n};\n\nconst removeVideoObj = (post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, isLink, setIsLink, objsToClean) => {\n  if (post) {\n    objsToClean.current = [post.videoLink];\n  }\n\n  setVideoObj(videoObj = {});\n  setVideoFile(videoFile = {});\n\n  if (isLink) {\n    setIsLink(isLink = false);\n  }\n\n  setActive(active = false);\n};\n\nconst removeProfilePic = (previewProfilePicRef, profileImageFile, setProfileImageFile, edit, render, setRender) => {\n  previewProfilePicRef.current = {};\n  setProfileImageFile(profileImageFile = null);\n\n  if (edit) {\n    setRender(render + 1);\n  }\n}; //handle tags\n\n\nconst handleTagInput = (tag, setTag, tags, setTags) => {\n  //eslint-disable-next-line\n  var trimmedTag = tag.trim();\n  var noSingleHash = new RegExp(/^#$/, 'g');\n  var validText = trimmedTag.match(noSingleHash);\n\n  if (!validText) {\n    //eslint-disable-next-line\n    var matchText = new RegExp(/[\\w+\\s+'\".,!@$%&*()_+=?<>;:-]*/, 'g');\n    var cleanedText = tag.match(matchText);\n\n    if (cleanedText) {\n      var cleanedArr = cleanedText.filter(str => str !== '');\n      cleanedArr[0].trim();\n      setTags(tags.concat(`#${cleanedArr[0]}`));\n      setTag(tag = '');\n    }\n  } else {\n    setTag(tag = '');\n  }\n};\n\nconst handleFoundTag = (title, setTags, tags, setTag, tag) => {\n  setTags(tags.concat(title));\n  setTag(tag = '');\n}; //drag and drop\n\n\nconst drag = (e, i, obj) => {\n  e.dataTransfer.setData('oldIndex', i);\n  e.dataTransfer.setData('obj', obj);\n};\n\nconst onDropBody = (e, i, body, bodyImageFiles) => {\n  let oldIdx = e.dataTransfer.getData('oldIndex');\n  let obj = e.dataTransfer.getData('obj');\n  let parsedObj = JSON.parse(obj);\n\n  if (parsedObj.srcType === 'newImgFile') {\n    body.current.splice(oldIdx, 1);\n    body.current.splice(i, 0, parsedObj);\n    let sortedArrBody = [];\n    let filteredBody = body.current.filter(obj => obj.srcType === 'newImgFile');\n    bodyImageFiles.forEach(file => {\n      filteredBody.forEach((obj, i) => {\n        if (file.arrPos === obj.arrPos) {\n          sortedArrBody.splice(i, 0, file);\n        }\n      });\n    });\n    return sortedArrBody;\n  } else {\n    body.current.splice(oldIdx, 1);\n    body.current.splice(i, 0, parsedObj);\n    return [...bodyImageFiles];\n  }\n};\n\nconst onDropMain = (e, i, main, mainImageFiles) => {\n  var oldIdx = e.dataTransfer.getData('oldIndex');\n  var obj = e.dataTransfer.getData('obj');\n  var parsedObj = JSON.parse(obj);\n\n  if (parsedObj.srcType === 'newImgFile') {\n    //if we're dragging and dropping an uploaded image\n    //the main.current needs to tell mainImageFiles\n    //how it should be ordered \n    main.current.splice(oldIdx, 1);\n    main.current.splice(i, 0, parsedObj);\n    let sortedArrMain = [];\n    let filteredMain = main.current.filter(obj => obj.srcType === 'newImgFile');\n    mainImageFiles.forEach(file => {\n      filteredMain.forEach((obj, i) => {\n        if (file.arrPos === obj.arrPos) {\n          sortedArrMain.splice(i, 0, file);\n        }\n      });\n    });\n    return sortedArrMain;\n  } else {\n    main.current.splice(oldIdx, 1);\n    main.current.splice(i, 0, parsedObj);\n    return [...mainImageFiles];\n  }\n};\n\nconst allowDrop = e => {\n  e.preventDefault();\n}; //async link preview\n\n\nconst fetchUrlMetadata = link => {\n  return axios.post('/api/posts/metadata', {\n    params: {\n      url: link\n    }\n  });\n}; //async file upload\n\n\nconst mainPost = mainImagesFormData => {\n  return axios.post('/api/posts/images', mainImagesFormData, {\n    headers: {\n      'Content-Type': 'undefined'\n    }\n  }).then(mainRes => {\n    let mainImgObj = mainRes.data;\n    return mainImgObj;\n  });\n};\n\nconst bodyPost = bodyImagesFormData => {\n  return axios.post('/api/posts/images', bodyImagesFormData, {\n    headers: {\n      'Content-Type': 'undefined'\n    }\n  }).then(bodyRes => {\n    let bodyImgObj = bodyRes.data;\n    return bodyImgObj;\n  });\n};\n\nconst audioPost = audioFileFormData => {\n  return axios.post('/api/posts/audio', audioFileFormData, {\n    headers: {\n      'Content-Type': 'undefined'\n    }\n  }).then(audioRes => {\n    let audioObj = audioRes.data;\n    return audioObj;\n  });\n};\n\nconst videoPost = (videoFileFormData, isLink, videoObj) => {\n  if (isLink) {\n    return axios.post('/api/posts/video', {\n      params: {\n        url: videoObj\n      }\n    }).then(videoRes => {\n      let videoObj = videoRes.data;\n      return videoObj;\n    });\n  } else {\n    return axios.post('/api/posts/video', videoFileFormData).then(videoRes => {\n      let videoObj = videoRes.data;\n      return videoObj;\n    });\n  }\n}; //submit functions\n\n\nconst handleMentions = (body, stripAllImgs) => {\n  var descContent = stripAllImgs(body).map(d => d.content);\n  var mentions = descContent.reduce((array, string) => {\n    var regexMention = new RegExp(/@\\w+/, 'gm');\n    return array.concat(string.match(regexMention));\n  }, []);\n\n  if (mentions[0] !== null) {\n    return Array.from(new Set(mentions));\n  } else {\n    return [];\n  }\n};\n\nconst discardMentions = (post, mentions, objsToClean) => {\n  if (post) {\n    var oldMentions = post.mentions.map(m => ({\n      _id: m._id,\n      mention: '@' + m.mention,\n      kind: 'Mention'\n    }));\n    oldMentions.forEach(oldM => {\n      if (!mentions.includes(oldM.mention)) {\n        objsToClean.current.push(oldM);\n      }\n    });\n  }\n};\n\nconst handleFormData = imageFileArr => {\n  var formData = new FormData();\n\n  for (var i = 0; i < imageFileArr.length; i++) {\n    var file2 = imageFileArr[i];\n    formData.append('images', file2);\n  }\n\n  return formData;\n};\n\nconst stripAllImgs = refArray => {\n  return refArray.current.filter(obj => {\n    if (obj.srcType === 'text' || obj.srcType === 'oldText') {\n      return true;\n    } else {\n      return false;\n    }\n  });\n};\n\nconst handleUploadedFiles = (refArray, uploads) => {\n  //reinsert uploads\n  //at index and reset displayIdx\n  var refArrayDup = [...refArray.current];\n  var i1 = 0;\n  refArrayDup.forEach((obj, i) => {\n    var upload = uploads[i1];\n\n    if (obj.srcType === 'newImgFile') {\n      upload.displayIdx = i;\n      refArrayDup.splice(i, 1, upload);\n      i1++;\n    }\n  });\n  return refArrayDup.filter(obj => obj.srcType !== 'text');\n};\n\nconst handleAllTextAudioPost = (allText, descriptions, title, artist, album) => {\n  allText.current += title + ' ' + artist + ' ' + album;\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n};\n\nconst handleAllTextTextPost = (allText, descriptions, title) => {\n  allText.current += title + ' ';\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n};\n\nconst handleAllTextChatPost = (allText, descriptions, chat) => {\n  var span2 = document.createElement('span');\n  span2.innerHTML = chat;\n  allText.current += span2.textContent;\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n};\n\nconst handleAllTextLinkPost = (allText, descriptions, linkObj) => {\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n  Object.values(linkObj).forEach(string => {\n    allText.current += string;\n  });\n};\n\nconst handleAllTextPhotoPost = (allText, descriptions) => {\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n};\n\nconst handleAllTextQuotePost = (allText, descriptions, quote, source) => {\n  allText.current += quote;\n  allText.current += source;\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n};\n\nconst handleAllTextVideoPost = (allText, descriptions) => {\n  descriptions.forEach(d => {\n    var span = document.createElement('span');\n    span.innerHTML = d.content;\n    allText.current += span.textContent;\n  });\n}; //display idx helper\n\n\nconst resetDisplayIdx = refArr => {\n  refArr.current.forEach((obj, i) => {\n    obj.displayIdx = i;\n  });\n}; //update helper\n\n\nconst isUpdate = post => {\n  if (post) {\n    return true;\n  } else {\n    return false;\n  }\n}; //CKEditor helpers\n\n\nfunction MentionCustomization(editor) {\n  // The upcast converter will convert view <a class=\"mention\" href=\"\" data-user-id=\"\">\n  // elements to the model 'mention' text attribute.\n  editor.conversion.for('upcast').elementToAttribute({\n    view: {\n      name: 'a',\n      key: 'data-mention',\n      classes: 'mention',\n      attributes: {\n        href: true,\n        'data-user-id': true\n      }\n    },\n    model: {\n      key: 'mention',\n      value: viewItem => {\n        // The mention feature expects that the mention attribute value\n        // in the model is a plain object with a set of additional attributes.\n        // In order to create a proper object use the toMentionAttribute() helper method:\n        const mentionAttribute = editor.plugins.get('Mention').toMentionAttribute(viewItem, {\n          // Add any other properties that you need.\n          link: viewItem.getAttribute('href'),\n          userId: viewItem.getAttribute('data-user-id')\n        });\n        return mentionAttribute;\n      }\n    },\n    converterPriority: 'high'\n  }); // Downcast the model 'mention' text attribute to a view <a> element.\n\n  editor.conversion.for('downcast').attributeToElement({\n    model: 'mention',\n    view: (modelAttributeValue, {\n      writer\n    }) => {\n      // Do not convert empty attributes (lack of value means no mention).\n      if (!modelAttributeValue) {\n        return;\n      }\n\n      return writer.createAttributeElement('a', {\n        class: 'mention',\n        'data-mention': modelAttributeValue.id,\n        'data-user-id': modelAttributeValue.actualId,\n        'href': `http://localhost:3000/#/view/blog/${modelAttributeValue.id.slice(1, modelAttributeValue.id.length)}`\n      }, {\n        // Make mention attribute to be wrapped by other attribute elements.\n        priority: 20,\n        // Prevent merging mentions together.\n        id: modelAttributeValue.uid\n      });\n    },\n    converterPriority: 'high'\n  });\n} //handle scrolling\n\n\n_c = MentionCustomization;\n\nconst preventScroll = (activeVar, document) => {\n  if (activeVar) {\n    document.body.style.margin = 'fixed';\n    document.body.style.height = '100%';\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nconst allowScroll = document => {\n  document.body.style.margin = '';\n  document.body.style.height = '';\n  document.body.style.overflow = '';\n};\n\nconst PostFormUtil = {\n  handlePostId,\n  previewMainImages,\n  previewBodyImages,\n  previewLink,\n  previewAudio,\n  previewVideoFile,\n  previewVideoLink,\n  previewProfilePic,\n  removeMainObj,\n  removeBodyObj,\n  removeAudioObj,\n  removeVideoObj,\n  removeProfilePic,\n  removeTag,\n  handleTagInput,\n  handleFoundTag,\n  drag,\n  onDropBody,\n  onDropMain,\n  allowDrop,\n  removeLinkSiteNameAndImage,\n  removeLinkTitleAndDesc,\n  fetchUrlMetadata,\n  mainPost,\n  bodyPost,\n  audioPost,\n  videoPost,\n  handleFormData,\n  stripAllImgs,\n  handleUploadedFiles,\n  handleMentions,\n  discardMentions,\n  handleAllTextAudioPost,\n  handleAllTextTextPost,\n  handleAllTextChatPost,\n  handleAllTextLinkPost,\n  handleAllTextPhotoPost,\n  handleAllTextQuotePost,\n  handleAllTextVideoPost,\n  resetDisplayIdx,\n  isUpdate,\n  MentionCustomization,\n  preventScroll,\n  allowScroll\n};\nexport default PostFormUtil;\n\nvar _c;\n\n$RefreshReg$(_c, \"MentionCustomization\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/functions/post_form_util.js"],"names":["axios","Validator","handlePostId","post","kind","_id","previewMainImages","e","main","mainImageFiles","setMainImageFiles","setErrMessage","errMessage","files","Object","values","currentTarget","length","readAndPreview","file","i","reader","FileReader","onloadend","imgObj","src","result","alt","name","srcType","arrPos","current","push","readAsDataURL","forEach","f","previewProfilePic","previewProfilePicRef","profileImageFile","setProfileImageFile","addEventListener","previewBodyImages","body","bodyImageFiles","setBodyImageFiles","previewLink","isURL","target","value","previewAudio","mm","audioFile","setAudioFile","title","setTitle","artist","setArtist","album","setAlbum","setSrc","active","setActive","objsToClean","parseBlob","then","meta","common","previewVideoFile","videoObj","setVideoObj","videoFile","setVideoFile","videoPath","URL","createObjectURL","videoLink","previewVideoLink","matched","RegExp","removeMainObj","mainIdx","optionalArrPos","plucked","splice","mainImageFileDup","i2","obj","removeBodyObj","bodyIdx","bodyImageFileDup","removeTag","tags","setTags","filtered","filter","t","removeLinkSiteNameAndImage","siteName","setSitename","imageUrl","setImageUrl","showNameAndUrl","setShowNameAndUrl","removeLinkTitleAndDesc","setLinkDescription","linkDescription","showTitleAndLinkDescription","setShowTitleAndLinkDescription","removeAudioObj","audioObj","setAudioObj","audioLink","removeVideoObj","isLink","setIsLink","removeProfilePic","edit","render","setRender","handleTagInput","tag","setTag","trimmedTag","trim","noSingleHash","validText","match","matchText","cleanedText","cleanedArr","str","concat","handleFoundTag","drag","dataTransfer","setData","onDropBody","oldIdx","getData","parsedObj","JSON","parse","sortedArrBody","filteredBody","onDropMain","sortedArrMain","filteredMain","allowDrop","preventDefault","fetchUrlMetadata","link","params","url","mainPost","mainImagesFormData","headers","mainRes","mainImgObj","data","bodyPost","bodyImagesFormData","bodyRes","bodyImgObj","audioPost","audioFileFormData","audioRes","videoPost","videoFileFormData","videoRes","handleMentions","stripAllImgs","descContent","map","d","content","mentions","reduce","array","string","regexMention","Array","from","Set","discardMentions","oldMentions","m","mention","oldM","includes","handleFormData","imageFileArr","formData","FormData","file2","append","refArray","handleUploadedFiles","uploads","refArrayDup","i1","upload","displayIdx","handleAllTextAudioPost","allText","descriptions","span","document","createElement","innerHTML","textContent","handleAllTextTextPost","handleAllTextChatPost","chat","span2","handleAllTextLinkPost","linkObj","handleAllTextPhotoPost","handleAllTextQuotePost","quote","source","handleAllTextVideoPost","resetDisplayIdx","refArr","isUpdate","MentionCustomization","editor","conversion","for","elementToAttribute","view","key","classes","attributes","href","model","viewItem","mentionAttribute","plugins","get","toMentionAttribute","getAttribute","userId","converterPriority","attributeToElement","modelAttributeValue","writer","createAttributeElement","class","id","actualId","slice","priority","uid","preventScroll","activeVar","style","margin","height","overflow","allowScroll","PostFormUtil"],"mappings":"AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,MAAIA,IAAI,CAACC,IAAL,KAAc,MAAd,IAAwBD,IAAI,CAACC,IAAL,KAAc,QAA1C,EAAoD;AAClD,WAAOD,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeE,GAAtB;AACD,GAFD,MAEO,IAAIF,IAAI,CAACC,IAAL,KAAc,MAAlB,EAA0B;AAC/B,WAAOD,IAAI,CAACA,IAAL,CAAUE,GAAjB;AACD,GAFM,MAEA;AACL,WAAOF,IAAI,CAACE,GAAZ;AACD;AACF,CARD;;AAUA,MAAMC,iBAAiB,GAAG,CACxBC,CADwB,EAExBC,IAFwB,EAGxBC,cAHwB,EAIxBC,iBAJwB,EAKxBC,aALwB,EAMxBC,UANwB,KAOrB;AAEH,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcR,CAAC,CAACS,aAAF,CAAgBH,KAA9B,CAAd;;AAEA,MAAIJ,cAAc,CAACQ,MAAf,GAAwB,CAAxB,GAA4B,EAAhC,EAAoC;AAElCN,IAAAA,aAAa,CAACC,UAAU,GAAG,qCAAd,CAAb;AACA;AAED;;AAED,QAAMM,cAAc,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAElC,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,IAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AAEvB,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACC,GAAP,GAAaJ,MAAM,CAACK,MAApB;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAaR,IAAI,CAACS,IAAlB;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,YAAjB;AACAL,MAAAA,MAAM,CAACnB,GAAP,GAAa,IAAb;AACAmB,MAAAA,MAAM,CAACM,MAAP,GAAgBrB,cAAc,CAACQ,MAA/B;AACAE,MAAAA,IAAI,CAACW,MAAL,GAAcrB,cAAc,CAACQ,MAA7B;AAGAT,MAAAA,IAAI,CAACuB,OAAL,CAAaC,IAAb,CAAkBR,MAAlB;AACAd,MAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAC,GAAGA,cAAJ,EAAoBU,IAApB,CAAlB,CAAjB;AAED,KAdD;;AAgBAE,IAAAA,MAAM,CAACY,aAAP,CAAqBd,IAArB;AAED,GAtBD;;AAwBA,MAAIN,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACqB,OAAN,CAAc,CAACC,CAAD,EAAIf,CAAJ,KAAU;AACrBF,MAAAA,cAAc,CAACiB,CAAD,EAAIf,CAAJ,CAAd;AACF,KAFD;AAGD;AACF,CA/CD;;AAiDA,MAAMgB,iBAAiB,GAAG,CACxB7B,CADwB,EAExB8B,oBAFwB,EAGxBC,gBAHwB,EAIxBC,mBAJwB,KAKrB;AACH,QAAMpB,IAAI,GAAGL,MAAM,CAACC,MAAP,CAAcR,CAAC,CAACS,aAAF,CAAgBH,KAA9B,CAAb;AAEA,MAAIQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;AAEAD,EAAAA,MAAM,CAACmB,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AACpCH,IAAAA,oBAAoB,CAACN,OAArB,CAA6BN,GAA7B,GAAmCJ,MAAM,CAACK,MAA1C;AACAW,IAAAA,oBAAoB,CAACN,OAArB,CAA6BJ,GAA7B,GAAmC,EAAnC;AACAY,IAAAA,mBAAmB,CAACD,gBAAgB,GAAGnB,IAApB,CAAnB;AACD,GAJD,EAIG,KAJH;;AAMA,MAAIA,IAAI,CAAC,CAAD,CAAR,EAAa;AACXE,IAAAA,MAAM,CAACY,aAAP,CAAqBd,IAAI,CAAC,CAAD,CAAzB;AACD;AACF,CAnBD;;AAqBA,MAAMsB,iBAAiB,GAAG,CACtBlC,CADsB,EAEtBmC,IAFsB,EAGtBC,cAHsB,EAItBC,iBAJsB,EAKtBjC,aALsB,EAMtBC,UANsB,KAOnB;AAEL,QAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcR,CAAC,CAACS,aAAF,CAAgBH,KAA9B,CAAd;;AAEA,MAAI8B,cAAc,CAAC1B,MAAf,GAAwB,CAAxB,GAA4B,EAAhC,EAAoC;AAElCN,IAAAA,aAAa,CAACC,UAAU,GAAG,qCAAd,CAAb;AACA;AAED;;AAED,QAAMM,cAAc,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAElC,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,IAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AAEvB,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACC,GAAP,GAAaJ,MAAM,CAACK,MAApB;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAaR,IAAI,CAACS,IAAlB;AACAJ,MAAAA,MAAM,CAACK,OAAP,GAAiB,YAAjB;AACAL,MAAAA,MAAM,CAACnB,GAAP,GAAa,IAAb;AACAmB,MAAAA,MAAM,CAACM,MAAP,GAAgBa,cAAc,CAAC1B,MAA/B;AACAE,MAAAA,IAAI,CAACW,MAAL,GAAca,cAAc,CAAC1B,MAA7B;AAEAyB,MAAAA,IAAI,CAACX,OAAL,CAAaC,IAAb,CAAkBR,MAAlB;AACAoB,MAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAC,GAAGA,cAAJ,EAAoBxB,IAApB,CAAlB,CAAjB;AACD,KAZD;;AAcAE,IAAAA,MAAM,CAACY,aAAP,CAAqBd,IAArB;AAED,GApBD;;AAsBA,MAAIN,KAAJ,EAAW;AACTA,IAAAA,KAAK,CAACqB,OAAN,CAAc,CAACC,CAAD,EAAIf,CAAJ,KAAU;AACtBF,MAAAA,cAAc,CAACiB,CAAD,EAAIf,CAAJ,CAAd;AACD,KAFD;AAGD;AACF,CA7CD;;AA+CA,MAAMyB,WAAW,GACftC,CADkB,IAEf;AACH,MAAIN,SAAS,CAAC6C,KAAV,CAAgBvC,CAAC,CAACwC,MAAF,CAASC,KAAzB,CAAJ,EAAqC;AACnC,QAAIxB,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACC,GAAP,GAAalB,CAAC,CAACwC,MAAF,CAASC,KAAtB;AACAxB,IAAAA,MAAM,CAACG,GAAP,GAAa,EAAb;AACAH,IAAAA,MAAM,CAACnB,GAAP,GAAa,IAAb;AACAmB,IAAAA,MAAM,CAACpB,IAAP,GAAc,OAAd;AACAoB,IAAAA,MAAM,CAACK,OAAP,GAAiB,YAAjB;AAEA,WAAOL,MAAP;AACD;AACF,CAbD;;AAeA,MAAMyB,YAAY,GAAG,CACnB1C,CADmB,EAEnB2C,EAFmB,EAGnBC,SAHmB,EAInBC,YAJmB,EAKnBC,KALmB,EAMnBC,QANmB,EAOnBC,MAPmB,EAQnBC,SARmB,EASnBC,KATmB,EAUnBC,QAVmB,EAWnBjC,GAXmB,EAYnBkC,MAZmB,EAanBC,MAbmB,EAcnBC,SAdmB,EAenBC,WAfmB,EAgBnB3D,IAhBmB,KAiBhB;AACH,QAAMgB,IAAI,GAAGZ,CAAC,CAACS,aAAF,CAAgBH,KAAhB,CAAsB,CAAtB,CAAb;AAEA,MAAIQ,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,EAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvB,QAAIpB,IAAJ,EAAU;AACR2D,MAAAA,WAAW,CAAC/B,OAAZ,GAAsB,CAAC5B,IAAI,CAACgD,SAAN,CAAtB;AACD;;AAEDD,IAAAA,EAAE,CAACa,SAAH,CAAa5C,IAAb,EAAmB6C,IAAnB,CAAwBC,IAAI,IAAI;AAC9B,YAAM;AAAEC,QAAAA;AAAF,UAAaD,IAAnB;AACAX,MAAAA,QAAQ,CAACD,KAAK,GAAGa,MAAM,CAACb,KAAP,IAAgB,EAAzB,CAAR;AACAG,MAAAA,SAAS,CAACD,MAAM,GAAGW,MAAM,CAACX,MAAP,IAAiB,EAA3B,CAAT;AACAG,MAAAA,QAAQ,CAACD,KAAK,GAAGS,MAAM,CAACT,KAAP,IAAgB,EAAzB,CAAR;AACAE,MAAAA,MAAM,CAAClC,GAAG,GAAGJ,MAAM,CAACK,MAAd,CAAN;AACA0B,MAAAA,YAAY,CAACD,SAAS,GAAGhC,IAAb,CAAZ;AACA0C,MAAAA,SAAS,CAACD,MAAM,GAAG,IAAV,CAAT;AACD,KARD;AASD,GAdD;;AAgBAvC,EAAAA,MAAM,CAACY,aAAP,CAAqBd,IAArB;AACD,CAvCD;;AAyCA,MAAMgD,gBAAgB,GAAG,CACvB5D,CADuB,EAEvBJ,IAFuB,EAGvBiE,QAHuB,EAIvBC,WAJuB,EAKvBC,SALuB,EAMvBC,YANuB,EAOvBX,MAPuB,EAQvBC,SARuB,EASvBC,WATuB,KAUpB;AACH,QAAM3C,IAAI,GAAGZ,CAAC,CAACS,aAAF,CAAgBH,KAAhB,CAAsB,CAAtB,CAAb;AACA,QAAM2D,SAAS,GAAGC,GAAG,CAACC,eAAJ,CAAoBvD,IAApB,CAAlB;;AAEA,MAAIhB,IAAJ,EAAU;AACR2D,IAAAA,WAAW,CAAC/B,OAAZ,GAAsB,CAAC5B,IAAI,CAACwE,SAAN,CAAtB;AACD;;AAEDJ,EAAAA,YAAY,CAACD,SAAS,GAAGnD,IAAb,CAAZ;AACAkD,EAAAA,WAAW,CAACD,QAAQ,GAAGI,SAAZ,CAAX;AACAX,EAAAA,SAAS,CAACD,MAAM,GAAG,IAAV,CAAT;AACD,CArBD;;AAuBA,MAAMgB,gBAAgB,GAAG,CACvBrE,CADuB,EAEvBJ,IAFuB,EAGvBiE,QAHuB,EAIvBC,WAJuB,EAKvBC,SALuB,EAMvBC,YANuB,EAOvBX,MAPuB,EAQvBC,SARuB,EASvBC,WATuB,KAUpB;AACH,MAAI7D,SAAS,CAAC6C,KAAV,CAAgBvC,CAAC,CAACwC,MAAF,CAASC,KAAzB,CAAJ,EAAqC;AACnC,QAAI6B,OAAO,GAAG,IAAIC,MAAJ,CAAW,kCAAX,CAAd;;AAEA,QAAID,OAAJ,EAAa;AACX,UAAI1E,IAAJ,EAAU;AACR2D,QAAAA,WAAW,CAAC/B,OAAZ,GAAsB,CAAC5B,IAAI,CAACwE,SAAN,CAAtB;AACD;;AAED,UAAIL,SAAJ,EAAe;AACbC,QAAAA,YAAY,CAACD,SAAS,GAAG,EAAb,CAAZ;AACD;;AAEDD,MAAAA,WAAW,CAACD,QAAQ,GAAG7D,CAAC,CAACwC,MAAF,CAASC,KAArB,CAAX;AACAa,MAAAA,SAAS,CAACD,MAAM,GAAG,IAAV,CAAT;AACD;AACF;AACF,CA3BD,C,CA6BA;;;AAEA,MAAMmB,aAAa,GAAG,CAClBlD,OADkB,EAElBrB,IAFkB,EAGlBE,iBAHkB,EAIlBD,cAJkB,EAKlBqD,WALkB,EAMlBkB,OANkB,EAOlBC,cAPkB,KAQf;AAEL,MAAIC,OAAO,GAAG1E,IAAI,CAACuB,OAAL,CAAaoD,MAAb,CAAoBH,OAApB,EAA6B,CAA7B,CAAd;;AACA,MAAInD,OAAO,KAAK,cAAZ,IAA8BA,OAAO,KAAK,YAA9C,EAA4D;AAC1DiC,IAAAA,WAAW,CAAC/B,OAAZ,CAAoBC,IAApB,CAAyBkD,OAAO,CAAC,CAAD,CAAhC;AACD;;AAED,MAAIrD,OAAO,KAAK,YAAZ,IAA4BpB,cAAc,CAACQ,MAAf,KAA0B,CAA1D,EAA6D;AAE3DP,IAAAA,iBAAiB,CAACD,cAAc,GAAG,EAAlB,CAAjB;AAED,GAJD,MAIO,IAAIoB,OAAO,KAAK,YAAhB,EAA8B;AACnC,QAAIuD,gBAAgB,GAAG,CAAC,GAAG3E,cAAJ,CAAvB,CADmC,CAGnC;AACA;;AACA2E,IAAAA,gBAAgB,CAAClD,OAAjB,CAAyB,CAACf,IAAD,EAAOC,CAAP,KAAa;AACpC,UAAID,IAAI,CAACW,MAAL,KAAgBmD,cAApB,EAAoC;AAClCG,QAAAA,gBAAgB,CAACD,MAAjB,CAAwB/D,CAAxB,EAA2B,CAA3B;AACD;AACF,KAJD,EALmC,CAWnC;AACA;AACA;AACA;;AACAgE,IAAAA,gBAAgB,CAAClD,OAAjB,CAAyB,CAACC,CAAD,EAAIf,CAAJ,KAAU;AACjCe,MAAAA,CAAC,CAACL,MAAF,GAAWV,CAAX;AACD,KAFD;AAIA,QAAIiE,EAAE,GAAG,CAAT;AACA7E,IAAAA,IAAI,CAACuB,OAAL,CAAaG,OAAb,CAAqB,CAACoD,GAAD,EAAMlE,CAAN,KAAY;AAC/B,UAAIkE,GAAG,CAACzD,OAAJ,KAAgB,YAApB,EAAkC;AAChCyD,QAAAA,GAAG,CAACxD,MAAJ,GAAauD,EAAb;AACAA,QAAAA,EAAE;AACH;AACF,KALD;AAOA3E,IAAAA,iBAAiB,CAACD,cAAc,GAAG2E,gBAAlB,CAAjB;AAED;AACF,CAjDD;;AAmDA,MAAMG,aAAa,GAAG,CAClB1D,OADkB,EAElBa,IAFkB,EAGlBE,iBAHkB,EAIlBD,cAJkB,EAKlBmB,WALkB,EAMlB0B,OANkB,EAOlBP,cAPkB,KAQf;AAEL,MAAIC,OAAO,GAAGxC,IAAI,CAACX,OAAL,CAAaoD,MAAb,CAAoBK,OAApB,EAA6B,CAA7B,CAAd;;AACA,MAAI3D,OAAO,KAAK,cAAZ,IAA8BA,OAAO,KAAK,YAA9C,EAA4D;AAC1DiC,IAAAA,WAAW,CAAC/B,OAAZ,CAAoBC,IAApB,CAAyBkD,OAAO,CAAC,CAAD,CAAhC;AACD;;AAED,MAAIrD,OAAO,KAAK,YAAZ,IAA4Bc,cAAc,CAAC1B,MAAf,KAA0B,CAA1D,EAA6D;AAE3D2B,IAAAA,iBAAiB,CAACD,cAAc,GAAG,EAAlB,CAAjB;AAED,GAJD,MAIO,IAAId,OAAO,KAAK,YAAhB,EAA8B;AACnC,QAAI4D,gBAAgB,GAAG,CAAC,GAAG9C,cAAJ,CAAvB,CADmC,CAGnC;AACA;;AACA8C,IAAAA,gBAAgB,CAACvD,OAAjB,CAAyB,CAACf,IAAD,EAAOC,CAAP,KAAa;AACpC,UAAID,IAAI,CAACW,MAAL,KAAgBmD,cAApB,EAAoC;AAClCQ,QAAAA,gBAAgB,CAACN,MAAjB,CAAwB/D,CAAxB,EAA2B,CAA3B;AACD;AACF,KAJD,EALmC,CAWnC;AACA;AACA;AACA;;AACAqE,IAAAA,gBAAgB,CAACvD,OAAjB,CAAyB,CAACC,CAAD,EAAIf,CAAJ,KAAU;AACjCe,MAAAA,CAAC,CAACL,MAAF,GAAWV,CAAX;AACD,KAFD;AAIA,QAAIiE,EAAE,GAAG,CAAT;AACA3C,IAAAA,IAAI,CAACX,OAAL,CAAaG,OAAb,CAAqB,CAACoD,GAAD,EAAMlE,CAAN,KAAY;AAC/B,UAAIkE,GAAG,CAACzD,OAAJ,KAAgB,YAApB,EAAkC;AAChCyD,QAAAA,GAAG,CAACxD,MAAJ,GAAauD,EAAb;AACAA,QAAAA,EAAE;AACH;AACF,KALD;AAOAzC,IAAAA,iBAAiB,CAACD,cAAc,GAAG8C,gBAAlB,CAAjB;AAED;AACF,CAjDD;;AAmDA,MAAMC,SAAS,GAAG,CAACtE,CAAD,EAAIuE,IAAJ,EAAUC,OAAV,KAAsB;AACtC,MAAIC,QAAQ,GAAGF,IAAI,CAACG,MAAL,CAAY,CAACC,CAAD,EAAIV,EAAJ,KAAWjE,CAAC,KAAKiE,EAA7B,CAAf;AACAO,EAAAA,OAAO,CAACD,IAAI,GAAGE,QAAR,CAAP;AACD,CAHD;;AAKA,MAAMG,0BAA0B,GAAG,CACjCC,QADiC,EAEjCC,WAFiC,EAGjCC,QAHiC,EAIjCC,WAJiC,EAKjCC,cALiC,EAMjCC,iBANiC,KAO9B;AACHJ,EAAAA,WAAW,CAACD,QAAQ,GAAG,EAAZ,CAAX;AACAG,EAAAA,WAAW,CAACD,QAAQ,GAAG,EAAZ,CAAX;AACAG,EAAAA,iBAAiB,CAACD,cAAc,GAAG,KAAlB,CAAjB;AACD,CAXD;;AAaA,MAAME,sBAAsB,GAAG,CAC7BlD,KAD6B,EAE7BC,QAF6B,EAG7BkD,kBAH6B,EAI7BC,eAJ6B,EAK7BC,2BAL6B,EAM7BC,8BAN6B,KAO1B;AACHrD,EAAAA,QAAQ,CAACD,KAAK,GAAG,EAAT,CAAR;AACAmD,EAAAA,kBAAkB,CAACC,eAAe,GAAG,EAAnB,CAAlB;AACAE,EAAAA,8BAA8B,CAACD,2BAA2B,GAAG,KAA/B,CAA9B;AACD,CAXD;;AAaA,MAAME,cAAc,GAAG,CACrBzG,IADqB,EAErB0G,QAFqB,EAGrBC,WAHqB,EAIrB3D,SAJqB,EAKrBC,YALqB,EAMrBQ,MANqB,EAOrBC,SAPqB,EAQrBC,WARqB,KASlB;AACH,MAAI3D,IAAJ,EAAU;AACR2D,IAAAA,WAAW,CAAC/B,OAAZ,GAAsB,CAAC5B,IAAI,CAAC4G,SAAN,CAAtB;AACD;;AAED3D,EAAAA,YAAY,CAACD,SAAS,GAAG,EAAb,CAAZ;AACAU,EAAAA,SAAS,CAACD,MAAM,GAAG,KAAV,CAAT;AACD,CAhBD;;AAkBA,MAAMoD,cAAc,GAAG,CACrB7G,IADqB,EAErBiE,QAFqB,EAGrBC,WAHqB,EAIrBC,SAJqB,EAKrBC,YALqB,EAMrBX,MANqB,EAOrBC,SAPqB,EAQrBoD,MARqB,EASrBC,SATqB,EAUrBpD,WAVqB,KAWlB;AACH,MAAI3D,IAAJ,EAAU;AACR2D,IAAAA,WAAW,CAAC/B,OAAZ,GAAsB,CAAC5B,IAAI,CAACwE,SAAN,CAAtB;AACD;;AAEDN,EAAAA,WAAW,CAACD,QAAQ,GAAG,EAAZ,CAAX;AACAG,EAAAA,YAAY,CAACD,SAAS,GAAG,EAAb,CAAZ;;AACA,MAAI2C,MAAJ,EAAY;AACVC,IAAAA,SAAS,CAACD,MAAM,GAAG,KAAV,CAAT;AACD;;AACDpD,EAAAA,SAAS,CAACD,MAAM,GAAG,KAAV,CAAT;AACD,CAtBD;;AAwBA,MAAMuD,gBAAgB,GAAG,CACvB9E,oBADuB,EAEvBC,gBAFuB,EAGvBC,mBAHuB,EAIvB6E,IAJuB,EAKvBC,MALuB,EAMvBC,SANuB,KAOpB;AACHjF,EAAAA,oBAAoB,CAACN,OAArB,GAA+B,EAA/B;AACAQ,EAAAA,mBAAmB,CAACD,gBAAgB,GAAG,IAApB,CAAnB;;AAEA,MAAI8E,IAAJ,EAAU;AACRE,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;AACF,CAdD,C,CAgBA;;;AAEA,MAAME,cAAc,GAAG,CACnBC,GADmB,EAEnBC,MAFmB,EAGnB9B,IAHmB,EAInBC,OAJmB,KAKhB;AACL;AACA,MAAI8B,UAAU,GAAGF,GAAG,CAACG,IAAJ,EAAjB;AAEA,MAAIC,YAAY,GAAG,IAAI9C,MAAJ,CAAW,KAAX,EAAkB,GAAlB,CAAnB;AACA,MAAI+C,SAAS,GAAGH,UAAU,CAACI,KAAX,CAAiBF,YAAjB,CAAhB;;AAEA,MAAI,CAACC,SAAL,EAAgB;AACd;AACA,QAAIE,SAAS,GAAG,IAAIjD,MAAJ,CAAW,gCAAX,EAA6C,GAA7C,CAAhB;AACA,QAAIkD,WAAW,GAAGR,GAAG,CAACM,KAAJ,CAAUC,SAAV,CAAlB;;AACA,QAAIC,WAAJ,EAAiB;AACf,UAAIC,UAAU,GAAGD,WAAW,CAAClC,MAAZ,CAAmBoC,GAAG,IAAIA,GAAG,KAAK,EAAlC,CAAjB;AACAD,MAAAA,UAAU,CAAC,CAAD,CAAV,CAAcN,IAAd;AACA/B,MAAAA,OAAO,CAACD,IAAI,CAACwC,MAAL,CAAa,IAAGF,UAAU,CAAC,CAAD,CAAI,EAA9B,CAAD,CAAP;AACAR,MAAAA,MAAM,CAACD,GAAG,GAAG,EAAP,CAAN;AACD;AACF,GAVD,MAUO;AACLC,IAAAA,MAAM,CAACD,GAAG,GAAG,EAAP,CAAN;AACD;AACF,CAzBD;;AA2BA,MAAMY,cAAc,GAAG,CACnB/E,KADmB,EAEnBuC,OAFmB,EAGnBD,IAHmB,EAInB8B,MAJmB,EAKnBD,GALmB,KAMhB;AACL5B,EAAAA,OAAO,CAACD,IAAI,CAACwC,MAAL,CAAY9E,KAAZ,CAAD,CAAP;AACAoE,EAAAA,MAAM,CAACD,GAAG,GAAG,EAAP,CAAN;AACD,CATD,C,CAWA;;;AAEA,MAAMa,IAAI,GAAG,CAAC9H,CAAD,EAAIa,CAAJ,EAAOkE,GAAP,KAAe;AAC1B/E,EAAAA,CAAC,CAAC+H,YAAF,CAAeC,OAAf,CAAuB,UAAvB,EAAmCnH,CAAnC;AACAb,EAAAA,CAAC,CAAC+H,YAAF,CAAeC,OAAf,CAAuB,KAAvB,EAA8BjD,GAA9B;AACD,CAHD;;AAKA,MAAMkD,UAAU,GAAG,CACjBjI,CADiB,EAEjBa,CAFiB,EAGjBsB,IAHiB,EAIjBC,cAJiB,KAKd;AACH,MAAI8F,MAAM,GAAGlI,CAAC,CAAC+H,YAAF,CAAeI,OAAf,CAAuB,UAAvB,CAAb;AACA,MAAIpD,GAAG,GAAG/E,CAAC,CAAC+H,YAAF,CAAeI,OAAf,CAAuB,KAAvB,CAAV;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWvD,GAAX,CAAhB;;AAEA,MAAIqD,SAAS,CAAC9G,OAAV,KAAsB,YAA1B,EAAwC;AAEtCa,IAAAA,IAAI,CAACX,OAAL,CAAaoD,MAAb,CAAoBsD,MAApB,EAA4B,CAA5B;AACA/F,IAAAA,IAAI,CAACX,OAAL,CAAaoD,MAAb,CAAoB/D,CAApB,EAAuB,CAAvB,EAA0BuH,SAA1B;AAEA,QAAIG,aAAa,GAAG,EAApB;AACA,QAAIC,YAAY,GAAGrG,IAAI,CAACX,OAAL,CAAa+D,MAAb,CAAoBR,GAAG,IAAIA,GAAG,CAACzD,OAAJ,KAAgB,YAA3C,CAAnB;AAEAc,IAAAA,cAAc,CAACT,OAAf,CAAwBf,IAAD,IAAU;AAC/B4H,MAAAA,YAAY,CAAC7G,OAAb,CAAqB,CAACoD,GAAD,EAAMlE,CAAN,KAAY;AAC/B,YAAID,IAAI,CAACW,MAAL,KAAgBwD,GAAG,CAACxD,MAAxB,EAAgC;AAC9BgH,UAAAA,aAAa,CAAC3D,MAAd,CAAqB/D,CAArB,EAAwB,CAAxB,EAA2BD,IAA3B;AACD;AACF,OAJD;AAKD,KAND;AAQA,WAAO2H,aAAP;AAED,GAlBD,MAkBO;AACLpG,IAAAA,IAAI,CAACX,OAAL,CAAaoD,MAAb,CAAoBsD,MAApB,EAA4B,CAA5B;AACA/F,IAAAA,IAAI,CAACX,OAAL,CAAaoD,MAAb,CAAoB/D,CAApB,EAAuB,CAAvB,EAA0BuH,SAA1B;AAEA,WAAO,CAAC,GAAGhG,cAAJ,CAAP;AACD;AACF,CAlCD;;AAoCA,MAAMqG,UAAU,GAAG,CACjBzI,CADiB,EAEjBa,CAFiB,EAGjBZ,IAHiB,EAIjBC,cAJiB,KAKd;AACH,MAAIgI,MAAM,GAAGlI,CAAC,CAAC+H,YAAF,CAAeI,OAAf,CAAuB,UAAvB,CAAb;AACA,MAAIpD,GAAG,GAAG/E,CAAC,CAAC+H,YAAF,CAAeI,OAAf,CAAuB,KAAvB,CAAV;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWvD,GAAX,CAAhB;;AAEA,MAAIqD,SAAS,CAAC9G,OAAV,KAAsB,YAA1B,EAAwC;AACtC;AACA;AACA;AACArB,IAAAA,IAAI,CAACuB,OAAL,CAAaoD,MAAb,CAAoBsD,MAApB,EAA4B,CAA5B;AACAjI,IAAAA,IAAI,CAACuB,OAAL,CAAaoD,MAAb,CAAoB/D,CAApB,EAAuB,CAAvB,EAA0BuH,SAA1B;AAEA,QAAIM,aAAa,GAAG,EAApB;AACA,QAAIC,YAAY,GAAG1I,IAAI,CAACuB,OAAL,CAAa+D,MAAb,CAAoBR,GAAG,IAAIA,GAAG,CAACzD,OAAJ,KAAgB,YAA3C,CAAnB;AAEApB,IAAAA,cAAc,CAACyB,OAAf,CAAwBf,IAAD,IAAU;AAC/B+H,MAAAA,YAAY,CAAChH,OAAb,CAAqB,CAACoD,GAAD,EAAMlE,CAAN,KAAY;AAC/B,YAAID,IAAI,CAACW,MAAL,KAAgBwD,GAAG,CAACxD,MAAxB,EAAgC;AAC9BmH,UAAAA,aAAa,CAAC9D,MAAd,CAAqB/D,CAArB,EAAwB,CAAxB,EAA2BD,IAA3B;AACD;AACF,OAJD;AAKD,KAND;AAQA,WAAO8H,aAAP;AACD,GAnBD,MAmBO;AACLzI,IAAAA,IAAI,CAACuB,OAAL,CAAaoD,MAAb,CAAoBsD,MAApB,EAA4B,CAA5B;AACAjI,IAAAA,IAAI,CAACuB,OAAL,CAAaoD,MAAb,CAAoB/D,CAApB,EAAuB,CAAvB,EAA0BuH,SAA1B;AAEA,WAAO,CAAC,GAAGlI,cAAJ,CAAP;AACD;AACF,CAnCD;;AAqCA,MAAM0I,SAAS,GAAI5I,CAAD,IAAO;AACvBA,EAAAA,CAAC,CAAC6I,cAAF;AACD,CAFD,C,CAIA;;;AAEA,MAAMC,gBAAgB,GAAIC,IAAD,IAAU;AACjC,SAAOtJ,KAAK,CAACG,IAAN,CAAW,qBAAX,EAAkC;AACvCoJ,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEF;AADC;AAD+B,GAAlC,CAAP;AAKD,CAND,C,CAQA;;;AAEA,MAAMG,QAAQ,GACZC,kBADe,IAEZ;AACH,SAAO1J,KAAK,CAACG,IAAN,CAAW,mBAAX,EAAgCuJ,kBAAhC,EAAoD;AACzDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADgD,GAApD,EAIJ3F,IAJI,CAIC4F,OAAO,IAAI;AACjB,QAAIC,UAAU,GAAGD,OAAO,CAACE,IAAzB;AACA,WAAOD,UAAP;AACD,GAPM,CAAP;AAQD,CAXD;;AAaA,MAAME,QAAQ,GACZC,kBADe,IAEZ;AACH,SAAOhK,KAAK,CAACG,IAAN,CAAW,mBAAX,EAAgC6J,kBAAhC,EAAoD;AACzDL,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADgD,GAApD,EAIJ3F,IAJI,CAICiG,OAAO,IAAI;AACjB,QAAIC,UAAU,GAAGD,OAAO,CAACH,IAAzB;AACA,WAAOI,UAAP;AACD,GAPM,CAAP;AAQD,CAXD;;AAaA,MAAMC,SAAS,GACbC,iBADgB,IAEb;AACH,SAAOpK,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BiK,iBAA/B,EAAkD;AACvDT,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAD8C,GAAlD,EAIJ3F,IAJI,CAICqG,QAAQ,IAAI;AAClB,QAAIxD,QAAQ,GAAGwD,QAAQ,CAACP,IAAxB;AACA,WAAOjD,QAAP;AACD,GAPM,CAAP;AAQD,CAXD;;AAaA,MAAMyD,SAAS,GAAG,CAChBC,iBADgB,EAEhBtD,MAFgB,EAGhB7C,QAHgB,KAIb;AACH,MAAI6C,MAAJ,EAAY;AACV,WAAOjH,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+B;AACpCoJ,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAEpF;AADC;AAD4B,KAA/B,EAIJJ,IAJI,CAICwG,QAAQ,IAAI;AAClB,UAAIpG,QAAQ,GAAGoG,QAAQ,CAACV,IAAxB;AACA,aAAO1F,QAAP;AACD,KAPM,CAAP;AAQD,GATD,MASO;AACL,WAAOpE,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BoK,iBAA/B,EAAkDvG,IAAlD,CAAuDwG,QAAQ,IAAI;AACxE,UAAIpG,QAAQ,GAAGoG,QAAQ,CAACV,IAAxB;AACA,aAAO1F,QAAP;AACD,KAHM,CAAP;AAID;AACF,CApBD,C,CAsBA;;;AAEA,MAAMqG,cAAc,GAAG,CAAC/H,IAAD,EAAOgI,YAAP,KAAwB;AAC7C,MAAIC,WAAW,GAAGD,YAAY,CAAChI,IAAD,CAAZ,CAAmBkI,GAAnB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,OAA9B,CAAlB;AACA,MAAIC,QAAQ,GAAGJ,WAAW,CAACK,MAAZ,CAAmB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnD,QAAIC,YAAY,GAAG,IAAIrG,MAAJ,CAAW,MAAX,EAAmB,IAAnB,CAAnB;AACA,WAAOmG,KAAK,CAAC9C,MAAN,CAAa+C,MAAM,CAACpD,KAAP,CAAaqD,YAAb,CAAb,CAAP;AACD,GAHc,EAGZ,EAHY,CAAf;;AAKA,MAAIJ,QAAQ,CAAC,CAAD,CAAR,KAAgB,IAApB,EAA0B;AACxB,WAAOK,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQP,QAAR,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AAEF,CAbD;;AAeA,MAAMQ,eAAe,GAAG,CAACpL,IAAD,EAAO4K,QAAP,EAAiBjH,WAAjB,KAAiC;AACvD,MAAI3D,IAAJ,EAAU;AACR,QAAIqL,WAAW,GAAGrL,IAAI,CAAC4K,QAAL,CAAcH,GAAd,CAAkBa,CAAC,KAAK;AACxCpL,MAAAA,GAAG,EAAEoL,CAAC,CAACpL,GADiC;AAExCqL,MAAAA,OAAO,EAAE,MAAMD,CAAC,CAACC,OAFuB;AAGxCtL,MAAAA,IAAI,EAAE;AAHkC,KAAL,CAAnB,CAAlB;AAMAoL,IAAAA,WAAW,CAACtJ,OAAZ,CAAoByJ,IAAI,IAAI;AAC1B,UAAI,CAACZ,QAAQ,CAACa,QAAT,CAAkBD,IAAI,CAACD,OAAvB,CAAL,EAAsC;AACpC5H,QAAAA,WAAW,CAAC/B,OAAZ,CAAoBC,IAApB,CAAyB2J,IAAzB;AACD;AACF,KAJD;AAKD;AACF,CAdD;;AAgBA,MAAME,cAAc,GAClBC,YADqB,IAElB;AACH,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AAEA,OAAK,IAAI5K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0K,YAAY,CAAC7K,MAAjC,EAAyCG,CAAC,EAA1C,EAA8C;AAC5C,QAAI6K,KAAK,GAAGH,YAAY,CAAC1K,CAAD,CAAxB;AACA2K,IAAAA,QAAQ,CAACG,MAAT,CAAgB,QAAhB,EAA0BD,KAA1B;AACD;;AAED,SAAOF,QAAP;AACD,CAXD;;AAaA,MAAMrB,YAAY,GAAIyB,QAAD,IAAc;AACjC,SAAOA,QAAQ,CAACpK,OAAT,CAAiB+D,MAAjB,CAAwBR,GAAG,IAAI;AACpC,QACEA,GAAG,CAACzD,OAAJ,KAAgB,MAAhB,IACAyD,GAAG,CAACzD,OAAJ,KAAgB,SAFlB,EAGE;AACA,aAAO,IAAP;AACD,KALD,MAKO;AACL,aAAO,KAAP;AACD;AACF,GATM,CAAP;AAUD,CAXD;;AAaA,MAAMuK,mBAAmB,GAAG,CAC1BD,QAD0B,EAE1BE,OAF0B,KAGvB;AACH;AACA;AACA,MAAIC,WAAW,GAAG,CAAC,GAAGH,QAAQ,CAACpK,OAAb,CAAlB;AAEA,MAAIwK,EAAE,GAAG,CAAT;AACAD,EAAAA,WAAW,CAACpK,OAAZ,CAAoB,CAACoD,GAAD,EAAMlE,CAAN,KAAY;AAC9B,QAAIoL,MAAM,GAAGH,OAAO,CAACE,EAAD,CAApB;;AACA,QAAIjH,GAAG,CAACzD,OAAJ,KAAgB,YAApB,EAAkC;AAChC2K,MAAAA,MAAM,CAACC,UAAP,GAAoBrL,CAApB;AACAkL,MAAAA,WAAW,CAACnH,MAAZ,CAAmB/D,CAAnB,EAAsB,CAAtB,EAAyBoL,MAAzB;AACAD,MAAAA,EAAE;AACH;AACF,GAPD;AASA,SAAOD,WAAW,CAACxG,MAAZ,CAAmBR,GAAG,IAAIA,GAAG,CAACzD,OAAJ,KAAgB,MAA1C,CAAP;AACD,CAnBD;;AAqBA,MAAM6K,sBAAsB,GAAG,CAACC,OAAD,EAAUC,YAAV,EAAwBvJ,KAAxB,EAA+BE,MAA/B,EAAuCE,KAAvC,KAAiD;AAE9EkJ,EAAAA,OAAO,CAAC5K,OAAR,IAAmBsB,KAAK,GAAG,GAAR,GAAcE,MAAd,GAAuB,GAAvB,GAA6BE,KAAhD;AAEAmJ,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAMD,CAVD;;AAYA,MAAMC,qBAAqB,GAAG,CAACP,OAAD,EAAUC,YAAV,EAAwBvJ,KAAxB,KAAkC;AAE9DsJ,EAAAA,OAAO,CAAC5K,OAAR,IAAmBsB,KAAK,GAAG,GAA3B;AAEAuJ,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAMD,CAVD;;AAYA,MAAME,qBAAqB,GAAG,CAACR,OAAD,EAAUC,YAAV,EAAwBQ,IAAxB,KAAiC;AAE7D,MAAIC,KAAK,GAAGP,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ;AACAM,EAAAA,KAAK,CAACL,SAAN,GAAkBI,IAAlB;AAEAT,EAAAA,OAAO,CAAC5K,OAAR,IAAmBsL,KAAK,CAACJ,WAAzB;AAEAL,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAMD,CAbD;;AAeA,MAAMK,qBAAqB,GAAG,CAACX,OAAD,EAAUC,YAAV,EAAwBW,OAAxB,KAAoC;AAEhEX,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAMAnM,EAAAA,MAAM,CAACC,MAAP,CAAcwM,OAAd,EAAuBrL,OAAvB,CAA+BgJ,MAAM,IAAI;AACvCyB,IAAAA,OAAO,CAAC5K,OAAR,IAAmBmJ,MAAnB;AACD,GAFD;AAGD,CAXD;;AAaA,MAAMsC,sBAAsB,GAAG,CAACb,OAAD,EAAUC,YAAV,KAA2B;AAExDA,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAKD,CAPD;;AASA,MAAMQ,sBAAsB,GAAG,CAACd,OAAD,EAAUC,YAAV,EAAwBc,KAAxB,EAA+BC,MAA/B,KAA0C;AAEvEhB,EAAAA,OAAO,CAAC5K,OAAR,IAAmB2L,KAAnB;AACAf,EAAAA,OAAO,CAAC5K,OAAR,IAAmB4L,MAAnB;AAEAf,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAMD,CAXD;;AAaA,MAAMW,sBAAsB,GAAG,CAACjB,OAAD,EAAUC,YAAV,KAA2B;AAExDA,EAAAA,YAAY,CAAC1K,OAAb,CAAqB2I,CAAC,IAAI;AACxB,QAAIgC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBnC,CAAC,CAACC,OAAnB;AACA6B,IAAAA,OAAO,CAAC5K,OAAR,IAAmB8K,IAAI,CAACI,WAAxB;AACD,GAJD;AAKD,CAPD,C,CAUA;;;AAEA,MAAMY,eAAe,GAAIC,MAAD,IAAY;AAClCA,EAAAA,MAAM,CAAC/L,OAAP,CAAeG,OAAf,CAAuB,CAACoD,GAAD,EAAMlE,CAAN,KAAY;AACjCkE,IAAAA,GAAG,CAACmH,UAAJ,GAAiBrL,CAAjB;AACD,GAFD;AAGD,CAJD,C,CAMA;;;AAEA,MAAM2M,QAAQ,GAAI5N,IAAD,IAAU;AACzB,MAAIA,IAAJ,EAAU;AACR,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CAND,C,CAQA;;;AAEA,SAAS6N,oBAAT,CAA+BC,MAA/B,EAAwC;AACtC;AACA;AACAA,EAAAA,MAAM,CAACC,UAAP,CAAkBC,GAAlB,CAAuB,QAAvB,EAAkCC,kBAAlC,CAAsD;AAClDC,IAAAA,IAAI,EAAE;AACFzM,MAAAA,IAAI,EAAE,GADJ;AAEF0M,MAAAA,GAAG,EAAE,cAFH;AAGFC,MAAAA,OAAO,EAAE,SAHP;AAIFC,MAAAA,UAAU,EAAE;AACRC,QAAAA,IAAI,EAAE,IADE;AAER,wBAAgB;AAFR;AAJV,KAD4C;AAUlDC,IAAAA,KAAK,EAAE;AACHJ,MAAAA,GAAG,EAAE,SADF;AAEHtL,MAAAA,KAAK,EAAE2L,QAAQ,IAAI;AACf;AACA;AACA;AACA,cAAMC,gBAAgB,GAAGX,MAAM,CAACY,OAAP,CAAeC,GAAf,CAAoB,SAApB,EAAgCC,kBAAhC,CAAoDJ,QAApD,EAA8D;AACnF;AACArF,UAAAA,IAAI,EAAEqF,QAAQ,CAACK,YAAT,CAAuB,MAAvB,CAF6E;AAGnFC,UAAAA,MAAM,EAAEN,QAAQ,CAACK,YAAT,CAAuB,cAAvB;AAH2E,SAA9D,CAAzB;AAMA,eAAOJ,gBAAP;AACH;AAbE,KAV2C;AAyBlDM,IAAAA,iBAAiB,EAAE;AAzB+B,GAAtD,EAHsC,CA+BtC;;AACAjB,EAAAA,MAAM,CAACC,UAAP,CAAkBC,GAAlB,CAAuB,UAAvB,EAAoCgB,kBAApC,CAAwD;AACpDT,IAAAA,KAAK,EAAE,SAD6C;AAEpDL,IAAAA,IAAI,EAAE,CAAEe,mBAAF,EAAuB;AAAEC,MAAAA;AAAF,KAAvB,KAAuC;AACzC;AACA,UAAK,CAACD,mBAAN,EAA4B;AACxB;AACH;;AAED,aAAOC,MAAM,CAACC,sBAAP,CAA+B,GAA/B,EAAoC;AACvCC,QAAAA,KAAK,EAAE,SADgC;AAEvC,wBAAgBH,mBAAmB,CAACI,EAFG;AAGvC,wBAAgBJ,mBAAmB,CAACK,QAHG;AAIvC,gBAAS,qCAAoCL,mBAAmB,CAACI,EAApB,CAAuBE,KAAvB,CAA6B,CAA7B,EAAgCN,mBAAmB,CAACI,EAApB,CAAuBvO,MAAvD,CAA+D;AAJrE,OAApC,EAKJ;AACC;AACA0O,QAAAA,QAAQ,EAAE,EAFX;AAGC;AACAH,QAAAA,EAAE,EAAEJ,mBAAmB,CAACQ;AAJzB,OALI,CAAP;AAWH,KAnBmD;AAoBpDV,IAAAA,iBAAiB,EAAE;AApBiC,GAAxD;AAsBD,C,CAED;;;KAxDSlB,oB;;AA0DT,MAAM6B,aAAa,GAAG,CAACC,SAAD,EAAYhD,QAAZ,KAAyB;AAC7C,MAAIgD,SAAJ,EAAe;AACbhD,IAAAA,QAAQ,CAACpK,IAAT,CAAcqN,KAAd,CAAoBC,MAApB,GAA6B,OAA7B;AACAlD,IAAAA,QAAQ,CAACpK,IAAT,CAAcqN,KAAd,CAAoBE,MAApB,GAA6B,MAA7B;AACAnD,IAAAA,QAAQ,CAACpK,IAAT,CAAcqN,KAAd,CAAoBG,QAApB,GAA+B,QAA/B;AACD;AACF,CAND;;AAQA,MAAMC,WAAW,GAAIrD,QAAD,IAAc;AAChCA,EAAAA,QAAQ,CAACpK,IAAT,CAAcqN,KAAd,CAAoBC,MAApB,GAA6B,EAA7B;AACAlD,EAAAA,QAAQ,CAACpK,IAAT,CAAcqN,KAAd,CAAoBE,MAApB,GAA6B,EAA7B;AACAnD,EAAAA,QAAQ,CAACpK,IAAT,CAAcqN,KAAd,CAAoBG,QAApB,GAA+B,EAA/B;AACD,CAJD;;AAMA,MAAME,YAAY,GAAG;AACnBlQ,EAAAA,YADmB;AAEnBI,EAAAA,iBAFmB;AAGnBmC,EAAAA,iBAHmB;AAInBI,EAAAA,WAJmB;AAKnBI,EAAAA,YALmB;AAMnBkB,EAAAA,gBANmB;AAOnBS,EAAAA,gBAPmB;AAQnBxC,EAAAA,iBARmB;AASnB2C,EAAAA,aATmB;AAUnBQ,EAAAA,aAVmB;AAWnBqB,EAAAA,cAXmB;AAYnBI,EAAAA,cAZmB;AAanBG,EAAAA,gBAbmB;AAcnBzB,EAAAA,SAdmB;AAenB6B,EAAAA,cAfmB;AAgBnBa,EAAAA,cAhBmB;AAiBnBC,EAAAA,IAjBmB;AAkBnBG,EAAAA,UAlBmB;AAmBnBQ,EAAAA,UAnBmB;AAoBnBG,EAAAA,SApBmB;AAqBnBnD,EAAAA,0BArBmB;AAsBnBO,EAAAA,sBAtBmB;AAuBnB8C,EAAAA,gBAvBmB;AAwBnBI,EAAAA,QAxBmB;AAyBnBM,EAAAA,QAzBmB;AA0BnBI,EAAAA,SA1BmB;AA2BnBG,EAAAA,SA3BmB;AA4BnBuB,EAAAA,cA5BmB;AA6BnBnB,EAAAA,YA7BmB;AA8BnB0B,EAAAA,mBA9BmB;AA+BnB3B,EAAAA,cA/BmB;AAgCnBc,EAAAA,eAhCmB;AAiCnBmB,EAAAA,sBAjCmB;AAkCnBQ,EAAAA,qBAlCmB;AAmCnBC,EAAAA,qBAnCmB;AAoCnBG,EAAAA,qBApCmB;AAqCnBE,EAAAA,sBArCmB;AAsCnBC,EAAAA,sBAtCmB;AAuCnBG,EAAAA,sBAvCmB;AAwCnBC,EAAAA,eAxCmB;AAyCnBE,EAAAA,QAzCmB;AA0CnBC,EAAAA,oBA1CmB;AA2CnB6B,EAAAA,aA3CmB;AA4CnBM,EAAAA;AA5CmB,CAArB;AA+CA,eAAeC,YAAf","sourcesContent":["//preview files\n/* eslint-disable no-loop-func */\nimport axios from 'axios';\nimport Validator from 'validator';\n\nconst handlePostId = (post) => {\n  if (post.kind === 'Like' && post.kind === 'Repost') {\n    return post.post.post._id\n  } else if (post.kind === 'Like') {\n    return post.post._id\n  } else {\n    return post._id\n  }\n}\n\nconst previewMainImages = (\n  e, \n  main,\n  mainImageFiles,\n  setMainImageFiles,\n  setErrMessage,\n  errMessage,\n) => {\n\n  const files = Object.values(e.currentTarget.files)\n\n  if (mainImageFiles.length + 1 > 10) {\n\n    setErrMessage(errMessage = 'Only 10 images can be uploaded here')\n    return\n\n  }\n\n  const readAndPreview = (file, i) => {\n\n    var reader = new FileReader();\n\n    reader.onloadend = () => {\n\n      var imgObj = {};\n      imgObj.src = reader.result\n      imgObj.alt = file.name\n      imgObj.srcType = 'newImgFile'\n      imgObj._id = null\n      imgObj.arrPos = mainImageFiles.length\n      file.arrPos = mainImageFiles.length\n\n\n      main.current.push(imgObj)\n      setMainImageFiles(mainImageFiles = [...mainImageFiles, file])\n\n    }\n\n    reader.readAsDataURL(file);\n\n  }\n\n  if (files) {\n    files.forEach((f, i) => {\n       readAndPreview(f, i)\n    });\n  }\n}\n\nconst previewProfilePic = (\n  e,\n  previewProfilePicRef,\n  profileImageFile,\n  setProfileImageFile\n) => {\n  const file = Object.values(e.currentTarget.files)\n\n  var reader = new FileReader();\n\n  reader.addEventListener('load', () => {\n    previewProfilePicRef.current.src = reader.result\n    previewProfilePicRef.current.alt = ''\n    setProfileImageFile(profileImageFile = file)\n  }, false)\n\n  if (file[0]) {\n    reader.readAsDataURL(file[0])\n  }\n}\n\nconst previewBodyImages = (\n    e, \n    body, \n    bodyImageFiles,\n    setBodyImageFiles,\n    setErrMessage, \n    errMessage\n  ) => {\n\n  const files = Object.values(e.currentTarget.files)\n\n  if (bodyImageFiles.length + 1 > 10) {\n\n    setErrMessage(errMessage = 'Only 10 images can be uploaded here')\n    return\n\n  }\n  \n  const readAndPreview = (file, i) => {\n\n    var reader = new FileReader();\n\n    reader.onloadend = () => {\n\n      var imgObj = {};\n      imgObj.src = reader.result\n      imgObj.alt = file.name\n      imgObj.srcType = 'newImgFile'\n      imgObj._id = null\n      imgObj.arrPos = bodyImageFiles.length\n      file.arrPos = bodyImageFiles.length\n\n      body.current.push(imgObj)\n      setBodyImageFiles(bodyImageFiles = [...bodyImageFiles, file])\n    }\n\n    reader.readAsDataURL(file);\n\n  }\n\n  if (files) {\n    files.forEach((f, i) => {\n      readAndPreview(f, i)\n    });\n  }\n}\n\nconst previewLink = (\n  e\n) => {\n  if (Validator.isURL(e.target.value)) {\n    var imgObj = {}\n    imgObj.src = e.target.value\n    imgObj.alt = ''\n    imgObj._id = null\n    imgObj.kind = 'Image'\n    imgObj.srcType = 'newImgLink'\n\n    return imgObj\n  }\n}\n\nconst previewAudio = (\n  e,\n  mm,\n  audioFile,\n  setAudioFile,\n  title,\n  setTitle,\n  artist,\n  setArtist,\n  album,\n  setAlbum,\n  src,\n  setSrc,\n  active,\n  setActive,\n  objsToClean,\n  post\n) => {\n  const file = e.currentTarget.files[0]\n  \n  var reader = new FileReader();\n\n  reader.onloadend = () => {\n    if (post) {\n      objsToClean.current = [post.audioFile]\n    }\n\n    mm.parseBlob(file).then(meta => {\n      const { common } = meta;\n      setTitle(title = common.title || '') \n      setArtist(artist = common.artist || '') \n      setAlbum(album = common.album || '') \n      setSrc(src = reader.result)\n      setAudioFile(audioFile = file)\n      setActive(active = true)\n    })\n  }\n\n  reader.readAsDataURL(file)\n}\n\nconst previewVideoFile = (\n  e,\n  post,\n  videoObj,\n  setVideoObj,\n  videoFile,\n  setVideoFile,\n  active, \n  setActive,\n  objsToClean\n) => {\n  const file = e.currentTarget.files[0]\n  const videoPath = URL.createObjectURL(file)\n\n  if (post) {\n    objsToClean.current = [post.videoLink]\n  }\n\n  setVideoFile(videoFile = file)\n  setVideoObj(videoObj = videoPath)\n  setActive(active = true)\n}\n\nconst previewVideoLink = (\n  e,\n  post,\n  videoObj,\n  setVideoObj,\n  videoFile,\n  setVideoFile,\n  active, \n  setActive,\n  objsToClean\n) => {\n  if (Validator.isURL(e.target.value)) {\n    var matched = new RegExp(/youtube|vimeo|twitch|dailymotion/)\n\n    if (matched) {\n      if (post) {\n        objsToClean.current = [post.videoLink]\n      }\n\n      if (videoFile) {\n        setVideoFile(videoFile = '')\n      }\n\n      setVideoObj(videoObj = e.target.value)\n      setActive(active = true)\n    }\n  }\n}\n\n//remove objs\n\nconst removeMainObj = (\n    srcType, \n    main, \n    setMainImageFiles,\n    mainImageFiles,\n    objsToClean,\n    mainIdx, \n    optionalArrPos\n  ) => {\n\n  var plucked = main.current.splice(mainIdx, 1)\n  if (srcType === 'oldImgUpload' || srcType === 'oldImgLink') {\n    objsToClean.current.push(plucked[0])\n  }\n\n  if (srcType === 'newImgFile' && mainImageFiles.length === 1) {\n\n    setMainImageFiles(mainImageFiles = [])\n\n  } else if (srcType === 'newImgFile') {\n    var mainImageFileDup = [...mainImageFiles]\n\n    //use arrPos key to find correct\n    //image file to delete\n    mainImageFileDup.forEach((file, i) => {\n      if (file.arrPos === optionalArrPos) {\n        mainImageFileDup.splice(i, 1)\n      }\n    })\n\n    //remap arrPos key for bodyImageFiles and newImgFile\n    //in main.current, this ensures consistent\n    //drag and drop if file is deleted\n    //and uploading a new one\n    mainImageFileDup.forEach((f, i) => {\n      f.arrPos = i\n    })\n    \n    var i2 = 0\n    main.current.forEach((obj, i) => {\n      if (obj.srcType === 'newImgFile') {\n        obj.arrPos = i2\n        i2++\n      }\n    })\n\n    setMainImageFiles(mainImageFiles = mainImageFileDup)\n\n  }\n}\n\nconst removeBodyObj = (\n    srcType, \n    body,\n    setBodyImageFiles, \n    bodyImageFiles,\n    objsToClean, \n    bodyIdx,\n    optionalArrPos\n  ) => {\n  \n  var plucked = body.current.splice(bodyIdx, 1)\n  if (srcType === 'oldImgUpload' || srcType === 'oldImgLink') {\n    objsToClean.current.push(plucked[0])\n  }\n\n  if (srcType === 'newImgFile' && bodyImageFiles.length === 1) {\n\n    setBodyImageFiles(bodyImageFiles = [])\n\n  } else if (srcType === 'newImgFile') {\n    var bodyImageFileDup = [...bodyImageFiles]\n\n    //use arrPos key to find correct\n    //image file to delete\n    bodyImageFileDup.forEach((file, i) => {\n      if (file.arrPos === optionalArrPos) {\n        bodyImageFileDup.splice(i, 1)\n      }\n    })\n\n    //remap arrPos key for bodyImageFiles and newImgFile\n    //in body.current, this ensures consistent\n    //drag and drop in the case of an image\n    //being removed and then a new image added\n    bodyImageFileDup.forEach((f, i) => {\n      f.arrPos = i\n    })\n    \n    var i2 = 0\n    body.current.forEach((obj, i) => {\n      if (obj.srcType === 'newImgFile') {\n        obj.arrPos = i2\n        i2++\n      }\n    })\n\n    setBodyImageFiles(bodyImageFiles = bodyImageFileDup)\n\n  }\n}\n\nconst removeTag = (i, tags, setTags) => {\n  var filtered = tags.filter((t, i2) => i !== i2)\n  setTags(tags = filtered)\n}\n\nconst removeLinkSiteNameAndImage = (\n  siteName, \n  setSitename,\n  imageUrl, \n  setImageUrl,\n  showNameAndUrl,\n  setShowNameAndUrl,\n) => {\n  setSitename(siteName = '')\n  setImageUrl(imageUrl = '')\n  setShowNameAndUrl(showNameAndUrl = false)\n}\n\nconst removeLinkTitleAndDesc = (\n  title, \n  setTitle,\n  setLinkDescription,\n  linkDescription,\n  showTitleAndLinkDescription,\n  setShowTitleAndLinkDescription,\n) => {\n  setTitle(title = '')\n  setLinkDescription(linkDescription = '')\n  setShowTitleAndLinkDescription(showTitleAndLinkDescription = false)\n}\n\nconst removeAudioObj = (\n  post,\n  audioObj,\n  setAudioObj,\n  audioFile,\n  setAudioFile,\n  active, \n  setActive,\n  objsToClean\n) => {\n  if (post) {\n    objsToClean.current = [post.audioLink]\n  }\n\n  setAudioFile(audioFile = {})\n  setActive(active = false)\n}\n\nconst removeVideoObj = (\n  post,\n  videoObj,\n  setVideoObj,\n  videoFile,\n  setVideoFile,\n  active, \n  setActive,\n  isLink,\n  setIsLink,\n  objsToClean\n) => {\n  if (post) {\n    objsToClean.current = [post.videoLink]\n  }\n\n  setVideoObj(videoObj = {})\n  setVideoFile(videoFile = {})\n  if (isLink) {\n    setIsLink(isLink = false)\n  }\n  setActive(active = false)\n}\n\nconst removeProfilePic = (\n  previewProfilePicRef,\n  profileImageFile,\n  setProfileImageFile,\n  edit, \n  render,\n  setRender\n) => {\n  previewProfilePicRef.current = {}\n  setProfileImageFile(profileImageFile = null)\n  \n  if (edit) {\n    setRender(render + 1)\n  }\n}\n\n//handle tags\n\nconst handleTagInput = (\n    tag, \n    setTag,\n    tags, \n    setTags\n  ) => {\n  //eslint-disable-next-line\n  var trimmedTag = tag.trim()\n    \n  var noSingleHash = new RegExp(/^#$/, 'g')\n  var validText = trimmedTag.match(noSingleHash)\n  \n  if (!validText) {\n    //eslint-disable-next-line\n    var matchText = new RegExp(/[\\w+\\s+'\".,!@$%&*()_+=?<>;:-]*/, 'g')\n    var cleanedText = tag.match(matchText)\n    if (cleanedText) {\n      var cleanedArr = cleanedText.filter(str => str !== '')\n      cleanedArr[0].trim()\n      setTags(tags.concat(`#${cleanedArr[0]}`))\n      setTag(tag = '')\n    }\n  } else {\n    setTag(tag = '')\n  }\n}\n\nconst handleFoundTag = (\n    title, \n    setTags,\n    tags, \n    setTag,\n    tag\n  ) => {\n  setTags(tags.concat(title))\n  setTag(tag = '')\n}\n\n//drag and drop\n\nconst drag = (e, i, obj) => {\n  e.dataTransfer.setData('oldIndex', i)\n  e.dataTransfer.setData('obj', obj)\n}\n\nconst onDropBody = (\n  e, \n  i, \n  body, \n  bodyImageFiles\n) => {\n  let oldIdx = e.dataTransfer.getData('oldIndex')\n  let obj = e.dataTransfer.getData('obj')\n  let parsedObj = JSON.parse(obj)\n  \n  if (parsedObj.srcType === 'newImgFile') {\n\n    body.current.splice(oldIdx, 1)\n    body.current.splice(i, 0, parsedObj)\n\n    let sortedArrBody = [];\n    let filteredBody = body.current.filter(obj => obj.srcType === 'newImgFile');\n\n    bodyImageFiles.forEach((file) => {\n      filteredBody.forEach((obj, i) => {\n        if (file.arrPos === obj.arrPos) {\n          sortedArrBody.splice(i, 0, file)\n        }\n      })\n    })\n    \n    return sortedArrBody\n\n  } else {\n    body.current.splice(oldIdx, 1)\n    body.current.splice(i, 0, parsedObj)\n    \n    return [...bodyImageFiles]\n  }\n}\n\nconst onDropMain = (\n  e, \n  i, \n  main,\n  mainImageFiles\n) => {\n  var oldIdx = e.dataTransfer.getData('oldIndex')\n  var obj = e.dataTransfer.getData('obj')\n  var parsedObj = JSON.parse(obj)\n\n  if (parsedObj.srcType === 'newImgFile') {\n    //if we're dragging and dropping an uploaded image\n    //the main.current needs to tell mainImageFiles\n    //how it should be ordered \n    main.current.splice(oldIdx, 1)\n    main.current.splice(i, 0, parsedObj)\n  \n    let sortedArrMain = [];\n    let filteredMain = main.current.filter(obj => obj.srcType === 'newImgFile');\n    \n    mainImageFiles.forEach((file) => {\n      filteredMain.forEach((obj, i) => {\n        if (file.arrPos === obj.arrPos) {\n          sortedArrMain.splice(i, 0, file)\n        }\n      })\n    })\n\n    return sortedArrMain\n  } else {\n    main.current.splice(oldIdx, 1)\n    main.current.splice(i, 0, parsedObj)\n\n    return [...mainImageFiles]\n  }\n}\n\nconst allowDrop = (e) => {\n  e.preventDefault();\n}\n\n//async link preview\n\nconst fetchUrlMetadata = (link) => {\n  return axios.post('/api/posts/metadata', {\n    params: {\n      url: link\n    }\n  })\n}\n\n//async file upload\n\nconst mainPost = (\n  mainImagesFormData\n) => {\n  return axios.post('/api/posts/images', mainImagesFormData, {\n    headers: {\n      'Content-Type': 'undefined'\n    }\n  }).then(mainRes => {\n    let mainImgObj = mainRes.data;\n    return mainImgObj\n  })\n}\n\nconst bodyPost = (\n  bodyImagesFormData\n) => {\n  return axios.post('/api/posts/images', bodyImagesFormData, {\n    headers: {\n      'Content-Type': 'undefined'\n    }\n  }).then(bodyRes => {\n    let bodyImgObj = bodyRes.data;\n    return bodyImgObj\n  })\n}\n\nconst audioPost = (\n  audioFileFormData\n) => {\n  return axios.post('/api/posts/audio', audioFileFormData, {\n    headers: {\n      'Content-Type': 'undefined'\n    }\n  }).then(audioRes => {\n    let audioObj = audioRes.data\n    return audioObj\n  })\n}\n\nconst videoPost = (\n  videoFileFormData,\n  isLink,\n  videoObj\n) => {\n  if (isLink) {\n    return axios.post('/api/posts/video', {\n      params: {\n        url: videoObj\n      }\n    }).then(videoRes => {\n      let videoObj = videoRes.data\n      return videoObj\n    })\n  } else {\n    return axios.post('/api/posts/video', videoFileFormData).then(videoRes => {\n      let videoObj = videoRes.data\n      return videoObj\n    })\n  }\n}\n\n//submit functions\n\nconst handleMentions = (body, stripAllImgs) => {\n  var descContent = stripAllImgs(body).map(d => d.content)\n  var mentions = descContent.reduce((array, string) => {\n    var regexMention = new RegExp(/@\\w+/, 'gm')\n    return array.concat(string.match(regexMention))\n  }, [])\n  \n  if (mentions[0] !== null) {\n    return Array.from(new Set(mentions))\n  } else {\n    return []\n  }\n\n}\n\nconst discardMentions = (post, mentions, objsToClean) => {\n  if (post) {\n    var oldMentions = post.mentions.map(m => ({\n      _id: m._id,\n      mention: '@' + m.mention,\n      kind: 'Mention'\n    }))\n\n    oldMentions.forEach(oldM => {\n      if (!mentions.includes(oldM.mention)) {\n        objsToClean.current.push(oldM)\n      }\n    })\n  }\n}\n\nconst handleFormData = (\n  imageFileArr\n) => {\n  var formData = new FormData();\n  \n  for (var i = 0; i < imageFileArr.length; i++) {\n    var file2 = imageFileArr[i];\n    formData.append('images', file2);\n  }\n  \n  return formData\n}\n\nconst stripAllImgs = (refArray) => {\n  return refArray.current.filter(obj => {\n    if (\n      obj.srcType === 'text' ||\n      obj.srcType === 'oldText'\n    ) {\n      return true\n    } else {\n      return false\n    }\n  })\n}\n\nconst handleUploadedFiles = (\n  refArray,\n  uploads\n) => {\n  //reinsert uploads\n  //at index and reset displayIdx\n  var refArrayDup = [...refArray.current]\n\n  var i1 = 0\n  refArrayDup.forEach((obj, i) => {\n    var upload = uploads[i1]\n    if (obj.srcType === 'newImgFile') {\n      upload.displayIdx = i\n      refArrayDup.splice(i, 1, upload)\n      i1++\n    }\n  })\n  \n  return refArrayDup.filter(obj => obj.srcType !== 'text')\n}\n\nconst handleAllTextAudioPost = (allText, descriptions, title, artist, album) => {\n\n  allText.current += title + ' ' + artist + ' ' + album\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n\n}\n\nconst handleAllTextTextPost = (allText, descriptions, title) => {\n\n  allText.current += title + ' '\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n  \n}\n\nconst handleAllTextChatPost = (allText, descriptions, chat) => {\n\n  var span2 = document.createElement('span')\n  span2.innerHTML = chat\n\n  allText.current += span2.textContent\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n\n}\n\nconst handleAllTextLinkPost = (allText, descriptions, linkObj) => {\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n\n  Object.values(linkObj).forEach(string => {\n    allText.current += string\n  })\n}\n\nconst handleAllTextPhotoPost = (allText, descriptions) => {\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n}\n\nconst handleAllTextQuotePost = (allText, descriptions, quote, source) => {\n  \n  allText.current += quote\n  allText.current += source\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n\n}\n\nconst handleAllTextVideoPost = (allText, descriptions) => {\n\n  descriptions.forEach(d => {\n    var span = document.createElement('span')\n    span.innerHTML = d.content\n    allText.current += span.textContent\n  })\n}\n\n\n//display idx helper\n\nconst resetDisplayIdx = (refArr) => {\n  refArr.current.forEach((obj, i) => {\n    obj.displayIdx = i\n  })\n}\n\n//update helper\n\nconst isUpdate = (post) => {\n  if (post) {\n    return true\n  } else {\n    return false\n  }\n}\n\n//CKEditor helpers\n\nfunction MentionCustomization( editor ) {\n  // The upcast converter will convert view <a class=\"mention\" href=\"\" data-user-id=\"\">\n  // elements to the model 'mention' text attribute.\n  editor.conversion.for( 'upcast' ).elementToAttribute( {\n      view: {\n          name: 'a',\n          key: 'data-mention',\n          classes: 'mention',\n          attributes: {\n              href: true,\n              'data-user-id': true\n          }\n      },\n      model: {\n          key: 'mention',\n          value: viewItem => {\n              // The mention feature expects that the mention attribute value\n              // in the model is a plain object with a set of additional attributes.\n              // In order to create a proper object use the toMentionAttribute() helper method:\n              const mentionAttribute = editor.plugins.get( 'Mention' ).toMentionAttribute( viewItem, {\n                  // Add any other properties that you need.\n                  link: viewItem.getAttribute( 'href' ),\n                  userId: viewItem.getAttribute( 'data-user-id' )\n              } );\n\n              return mentionAttribute;\n          }\n      },\n      converterPriority: 'high'\n  } );\n\n  // Downcast the model 'mention' text attribute to a view <a> element.\n  editor.conversion.for( 'downcast' ).attributeToElement( {\n      model: 'mention',\n      view: ( modelAttributeValue, { writer } ) => {\n          // Do not convert empty attributes (lack of value means no mention).\n          if ( !modelAttributeValue ) {\n              return;\n          }\n\n          return writer.createAttributeElement( 'a', {\n              class: 'mention',\n              'data-mention': modelAttributeValue.id,\n              'data-user-id': modelAttributeValue.actualId,\n              'href': `http://localhost:3000/#/view/blog/${modelAttributeValue.id.slice(1, modelAttributeValue.id.length)}`\n          }, {\n              // Make mention attribute to be wrapped by other attribute elements.\n              priority: 20,\n              // Prevent merging mentions together.\n              id: modelAttributeValue.uid\n          } );\n      },\n      converterPriority: 'high'\n  } );\n}\n\n//handle scrolling\n\nconst preventScroll = (activeVar, document) => {\n  if (activeVar) {\n    document.body.style.margin = 'fixed'\n    document.body.style.height = '100%'\n    document.body.style.overflow = 'hidden'\n  }\n}\n\nconst allowScroll = (document) => {\n  document.body.style.margin = ''\n  document.body.style.height = ''\n  document.body.style.overflow = ''\n}\n\nconst PostFormUtil = {\n  handlePostId,\n  previewMainImages, \n  previewBodyImages, \n  previewLink,\n  previewAudio, \n  previewVideoFile,\n  previewVideoLink,\n  previewProfilePic,\n  removeMainObj,\n  removeBodyObj, \n  removeAudioObj,\n  removeVideoObj,\n  removeProfilePic,\n  removeTag, \n  handleTagInput, \n  handleFoundTag,\n  drag, \n  onDropBody, \n  onDropMain, \n  allowDrop, \n  removeLinkSiteNameAndImage,\n  removeLinkTitleAndDesc,\n  fetchUrlMetadata, \n  mainPost, \n  bodyPost,\n  audioPost, \n  videoPost,\n  handleFormData, \n  stripAllImgs, \n  handleUploadedFiles,\n  handleMentions, \n  discardMentions,\n  handleAllTextAudioPost, \n  handleAllTextTextPost,\n  handleAllTextChatPost,\n  handleAllTextLinkPost,\n  handleAllTextPhotoPost,\n  handleAllTextQuotePost,\n  handleAllTextVideoPost,\n  resetDisplayIdx,\n  isUpdate, \n  MentionCustomization,\n  preventScroll,\n  allowScroll\n};\n \nexport default PostFormUtil;"]},"metadata":{},"sourceType":"module"}