{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MpcSv7Parser = void 0;\n\nvar initDebug = require(\"debug\");\n\nvar BasicParser_1 = require(\"../../common/BasicParser\");\n\nvar SV7 = require(\"./StreamVersion7\");\n\nvar APEv2Parser_1 = require(\"../../apev2/APEv2Parser\");\n\nvar BitReader_1 = require(\"./BitReader\");\n\nvar debug = initDebug('music-metadata:parser:musepack');\n\nvar MpcSv7Parser = /*#__PURE__*/function (_BasicParser_1$BasicP) {\n  _inherits(MpcSv7Parser, _BasicParser_1$BasicP);\n\n  var _super = _createSuper(MpcSv7Parser);\n\n  function MpcSv7Parser() {\n    var _this;\n\n    _classCallCheck(this, MpcSv7Parser);\n\n    _this = _super.apply(this, arguments);\n    _this.audioLength = 0;\n    return _this;\n  }\n\n  _createClass(MpcSv7Parser, [{\n    key: \"parse\",\n    value: function () {\n      var _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var header, numberOfSamples, version;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.tokenizer.readToken(SV7.Header);\n\n              case 2:\n                header = _context.sent;\n\n                if (!(header.signature !== 'MP+')) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('Unexpected magic number');\n\n              case 5:\n                debug(\"stream-version=\".concat(header.streamMajorVersion, \".\").concat(header.streamMinorVersion));\n                this.metadata.setFormat('container', 'Musepack, SV7');\n                this.metadata.setFormat('sampleRate', header.sampleFrequency);\n                numberOfSamples = 1152 * (header.frameCount - 1) + header.lastFrameLength;\n                this.metadata.setFormat('numberOfSamples', numberOfSamples);\n                this.duration = numberOfSamples / header.sampleFrequency;\n                this.metadata.setFormat('duration', this.duration);\n                this.bitreader = new BitReader_1.BitReader(this.tokenizer);\n                this.metadata.setFormat('numberOfChannels', header.midSideStereo || header.intensityStereo ? 2 : 1);\n                _context.next = 16;\n                return this.bitreader.read(8);\n\n              case 16:\n                version = _context.sent;\n                this.metadata.setFormat('codec', (version / 100).toFixed(2));\n                _context.next = 20;\n                return this.skipAudioData(header.frameCount);\n\n              case 20:\n                debug(\"End of audio stream, switching to APEv2, offset=\".concat(this.tokenizer.position));\n                return _context.abrupt(\"return\", APEv2Parser_1.APEv2Parser.tryParseApeHeader(this.metadata, this.tokenizer, this.options));\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function parse() {\n        return _parse.apply(this, arguments);\n      }\n\n      return parse;\n    }()\n  }, {\n    key: \"skipAudioData\",\n    value: function () {\n      var _skipAudioData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(frameCount) {\n        var frameLength, lastFrameLength;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(frameCount-- > 0)) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.bitreader.read(20);\n\n              case 3:\n                frameLength = _context2.sent;\n                this.audioLength += 20 + frameLength;\n                _context2.next = 7;\n                return this.bitreader.ignore(frameLength);\n\n              case 7:\n                _context2.next = 0;\n                break;\n\n              case 9:\n                _context2.next = 11;\n                return this.bitreader.read(11);\n\n              case 11:\n                lastFrameLength = _context2.sent;\n                this.audioLength += lastFrameLength;\n                this.metadata.setFormat('bitrate', this.audioLength / this.duration);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function skipAudioData(_x) {\n        return _skipAudioData.apply(this, arguments);\n      }\n\n      return skipAudioData;\n    }()\n  }]);\n\n  return MpcSv7Parser;\n}(BasicParser_1.BasicParser);\n\nexports.MpcSv7Parser = MpcSv7Parser;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js"],"names":["Object","defineProperty","exports","value","MpcSv7Parser","initDebug","require","BasicParser_1","SV7","APEv2Parser_1","BitReader_1","debug","arguments","audioLength","tokenizer","readToken","Header","header","signature","Error","streamMajorVersion","streamMinorVersion","metadata","setFormat","sampleFrequency","numberOfSamples","frameCount","lastFrameLength","duration","bitreader","BitReader","midSideStereo","intensityStereo","read","version","toFixed","skipAudioData","position","APEv2Parser","tryParseApeHeader","options","frameLength","ignore","BasicParser"],"mappings":"AAAA;;;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAMC,aAAa,GAAGD,OAAO,CAAC,0BAAD,CAA7B;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,kBAAD,CAAnB;;AACA,IAAMG,aAAa,GAAGH,OAAO,CAAC,yBAAD,CAA7B;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,aAAD,CAA3B;;AACA,IAAMK,KAAK,GAAGN,SAAS,CAAC,gCAAD,CAAvB;;IACMD,Y;;;;;AACF,0BAAc;AAAA;;AAAA;;AACV,+BAASQ,SAAT;AACA,UAAKC,WAAL,GAAmB,CAAnB;AAFU;AAGb;;;;;4EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyB,KAAKC,SAAL,CAAeC,SAAf,CAAyBP,GAAG,CAACQ,MAA7B,CADzB;;AAAA;AACUC,gBAAAA,MADV;;AAAA,sBAEQA,MAAM,CAACC,SAAP,KAAqB,KAF7B;AAAA;AAAA;AAAA;;AAAA,sBAGc,IAAIC,KAAJ,CAAU,yBAAV,CAHd;;AAAA;AAIIR,gBAAAA,KAAK,0BAAmBM,MAAM,CAACG,kBAA1B,cAAgDH,MAAM,CAACI,kBAAvD,EAAL;AACA,qBAAKC,QAAL,CAAcC,SAAd,CAAwB,WAAxB,EAAqC,eAArC;AACA,qBAAKD,QAAL,CAAcC,SAAd,CAAwB,YAAxB,EAAsCN,MAAM,CAACO,eAA7C;AACMC,gBAAAA,eAPV,GAO4B,QAAQR,MAAM,CAACS,UAAP,GAAoB,CAA5B,IAAiCT,MAAM,CAACU,eAPpE;AAQI,qBAAKL,QAAL,CAAcC,SAAd,CAAwB,iBAAxB,EAA2CE,eAA3C;AACA,qBAAKG,QAAL,GAAgBH,eAAe,GAAGR,MAAM,CAACO,eAAzC;AACA,qBAAKF,QAAL,CAAcC,SAAd,CAAwB,UAAxB,EAAoC,KAAKK,QAAzC;AACA,qBAAKC,SAAL,GAAiB,IAAInB,WAAW,CAACoB,SAAhB,CAA0B,KAAKhB,SAA/B,CAAjB;AACA,qBAAKQ,QAAL,CAAcC,SAAd,CAAwB,kBAAxB,EAA4CN,MAAM,CAACc,aAAP,IAAwBd,MAAM,CAACe,eAA/B,GAAiD,CAAjD,GAAqD,CAAjG;AAZJ;AAAA,uBAa0B,KAAKH,SAAL,CAAeI,IAAf,CAAoB,CAApB,CAb1B;;AAAA;AAaUC,gBAAAA,OAbV;AAcI,qBAAKZ,QAAL,CAAcC,SAAd,CAAwB,OAAxB,EAAiC,CAACW,OAAO,GAAG,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAAjC;AAdJ;AAAA,uBAeU,KAAKC,aAAL,CAAmBnB,MAAM,CAACS,UAA1B,CAfV;;AAAA;AAgBIf,gBAAAA,KAAK,2DAAoD,KAAKG,SAAL,CAAeuB,QAAnE,EAAL;AAhBJ,iDAiBW5B,aAAa,CAAC6B,WAAd,CAA0BC,iBAA1B,CAA4C,KAAKjB,QAAjD,EAA2D,KAAKR,SAAhE,EAA2E,KAAK0B,OAAhF,CAjBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;oFAmBA,kBAAoBd,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACWA,UAAU,KAAK,CAD1B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEkC,KAAKG,SAAL,CAAeI,IAAf,CAAoB,EAApB,CAFlC;;AAAA;AAEcQ,gBAAAA,WAFd;AAGQ,qBAAK5B,WAAL,IAAoB,KAAK4B,WAAzB;AAHR;AAAA,uBAIc,KAAKZ,SAAL,CAAea,MAAf,CAAsBD,WAAtB,CAJd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAOkC,KAAKZ,SAAL,CAAeI,IAAf,CAAoB,EAApB,CAPlC;;AAAA;AAOUN,gBAAAA,eAPV;AAQI,qBAAKd,WAAL,IAAoBc,eAApB;AACA,qBAAKL,QAAL,CAAcC,SAAd,CAAwB,SAAxB,EAAmC,KAAKV,WAAL,GAAmB,KAAKe,QAA3D;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EAxBuBrB,aAAa,CAACoC,W;;AAoCzCzC,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MpcSv7Parser = void 0;\r\nconst initDebug = require(\"debug\");\r\nconst BasicParser_1 = require(\"../../common/BasicParser\");\r\nconst SV7 = require(\"./StreamVersion7\");\r\nconst APEv2Parser_1 = require(\"../../apev2/APEv2Parser\");\r\nconst BitReader_1 = require(\"./BitReader\");\r\nconst debug = initDebug('music-metadata:parser:musepack');\r\nclass MpcSv7Parser extends BasicParser_1.BasicParser {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.audioLength = 0;\r\n    }\r\n    async parse() {\r\n        const header = await this.tokenizer.readToken(SV7.Header);\r\n        if (header.signature !== 'MP+')\r\n            throw new Error('Unexpected magic number');\r\n        debug(`stream-version=${header.streamMajorVersion}.${header.streamMinorVersion}`);\r\n        this.metadata.setFormat('container', 'Musepack, SV7');\r\n        this.metadata.setFormat('sampleRate', header.sampleFrequency);\r\n        const numberOfSamples = 1152 * (header.frameCount - 1) + header.lastFrameLength;\r\n        this.metadata.setFormat('numberOfSamples', numberOfSamples);\r\n        this.duration = numberOfSamples / header.sampleFrequency;\r\n        this.metadata.setFormat('duration', this.duration);\r\n        this.bitreader = new BitReader_1.BitReader(this.tokenizer);\r\n        this.metadata.setFormat('numberOfChannels', header.midSideStereo || header.intensityStereo ? 2 : 1);\r\n        const version = await this.bitreader.read(8);\r\n        this.metadata.setFormat('codec', (version / 100).toFixed(2));\r\n        await this.skipAudioData(header.frameCount);\r\n        debug(`End of audio stream, switching to APEv2, offset=${this.tokenizer.position}`);\r\n        return APEv2Parser_1.APEv2Parser.tryParseApeHeader(this.metadata, this.tokenizer, this.options);\r\n    }\r\n    async skipAudioData(frameCount) {\r\n        while (frameCount-- > 0) {\r\n            const frameLength = await this.bitreader.read(20);\r\n            this.audioLength += 20 + frameLength;\r\n            await this.bitreader.ignore(frameLength);\r\n        }\r\n        // last frame\r\n        const lastFrameLength = await this.bitreader.read(11);\r\n        this.audioLength += lastFrameLength;\r\n        this.metadata.setFormat('bitrate', this.audioLength / this.duration);\r\n    }\r\n}\r\nexports.MpcSv7Parser = MpcSv7Parser;\r\n"]},"metadata":{},"sourceType":"script"}