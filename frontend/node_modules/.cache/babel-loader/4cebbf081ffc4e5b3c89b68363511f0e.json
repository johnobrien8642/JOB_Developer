{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Post_Loading.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostLoading = ({\n  uploading\n}) => {\n  _s();\n\n  let [toggle, setToggle] = useState(false);\n  useEffect(() => {\n    if (uploading) {\n      var interval = setInterval(() => {\n        //eslint-disable-next-line\n        if (toggle) {\n          //eslint-disable-next-line\n          setToggle(toggle = false);\n        } else {\n          //eslint-disable-next-line\n          setToggle(toggle = true);\n        }\n      }, 500);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [uploading]);\n\n  if (uploading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: toggle ? 'loading left' : 'loading right',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loadingBarContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(PostLoading, \"E5z+7KxU27TYd2kLomdFOtK8mpg=\");\n\n_c = PostLoading;\nexport default PostLoading;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostLoading\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Post_Loading.js"],"names":["React","useState","useEffect","PostLoading","uploading","toggle","setToggle","interval","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA;AADmB,CAAD,KAEd;AAAA;;AACJ,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,SAAJ,EAAe;AACb,UAAIG,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/B;AACA,YAAIH,MAAJ,EAAY;AACV;AACAC,UAAAA,SAAS,CAACD,MAAM,GAAG,KAAV,CAAT;AACD,SAHD,MAGO;AACL;AACAC,UAAAA,SAAS,CAACD,MAAM,GAAG,IAAV,CAAT;AACD;AACF,OATyB,EASvB,GATuB,CAA1B;AAUD;;AAED,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAACH,SAAD,CAjBM,CAAT;;AAmBA,MAAIA,SAAJ,EAAe;AACb,wBACE;AACE,MAAA,SAAS,EAAEC,MAAM,GAAG,cAAH,GAAoB,eADvC;AAAA,6BAGE;AACE,QAAA,SAAS,EAAC,qBADZ;AAAA,gCAGE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAID;AACF,CA7CD;;GAAMF,W;;KAAAA,W;AA+CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PostLoading = ({\n  uploading\n}) => {\n  let [toggle, setToggle] = useState(false)\n\n  useEffect(() => {\n    if (uploading) {\n      var interval = setInterval(() => {\n        //eslint-disable-next-line\n        if (toggle) {\n          //eslint-disable-next-line\n          setToggle(toggle = false)\n        } else {\n          //eslint-disable-next-line\n          setToggle(toggle = true)\n        }\n      }, 500)\n    }\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [uploading])\n\n  if (uploading) {\n    return (\n      <div\n        className={toggle ? 'loading left' : 'loading right'}\n      >\n        <div\n          className='loadingBarContainer'\n        >\n          <div className='bar1'/>\n          <div className='bar2'/>\n          <div className='bar3'/>\n          <div className='bar4'/>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default PostLoading;"]},"metadata":{},"sourceType":"module"}