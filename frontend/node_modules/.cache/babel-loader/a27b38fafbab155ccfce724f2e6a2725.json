{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{useQuery}from'@apollo/client';import Cookies from'js-cookie';import BrowserNav from'./Browser_Nav';import MobileNav from'./Mobile_Nav';import Queries from'../../graphql/queries';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IS_LOGGED_IN=Queries.IS_LOGGED_IN,FETCH_USER_DETAILS_COUNTS=Queries.FETCH_USER_DETAILS_COUNTS,FETCH_USER=Queries.FETCH_USER;var Nav=function Nav(){var cursorId=useRef(new Date().getTime());useEffect(function(){return function(){refetch();};//eslint-disable-next-line\n},[]);var _useQuery=useQuery(FETCH_USER_DETAILS_COUNTS,{variables:{query:Cookies.get('currentUser')},fetchPolicy:'network-only'}),loading1=_useQuery.loading,error1=_useQuery.error,userDetailsCounts=_useQuery.data,refetch=_useQuery.refetch;var _useQuery2=useQuery(FETCH_USER,{variables:{query:Cookies.get('currentUser')}}),loading2=_useQuery2.loading,error2=_useQuery2.error,fetchedUser=_useQuery2.data;var _useQuery3=useQuery(IS_LOGGED_IN),loggedInBool=_useQuery3.data;if(loading1||loading2)return'Loading...';if(error1){return\"Error: \".concat(error1);}else if(error2){return\"Error: \".concat(error2);}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(BrowserNav,{user:fetchedUser.user,userDetailsCounts:userDetailsCounts,loggedInBool:loggedInBool,cursorId:cursorId}),/*#__PURE__*/_jsx(MobileNav,{user:fetchedUser.user,userDetailsCounts:userDetailsCounts,loggedInBool:loggedInBool,cursorId:cursorId})]});};export default Nav;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Nav.js"],"names":["React","useRef","useEffect","useQuery","Cookies","BrowserNav","MobileNav","Queries","IS_LOGGED_IN","FETCH_USER_DETAILS_COUNTS","FETCH_USER","Nav","cursorId","Date","getTime","refetch","variables","query","get","fetchPolicy","loading1","loading","error1","error","userDetailsCounts","data","loading2","error2","fetchedUser","loggedInBool","user"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,KAAyC,OAAzC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,wFACA,GAAQC,CAAAA,YAAR,CAEuBD,OAFvB,CAAQC,YAAR,CACQC,yBADR,CAEuBF,OAFvB,CACQE,yBADR,CAEQC,UAFR,CAEuBH,OAFvB,CAEQG,UAFR,CAKA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAIC,CAAAA,QAAQ,CAAGX,MAAM,CAAC,GAAIY,CAAAA,IAAJ,GAAWC,OAAX,EAAD,CAArB,CAEAZ,SAAS,CAAC,UAAM,CAEd,MAAO,WAAM,CACXa,OAAO,GACR,CAFD,CAGA;AACD,CANQ,CAMN,EANM,CAAT,CAQA,cAGkBZ,QAAQ,CAACM,yBAAD,CAA4B,CAC9CO,SAAS,CAAE,CACTC,KAAK,CAAEb,OAAO,CAACc,GAAR,CAAY,aAAZ,CADE,CADmC,CAI9CC,WAAW,CAAE,cAJiC,CAA5B,CAH1B,CAAeC,QAAf,WAAMC,OAAN,CACaC,MADb,WACMC,KADN,CAEYC,iBAFZ,WAEMC,IAFN,CAGMV,OAHN,WAGMA,OAHN,CAUA,eAE4BZ,QAAQ,CAACO,UAAD,CAAa,CACzCM,SAAS,CAAE,CACTC,KAAK,CAAEb,OAAO,CAACc,GAAR,CAAY,aAAZ,CADE,CAD8B,CAAb,CAFpC,CAAeQ,QAAf,YAAML,OAAN,CACaM,MADb,YACMJ,KADN,CAEYK,WAFZ,YAEMH,IAFN,CAQI,eAA6BtB,QAAQ,CAACK,YAAD,CAArC,CAAYqB,YAAZ,YAAMJ,IAAN,CAEA,GAAIL,QAAQ,EAAIM,QAAhB,CAA0B,MAAO,YAAP,CAE1B,GAAIJ,MAAJ,CAAY,CACV,uBAAiBA,MAAjB,EACD,CAFD,IAEO,IAAIK,MAAJ,CAAY,CACjB,uBAAiBA,MAAjB,EACD,CAEL,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,UAAD,EACE,IAAI,CAAEC,WAAW,CAACE,IADpB,CAEE,iBAAiB,CAAEN,iBAFrB,CAGE,YAAY,CAAEK,YAHhB,CAIE,QAAQ,CAAEjB,QAJZ,EADF,cAOE,KAAC,SAAD,EACE,IAAI,CAAEgB,WAAW,CAACE,IADpB,CAEE,iBAAiB,CAAEN,iBAFrB,CAGE,YAAY,CAAEK,YAHhB,CAIE,QAAQ,CAAEjB,QAJZ,EAPF,GADF,CAgBD,CAvDD,CAyDA,cAAeD,CAAAA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport BrowserNav from './Browser_Nav';\nimport MobileNav from './Mobile_Nav';\n\nimport Queries from '../../graphql/queries';\nconst { IS_LOGGED_IN,\n        FETCH_USER_DETAILS_COUNTS,\n        FETCH_USER } = Queries;\n\n\nconst Nav = () => {\n  let cursorId = useRef(new Date().getTime())\n  \n  useEffect(() => {\n\n    return () => {\n      refetch()\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  var { loading: loading1, \n        error: error1,\n        data: userDetailsCounts, \n        refetch } = useQuery(FETCH_USER_DETAILS_COUNTS, {\n          variables: {\n            query: Cookies.get('currentUser')\n          },\n          fetchPolicy: 'network-only'\n      })\n\n  var { loading: loading2, \n        error: error2, \n        data: fetchedUser } = useQuery(FETCH_USER, {\n          variables: {\n            query: Cookies.get('currentUser')\n          },\n      })\n      \n      var { data: loggedInBool } = useQuery(IS_LOGGED_IN)\n\n      if (loading1 || loading2) return 'Loading...';\n      \n      if (error1) {\n        return `Error: ${error1}`\n      } else if (error2) {\n        return `Error: ${error2}`\n      }\n\n  return (\n    <React.Fragment>\n      <BrowserNav\n        user={fetchedUser.user}\n        userDetailsCounts={userDetailsCounts}\n        loggedInBool={loggedInBool}\n        cursorId={cursorId}\n      />\n      <MobileNav\n        user={fetchedUser.user}\n        userDetailsCounts={userDetailsCounts}\n        loggedInBool={loggedInBool}\n        cursorId={cursorId}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}