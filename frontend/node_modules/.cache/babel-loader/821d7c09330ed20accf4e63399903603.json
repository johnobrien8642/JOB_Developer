{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useQuery}from'@apollo/client';import Cookies from'js-cookie';import RecommendedTags from'../nav/Recommended_Tags';import AllTagFeed from'../feeds/All_Tag_Feed';import FollowedTags from'../search/resultTypes/Followed_Tags_Result';import Queries from'../../graphql/queries.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FETCH_RECOMMENDED_TAGS=Queries.FETCH_RECOMMENDED_TAGS,FETCH_USER=Queries.FETCH_USER;var Discover=function Discover(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),tag=_useState2[0],setTag=_useState2[1];var _useQuery=useQuery(FETCH_RECOMMENDED_TAGS,{variables:{query:Cookies.get('currentUser')}}),loading1=_useQuery.loading,error1=_useQuery.error,recTags=_useQuery.data;var _useQuery2=useQuery(FETCH_USER,{variables:{query:Cookies.get('currentUser')}}),loading2=_useQuery2.loading,error2=_useQuery2.error,user=_useQuery2.data;if(loading1||loading2)return'Loading...';if(error1)return\"recommended Error: \".concat(error1);if(error2)return\"user Error: \".concat(error2);return/*#__PURE__*/_jsxs(\"div\",{className:\"discoverContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"discoverTagsHeader\",children:/*#__PURE__*/_jsx(RecommendedTags,{recTags:recTags.fetchRecommendedTags,tag:tag,setTag:setTag})}),/*#__PURE__*/_jsx(AllTagFeed,{currentUser:user.user}),/*#__PURE__*/_jsx(\"div\",{className:\"followedTagsContainer\",children:/*#__PURE__*/_jsx(FollowedTags,{user:user.user,followedActive:true,discover:true})})]});};export default Discover;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Discover.js"],"names":["React","useState","useQuery","Cookies","RecommendedTags","AllTagFeed","FollowedTags","Queries","FETCH_RECOMMENDED_TAGS","FETCH_USER","Discover","tag","setTag","variables","query","get","loading1","loading","error1","error","recTags","data","loading2","error2","user","fetchRecommendedTags"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAOC,CAAAA,eAAP,KAA4B,yBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4CAAzB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,C,wFACA,GAAQC,CAAAA,sBAAR,CAA+CD,OAA/C,CAAQC,sBAAR,CAAgCC,UAAhC,CAA+CF,OAA/C,CAAgCE,UAAhC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,cAAoBT,QAAQ,CAAC,IAAD,CAA5B,wCAAKU,GAAL,eAAUC,MAAV,eAEA,cAA0DV,QAAQ,CAACM,sBAAD,CAAyB,CACzFK,SAAS,CAAE,CACTC,KAAK,CAAEX,OAAO,CAACY,GAAR,CAAY,aAAZ,CADE,CAD8E,CAAzB,CAAlE,CAAeC,QAAf,WAAMC,OAAN,CAAgCC,MAAhC,WAAyBC,KAAzB,CAA8CC,OAA9C,WAAwCC,IAAxC,CAMA,eAAuDnB,QAAQ,CAACO,UAAD,CAAa,CAC1EI,SAAS,CAAE,CACTC,KAAK,CAAEX,OAAO,CAACY,GAAR,CAAY,aAAZ,CADE,CAD+D,CAAb,CAA/D,CAAeO,QAAf,YAAML,OAAN,CAAgCM,MAAhC,YAAyBJ,KAAzB,CAA8CK,IAA9C,YAAwCH,IAAxC,CAMA,GAAIL,QAAQ,EAAIM,QAAhB,CAA0B,MAAO,YAAP,CAC1B,GAAIJ,MAAJ,CAAY,mCAA6BA,MAA7B,EACZ,GAAIK,MAAJ,CAAY,4BAAsBA,MAAtB,EAEZ,mBACE,aACE,SAAS,CAAC,mBADZ,wBAGE,YACE,SAAS,CAAC,oBADZ,uBAGE,KAAC,eAAD,EACE,OAAO,CAAEH,OAAO,CAACK,oBADnB,CAEE,GAAG,CAAEd,GAFP,CAGE,MAAM,CAAEC,MAHV,EAHF,EAHF,cAcE,KAAC,UAAD,EACE,WAAW,CAAEY,IAAI,CAACA,IADpB,EAdF,cAkBE,YACE,SAAS,CAAC,uBADZ,uBAGE,KAAC,YAAD,EACE,IAAI,CAAEA,IAAI,CAACA,IADb,CAEE,cAAc,CAAE,IAFlB,CAGE,QAAQ,CAAE,IAHZ,EAHF,EAlBF,GADF,CA8BD,CAjDD,CAmDA,cAAed,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport RecommendedTags from '../nav/Recommended_Tags';\nimport AllTagFeed from '../feeds/All_Tag_Feed';\nimport FollowedTags from '../search/resultTypes/Followed_Tags_Result';\n\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_RECOMMENDED_TAGS, FETCH_USER } = Queries;\n\nconst Discover = () => {\n  let [tag, setTag] = useState(null)\n \n  let { loading: loading1, error: error1, data: recTags } = useQuery(FETCH_RECOMMENDED_TAGS, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  let { loading: loading2, error: error2, data: user } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading1 || loading2) return 'Loading...';\n  if (error1) return `recommended Error: ${error1}`;\n  if (error2) return `user Error: ${error2}`;\n  \n  return (\n    <div\n      className='discoverContainer'\n    >\n      <div\n        className='discoverTagsHeader'\n      >\n        <RecommendedTags\n          recTags={recTags.fetchRecommendedTags}\n          tag={tag}\n          setTag={setTag}\n        />\n        \n      </div>\n\n      <AllTagFeed \n        currentUser={user.user}\n      />\n\n      <div\n        className='followedTagsContainer'\n      >\n        <FollowedTags\n          user={user.user}\n          followedActive={true}\n          discover={true}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Discover;"]},"metadata":{},"sourceType":"module"}