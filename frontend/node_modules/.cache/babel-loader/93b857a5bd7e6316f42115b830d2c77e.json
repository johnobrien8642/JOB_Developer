{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CaseInsensitiveTagMap = void 0;\n\nconst GenericTagMapper_1 = require(\"./GenericTagMapper\");\n\nclass CaseInsensitiveTagMap extends GenericTagMapper_1.CommonTagMapper {\n  constructor(tagTypes, tagMap) {\n    const upperCaseMap = {};\n\n    for (const tag of Object.keys(tagMap)) {\n      upperCaseMap[tag.toUpperCase()] = tagMap[tag];\n    }\n\n    super(tagTypes, upperCaseMap);\n  }\n  /**\r\n   * @tag  Native header tag\r\n   * @return common tag name (alias)\r\n   */\n\n\n  getCommonName(tag) {\n    return this.tagMap[tag.toUpperCase()];\n  }\n\n}\n\nexports.CaseInsensitiveTagMap = CaseInsensitiveTagMap;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js"],"names":["Object","defineProperty","exports","value","CaseInsensitiveTagMap","GenericTagMapper_1","require","CommonTagMapper","constructor","tagTypes","tagMap","upperCaseMap","tag","keys","toUpperCase","getCommonName"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,oBAAD,CAAlC;;AACA,MAAMF,qBAAN,SAAoCC,kBAAkB,CAACE,eAAvD,CAAuE;AACnEC,EAAAA,WAAW,CAACC,QAAD,EAAWC,MAAX,EAAmB;AAC1B,UAAMC,YAAY,GAAG,EAArB;;AACA,SAAK,MAAMC,GAAX,IAAkBZ,MAAM,CAACa,IAAP,CAAYH,MAAZ,CAAlB,EAAuC;AACnCC,MAAAA,YAAY,CAACC,GAAG,CAACE,WAAJ,EAAD,CAAZ,GAAkCJ,MAAM,CAACE,GAAD,CAAxC;AACH;;AACD,UAAMH,QAAN,EAAgBE,YAAhB;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,aAAa,CAACH,GAAD,EAAM;AACf,WAAO,KAAKF,MAAL,CAAYE,GAAG,CAACE,WAAJ,EAAZ,CAAP;AACH;;AAdkE;;AAgBvEZ,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CaseInsensitiveTagMap = void 0;\r\nconst GenericTagMapper_1 = require(\"./GenericTagMapper\");\r\nclass CaseInsensitiveTagMap extends GenericTagMapper_1.CommonTagMapper {\r\n    constructor(tagTypes, tagMap) {\r\n        const upperCaseMap = {};\r\n        for (const tag of Object.keys(tagMap)) {\r\n            upperCaseMap[tag.toUpperCase()] = tagMap[tag];\r\n        }\r\n        super(tagTypes, upperCaseMap);\r\n    }\r\n    /**\r\n     * @tag  Native header tag\r\n     * @return common tag name (alias)\r\n     */\r\n    getCommonName(tag) {\r\n        return this.tagMap[tag.toUpperCase()];\r\n    }\r\n}\r\nexports.CaseInsensitiveTagMap = CaseInsensitiveTagMap;\r\n"]},"metadata":{},"sourceType":"script"}