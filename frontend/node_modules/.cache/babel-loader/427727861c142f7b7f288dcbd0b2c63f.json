{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/search/Results.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport UserResult from './resultTypes/User_Result';\nimport TagResult from './resultTypes/Tag_Result';\nimport Queries from '../../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SEARCH_USERS_AND_TAGS\n} = Queries;\n\nconst Results = ({\n  user,\n  input,\n  active,\n  setActive\n}) => {\n  _s();\n\n  let {\n    data\n  } = useQuery(SEARCH_USERS_AND_TAGS, {\n    variables: {\n      filter: {\n        OR: [{\n          blogName_contains: input\n        }, {\n          tag_title_contains: input\n        }]\n      }\n    }\n  });\n\n  if (data) {\n    const {\n      usersAndTags\n    } = data;\n\n    if (usersAndTags) {\n      if (active) {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"results\",\n          tabIndex: \"0\",\n          children: usersAndTags.map((res, i) => {\n            switch (res.__typename) {\n              case 'UserType':\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"userResult\",\n                  children: /*#__PURE__*/_jsxDEV(UserResult, {\n                    currentUser: user,\n                    user: res,\n                    active: active,\n                    setActive: setActive\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 23\n                  }, this)\n                }, res._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 21\n                }, this);\n\n              case 'TagType':\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"tagResult\",\n                  children: /*#__PURE__*/_jsxDEV(TagResult, {\n                    currentUser: user,\n                    tag: res,\n                    active: active,\n                    setActive: setActive\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 23\n                  }, this)\n                }, res._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this);\n\n              default:\n                return /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Results, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/search/Results.js"],"names":["React","useQuery","UserResult","TagResult","Queries","SEARCH_USERS_AND_TAGS","Results","user","input","active","setActive","data","variables","filter","OR","blogName_contains","tag_title_contains","usersAndTags","map","res","i","__typename","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA4BD,OAAlC;;AAEA,MAAME,OAAO,GAAG,CAAC;AACfC,EAAAA,IADe;AAEfC,EAAAA,KAFe;AAGfC,EAAAA,MAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AAAA;;AAEJ,MAAI;AAAEC,IAAAA;AAAF,MAAWV,QAAQ,CAACI,qBAAD,EACnB;AAAEO,IAAAA,SAAS,EAAE;AACXC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,EAAE,EAAE,CACV;AAAEC,UAAAA,iBAAiB,EAAEP;AAArB,SADU,EAEV;AAAEQ,UAAAA,kBAAkB,EAAER;AAAtB,SAFU;AAAN;AADG;AAAb,GADmB,CAAvB;;AAWA,MAAIG,IAAJ,EAAU;AAER,UAAM;AAAEM,MAAAA;AAAF,QAAmBN,IAAzB;;AAEA,QAAIM,YAAJ,EAAkB;AAChB,UAAIR,MAAJ,EAAY;AACV,4BACE;AACE,UAAA,SAAS,EAAC,SADZ;AAEE,UAAA,QAAQ,EAAC,GAFX;AAAA,oBAIGQ,YAAY,CAACC,GAAb,CAAiB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC5B,oBAAOD,GAAG,CAACE,UAAX;AACE,mBAAK,UAAL;AACE,oCACE;AACE,kBAAA,SAAS,EAAC,YADZ;AAAA,yCAIE,QAAC,UAAD;AACE,oBAAA,WAAW,EAAEd,IADf;AAEE,oBAAA,IAAI,EAAEY,GAFR;AAGE,oBAAA,MAAM,EAAEV,MAHV;AAIE,oBAAA,SAAS,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA;AAJF,mBAEOS,GAAG,CAACG,GAFX;AAAA;AAAA;AAAA;AAAA,wBADF;;AAaF,mBAAK,SAAL;AACE,oCACE;AACE,kBAAA,SAAS,EAAC,WADZ;AAAA,yCAIE,QAAC,SAAD;AACE,oBAAA,WAAW,EAAEf,IADf;AAEE,oBAAA,GAAG,EAAEY,GAFP;AAGE,oBAAA,MAAM,EAAEV,MAHV;AAIE,oBAAA,SAAS,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA;AAJF,mBAEOS,GAAG,CAACG,GAFX;AAAA;AAAA;AAAA;AAAA,wBADF;;AAaF;AACE,oCACE;AAAA;AAAA;AAAA;AAAA,wBADF;AA9BJ;AAkCD,WAnCA;AAJH;AAAA;AAAA;AAAA;AAAA,gBADF;AA2CD,OA5CD,MA4CO;AACL,4BACE;AAAA;AAAA;AAAA;AAAA,gBADF;AAID;AACF,KAnDD,MAmDO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA,cADF;AAID;AACF,GA7DD,MA6DO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAID;AACF,CArFD;;GAAMhB,O;UAOWL,Q;;;KAPXK,O;AAuFN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport UserResult from './resultTypes/User_Result';\nimport TagResult from './resultTypes/Tag_Result';\n\nimport Queries from '../../graphql/queries';\nconst { SEARCH_USERS_AND_TAGS } = Queries;\n\nconst Results = ({\n  user,\n  input, \n  active, \n  setActive \n}) => {\n  \n  let { data } = useQuery(SEARCH_USERS_AND_TAGS,\n      { variables: {\n        filter: { OR: [\n            { blogName_contains: input },\n            { tag_title_contains: input }\n          ]\n        }\n      }\n    }\n  );\n  \n  if (data) {\n    \n    const { usersAndTags } = data;\n\n    if (usersAndTags) {\n      if (active) {\n        return (\n          <ul\n            className='results'\n            tabIndex='0'\n          >\n            {usersAndTags.map((res, i) => {\n              switch(res.__typename) {\n                case 'UserType':\n                  return(\n                    <li\n                      className='userResult'\n                      key={res._id}\n                    >\n                      <UserResult\n                        currentUser={user}\n                        user={res}\n                        active={active}\n                        setActive={setActive}\n                      />\n                    </li>\n                  )\n                case 'TagType':\n                  return(\n                    <li\n                      className='tagResult'\n                      key={res._id}\n                    >\n                      <TagResult\n                        currentUser={user}\n                        tag={res}\n                        active={active}\n                        setActive={setActive}\n                      />\n                    </li>\n                  )\n                default:\n                  return (\n                    <li></li>\n                  )\n                }\n            })}\n          </ul>\n        )\n      } else {\n        return (\n          <div>\n          </div>\n        )\n      }\n    } else {\n      return (\n        <div>\n        </div>\n      )\n    }\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}