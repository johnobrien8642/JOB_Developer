{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _inherits = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OggParser = exports.SegmentTable = void 0;\n\nvar Token = require(\"token-types\");\n\nvar initDebug = require(\"debug\");\n\nvar Util_1 = require(\"../common/Util\");\n\nvar FourCC_1 = require(\"../common/FourCC\");\n\nvar VorbisParser_1 = require(\"./vorbis/VorbisParser\");\n\nvar OpusParser_1 = require(\"./opus/OpusParser\");\n\nvar SpeexParser_1 = require(\"./speex/SpeexParser\");\n\nvar BasicParser_1 = require(\"../common/BasicParser\");\n\nvar TheoraParser_1 = require(\"./theora/TheoraParser\");\n\nvar core_1 = require(\"strtok3/lib/core\");\n\nvar debug = initDebug('music-metadata:parser:ogg');\n\nvar SegmentTable = /*#__PURE__*/function () {\n  function SegmentTable(header) {\n    _classCallCheck(this, SegmentTable);\n\n    this.len = header.page_segments;\n  }\n\n  _createClass(SegmentTable, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      return {\n        totalPageSize: SegmentTable.sum(buf, off, this.len)\n      };\n    }\n  }], [{\n    key: \"sum\",\n    value: function sum(buf, off, len) {\n      var s = 0;\n\n      for (var i = off; i < off + len; ++i) {\n        s += buf[i];\n      }\n\n      return s;\n    }\n  }]);\n\n  return SegmentTable;\n}();\n\nexports.SegmentTable = SegmentTable;\n/**\r\n * Parser for Ogg logical bitstream framing\r\n */\n\nvar OggParser = /*#__PURE__*/function (_BasicParser_1$BasicP) {\n  _inherits(OggParser, _BasicParser_1$BasicP);\n\n  var _super = _createSuper(OggParser);\n\n  function OggParser() {\n    _classCallCheck(this, OggParser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(OggParser, [{\n    key: \"parse\",\n    value:\n    /**\r\n     * Parse page\r\n     * @returns {Promise<void>}\r\n     */\n    function () {\n      var _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var header, segmentTable, pageData, id;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                debug('pos=%s, parsePage()', this.tokenizer.position);\n                _context.prev = 1;\n\n              case 2:\n                _context.next = 4;\n                return this.tokenizer.readToken(OggParser.Header);\n\n              case 4:\n                header = _context.sent;\n\n                if (!(header.capturePattern !== 'OggS')) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new Error('Invalid Ogg capture pattern');\n\n              case 7:\n                this.metadata.setFormat('container', 'Ogg');\n                this.header = header;\n                this.pageNumber = header.pageSequenceNo;\n                debug('page#=%s, Ogg.id=%s', header.pageSequenceNo, header.capturePattern);\n                _context.next = 13;\n                return this.tokenizer.readToken(new SegmentTable(header));\n\n              case 13:\n                segmentTable = _context.sent;\n                debug('totalPageSize=%s', segmentTable.totalPageSize);\n                _context.next = 17;\n                return this.tokenizer.readToken(new Token.BufferType(segmentTable.totalPageSize));\n\n              case 17:\n                pageData = _context.sent;\n                debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\n\n                if (!header.headerType.firstPage) {\n                  _context.next = 37;\n                  break;\n                }\n\n                id = new Token.StringType(7, 'ascii').get(pageData, 0);\n                _context.t0 = id;\n                _context.next = _context.t0 === '\\x01vorbis' ? 24 : _context.t0 === 'OpusHea' ? 27 : _context.t0 === 'Speex  ' ? 30 : _context.t0 === 'fishead' ? 33 : _context.t0 === '\\x00theora' ? 33 : 36;\n                break;\n\n              case 24:\n                // Ogg/Vorbis\n                debug('Set page consumer to Ogg/Vorbis');\n                this.pageConsumer = new VorbisParser_1.VorbisParser(this.metadata, this.options);\n                return _context.abrupt(\"break\", 37);\n\n              case 27:\n                // Ogg/Opus\n                debug('Set page consumer to Ogg/Opus');\n                this.pageConsumer = new OpusParser_1.OpusParser(this.metadata, this.options, this.tokenizer);\n                return _context.abrupt(\"break\", 37);\n\n              case 30:\n                // Ogg/Speex\n                debug('Set page consumer to Ogg/Speex');\n                this.pageConsumer = new SpeexParser_1.SpeexParser(this.metadata, this.options, this.tokenizer);\n                return _context.abrupt(\"break\", 37);\n\n              case 33:\n                // Ogg/Theora\n                debug('Set page consumer to Ogg/Theora');\n                this.pageConsumer = new TheoraParser_1.TheoraParser(this.metadata, this.options, this.tokenizer);\n                return _context.abrupt(\"break\", 37);\n\n              case 36:\n                throw new Error('gg audio-codec not recognized (id=' + id + ')');\n\n              case 37:\n                this.pageConsumer.parsePage(header, pageData);\n\n              case 38:\n                if (!header.headerType.lastPage) {\n                  _context.next = 2;\n                  break;\n                }\n\n              case 39:\n                _context.next = 55;\n                break;\n\n              case 41:\n                _context.prev = 41;\n                _context.t1 = _context[\"catch\"](1);\n\n                if (!(_context.t1 instanceof core_1.EndOfStreamError)) {\n                  _context.next = 50;\n                  break;\n                }\n\n                this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                debug(\"End-of-stream\");\n                this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n\n                if (this.header) {\n                  this.pageConsumer.calculateDuration(this.header);\n                }\n\n                _context.next = 55;\n                break;\n\n              case 50:\n                if (!_context.t1.message.startsWith('FourCC')) {\n                  _context.next = 54;\n                  break;\n                }\n\n                if (this.pageNumber > 0) {\n                  // ignore this error: work-around if last OGG-page is not marked with last-page flag\n                  this.metadata.addWarning('Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag');\n                  this.pageConsumer.flush();\n                }\n\n                _context.next = 55;\n                break;\n\n              case 54:\n                throw _context.t1;\n\n              case 55:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 41]]);\n      }));\n\n      function parse() {\n        return _parse.apply(this, arguments);\n      }\n\n      return parse;\n    }()\n  }]);\n\n  return OggParser;\n}(BasicParser_1.BasicParser);\n\nexports.OggParser = OggParser;\nOggParser.Header = {\n  len: 27,\n  get: function get(buf, off) {\n    return {\n      capturePattern: FourCC_1.FourCcToken.get(buf, off),\n      version: buf.readUInt8(off + 4),\n      headerType: {\n        continued: Util_1.default.strtokBITSET.get(buf, off + 5, 0),\n        firstPage: Util_1.default.strtokBITSET.get(buf, off + 5, 1),\n        lastPage: Util_1.default.strtokBITSET.get(buf, off + 5, 2)\n      },\n      // packet_flag: buf.readUInt8(off + 5),\n      absoluteGranulePosition: buf.readIntLE(off + 6, 6),\n      streamSerialNumber: Token.UINT32_LE.get(buf, off + 14),\n      pageSequenceNo: Token.UINT32_LE.get(buf, off + 18),\n      pageChecksum: Token.UINT32_LE.get(buf, off + 22),\n      page_segments: buf.readUInt8(off + 26)\n    };\n  }\n};","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/ogg/OggParser.js"],"names":["Object","defineProperty","exports","value","OggParser","SegmentTable","Token","require","initDebug","Util_1","FourCC_1","VorbisParser_1","OpusParser_1","SpeexParser_1","BasicParser_1","TheoraParser_1","core_1","debug","header","len","page_segments","buf","off","totalPageSize","sum","s","i","tokenizer","position","readToken","Header","capturePattern","Error","metadata","setFormat","pageNumber","pageSequenceNo","segmentTable","BufferType","pageData","headerType","firstPage","lastPage","continued","id","StringType","get","pageConsumer","VorbisParser","options","OpusParser","SpeexParser","TheoraParser","parsePage","EndOfStreamError","addWarning","calculateDuration","message","startsWith","flush","BasicParser","FourCcToken","version","readUInt8","default","strtokBITSET","absoluteGranulePosition","readIntLE","streamSerialNumber","UINT32_LE","pageChecksum"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OggParser = exports.SegmentTable = void 0;\r\nconst Token = require(\"token-types\");\r\nconst initDebug = require(\"debug\");\r\nconst Util_1 = require(\"../common/Util\");\r\nconst FourCC_1 = require(\"../common/FourCC\");\r\nconst VorbisParser_1 = require(\"./vorbis/VorbisParser\");\r\nconst OpusParser_1 = require(\"./opus/OpusParser\");\r\nconst SpeexParser_1 = require(\"./speex/SpeexParser\");\r\nconst BasicParser_1 = require(\"../common/BasicParser\");\r\nconst TheoraParser_1 = require(\"./theora/TheoraParser\");\r\nconst core_1 = require(\"strtok3/lib/core\");\r\nconst debug = initDebug('music-metadata:parser:ogg');\r\nclass SegmentTable {\r\n    constructor(header) {\r\n        this.len = header.page_segments;\r\n    }\r\n    static sum(buf, off, len) {\r\n        let s = 0;\r\n        for (let i = off; i < off + len; ++i) {\r\n            s += buf[i];\r\n        }\r\n        return s;\r\n    }\r\n    get(buf, off) {\r\n        return {\r\n            totalPageSize: SegmentTable.sum(buf, off, this.len)\r\n        };\r\n    }\r\n}\r\nexports.SegmentTable = SegmentTable;\r\n/**\r\n * Parser for Ogg logical bitstream framing\r\n */\r\nclass OggParser extends BasicParser_1.BasicParser {\r\n    /**\r\n     * Parse page\r\n     * @returns {Promise<void>}\r\n     */\r\n    async parse() {\r\n        debug('pos=%s, parsePage()', this.tokenizer.position);\r\n        try {\r\n            let header;\r\n            do {\r\n                header = await this.tokenizer.readToken(OggParser.Header);\r\n                if (header.capturePattern !== 'OggS')\r\n                    throw new Error('Invalid Ogg capture pattern');\r\n                this.metadata.setFormat('container', 'Ogg');\r\n                this.header = header;\r\n                this.pageNumber = header.pageSequenceNo;\r\n                debug('page#=%s, Ogg.id=%s', header.pageSequenceNo, header.capturePattern);\r\n                const segmentTable = await this.tokenizer.readToken(new SegmentTable(header));\r\n                debug('totalPageSize=%s', segmentTable.totalPageSize);\r\n                const pageData = await this.tokenizer.readToken(new Token.BufferType(segmentTable.totalPageSize));\r\n                debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\r\n                if (header.headerType.firstPage) {\r\n                    const id = new Token.StringType(7, 'ascii').get(pageData, 0);\r\n                    switch (id) {\r\n                        case '\\x01vorbis': // Ogg/Vorbis\r\n                            debug('Set page consumer to Ogg/Vorbis');\r\n                            this.pageConsumer = new VorbisParser_1.VorbisParser(this.metadata, this.options);\r\n                            break;\r\n                        case 'OpusHea': // Ogg/Opus\r\n                            debug('Set page consumer to Ogg/Opus');\r\n                            this.pageConsumer = new OpusParser_1.OpusParser(this.metadata, this.options, this.tokenizer);\r\n                            break;\r\n                        case 'Speex  ': // Ogg/Speex\r\n                            debug('Set page consumer to Ogg/Speex');\r\n                            this.pageConsumer = new SpeexParser_1.SpeexParser(this.metadata, this.options, this.tokenizer);\r\n                            break;\r\n                        case 'fishead':\r\n                        case '\\x00theora': // Ogg/Theora\r\n                            debug('Set page consumer to Ogg/Theora');\r\n                            this.pageConsumer = new TheoraParser_1.TheoraParser(this.metadata, this.options, this.tokenizer);\r\n                            break;\r\n                        default:\r\n                            throw new Error('gg audio-codec not recognized (id=' + id + ')');\r\n                    }\r\n                }\r\n                this.pageConsumer.parsePage(header, pageData);\r\n            } while (!header.headerType.lastPage);\r\n        }\r\n        catch (err) {\r\n            if (err instanceof core_1.EndOfStreamError) {\r\n                this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\r\n                debug(`End-of-stream`);\r\n                this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\r\n                if (this.header) {\r\n                    this.pageConsumer.calculateDuration(this.header);\r\n                }\r\n            }\r\n            else if (err.message.startsWith('FourCC')) {\r\n                if (this.pageNumber > 0) {\r\n                    // ignore this error: work-around if last OGG-page is not marked with last-page flag\r\n                    this.metadata.addWarning('Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag');\r\n                    this.pageConsumer.flush();\r\n                }\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.OggParser = OggParser;\r\nOggParser.Header = {\r\n    len: 27,\r\n    get: (buf, off) => {\r\n        return {\r\n            capturePattern: FourCC_1.FourCcToken.get(buf, off),\r\n            version: buf.readUInt8(off + 4),\r\n            headerType: {\r\n                continued: Util_1.default.strtokBITSET.get(buf, off + 5, 0),\r\n                firstPage: Util_1.default.strtokBITSET.get(buf, off + 5, 1),\r\n                lastPage: Util_1.default.strtokBITSET.get(buf, off + 5, 2)\r\n            },\r\n            // packet_flag: buf.readUInt8(off + 5),\r\n            absoluteGranulePosition: buf.readIntLE(off + 6, 6),\r\n            streamSerialNumber: Token.UINT32_LE.get(buf, off + 14),\r\n            pageSequenceNo: Token.UINT32_LE.get(buf, off + 18),\r\n            pageChecksum: Token.UINT32_LE.get(buf, off + 22),\r\n            page_segments: buf.readUInt8(off + 26)\r\n        };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}