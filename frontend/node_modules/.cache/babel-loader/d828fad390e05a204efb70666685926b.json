{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import{useMutation}from'@apollo/client';import{useHistory,Link}from'react-router-dom';import Cookies from'js-cookie';import PhotoPostOrRegisterPhotoInput from'../posts/util/components/forms/inputTypes/Photo_Post_Or_Register_Photo_Input';import Queries from'../../graphql/queries';import Mutations from'../../graphql/mutations';import PostFormUtil from'../posts/util/functions/post_form_util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var REGISTER_USER=Mutations.REGISTER_USER;var IS_LOGGED_IN=Queries.IS_LOGGED_IN;var mainPost=PostFormUtil.mainPost,handleFormData=PostFormUtil.handleFormData;var Register=function Register(){var previewProfilePicRef=useRef({});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),profileImageFile=_useState2[0],setProfileImageFile=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),blogName=_useState6[0],setBlogName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),blogDescription=_useState8[0],setBlogDescription=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),password=_useState10[0],setPassword=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),errorMessages=_useState12[0],addErrorMessage=_useState12[1];var history=useHistory();var _useMutation=useMutation(REGISTER_USER,{onError:function onError(error){if(error.message==='Account already exists with that email'){history.push({pathname:'/login',state:{errMessage:error.message}});}else{addErrorMessage(errorMessages=[]);error.graphQLErrors.forEach(function(error,i){addErrorMessage(errorMessages.concat(error.message));});}},onCompleted:function onCompleted(_ref){var registerUser=_ref.registerUser;var token=registerUser.token,blogName=registerUser.blogName;Cookies.set('auth-token',token);Cookies.set('currentUser',blogName);resetInputs();window.location.reload();},update:function update(client,_ref2){var data=_ref2.data;client.writeQuery({query:IS_LOGGED_IN,data:{isLoggedIn:data.registerUser.loggedIn}});}}),_useMutation2=_slicedToArray(_useMutation,1),registerUser=_useMutation2[0];var resetInputs=function resetInputs(){setEmail(email='');setBlogName(blogName='');setPassword(password='');addErrorMessage(errorMessages=[]);};var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var mainImageFormData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();mainImageFormData=handleFormData(profileImageFile);Promise.all([mainPost(mainImageFormData)]).then(function(_ref4){var _ref5=_slicedToArray(_ref4,1),mainUpload=_ref5[0];var instanceData={profilePicId:mainUpload[0]?mainUpload[0]._id:null,email:email,blogName:blogName,password:password,blogDescription:blogDescription};registerUser({variables:{instanceData:instanceData}});});case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"registerForm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"greetingHeader\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Rumblr\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){handleSubmit(e);},children:[/*#__PURE__*/_jsx(PhotoPostOrRegisterPhotoInput,{register:true,previewProfilePicRef:previewProfilePicRef,profileImageFile:profileImageFile,setProfileImageFile:setProfileImageFile}),/*#__PURE__*/_jsx(\"ul\",{className:\"authErrors\",children:errorMessages.map(function(error,i){return/*#__PURE__*/_jsx(\"li\",{children:error},i);})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:email,placeholder:'Email',onChange:function onChange(e){return setEmail(email=e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:blogName,placeholder:'Blog Name',onChange:function onChange(e){return setBlogName(blogName=e.target.value);}}),/*#__PURE__*/_jsx(\"textarea\",{value:blogDescription,placeholder:'Blog description',onChange:function onChange(e){if(blogDescription.length<150){setBlogDescription(blogDescription=e.target.value);}}}),/*#__PURE__*/_jsxs(\"span\",{children:[150-blogDescription.length,\" characters left\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,placeholder:'Password',onChange:function onChange(e){return setPassword(password=e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign up\"}),/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Already have an account? Log in!\"})]})]});};export default Register;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/auth/Register.js"],"names":["React","useState","useRef","useMutation","useHistory","Link","Cookies","PhotoPostOrRegisterPhotoInput","Queries","Mutations","PostFormUtil","REGISTER_USER","IS_LOGGED_IN","mainPost","handleFormData","Register","previewProfilePicRef","profileImageFile","setProfileImageFile","email","setEmail","blogName","setBlogName","blogDescription","setBlogDescription","password","setPassword","errorMessages","addErrorMessage","history","onError","error","message","push","pathname","state","errMessage","graphQLErrors","forEach","i","concat","onCompleted","registerUser","token","set","resetInputs","window","location","reload","update","client","data","writeQuery","query","isLoggedIn","loggedIn","handleSubmit","e","preventDefault","mainImageFormData","Promise","all","then","mainUpload","instanceData","profilePicId","_id","variables","map","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport PhotoPostOrRegisterPhotoInput from '../posts/util/components/forms/inputTypes/Photo_Post_Or_Register_Photo_Input';\n\nimport Queries from '../../graphql/queries';\nimport Mutations from '../../graphql/mutations';\nimport PostFormUtil from '../posts/util/functions/post_form_util.js';\nconst { REGISTER_USER } = Mutations;\nconst { IS_LOGGED_IN } = Queries;\nconst { mainPost, \n        handleFormData } = PostFormUtil;\n\n\nconst Register = () => {\n  let previewProfilePicRef = useRef({});\n  let [profileImageFile, setProfileImageFile] = useState([]);\n  let [email, setEmail] = useState('');\n  let [blogName, setBlogName] = useState('');\n  let [blogDescription, setBlogDescription] = useState('');\n  let [password, setPassword] = useState('');\n  let [errorMessages, addErrorMessage] = useState([]);\n  let history = useHistory();\n\n  const [ registerUser ] = useMutation(REGISTER_USER, {\n    onError(error) {\n      if(error.message === 'Account already exists with that email') {\n        history.push({\n          pathname: '/login',\n          state: {\n            errMessage: error.message\n          }\n        })\n      } else {\n        addErrorMessage(errorMessages = [])\n        error.graphQLErrors.forEach((error, i) => {\n          addErrorMessage(errorMessages.concat(error.message))\n        })\n      }\n    },\n    onCompleted({ registerUser }) {\n      const { token, blogName } = registerUser;\n      Cookies.set('auth-token', token)\n      Cookies.set('currentUser', blogName)\n      resetInputs();\n      window.location.reload();\n    },\n    update(client, { data }) {\n      client.writeQuery({\n        query: IS_LOGGED_IN,\n        data: {\n          isLoggedIn: data.registerUser.loggedIn,\n        }\n      })\n    }\n  })\n\n  const resetInputs = () => {\n    setEmail(email = '');\n    setBlogName(blogName = '');\n    setPassword(password = '');\n    addErrorMessage(errorMessages = []);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    var mainImageFormData = handleFormData(profileImageFile)\n\n    Promise.all([\n      mainPost(mainImageFormData)\n    ])\n    .then(([mainUpload]) => {\n      \n      var instanceData = {\n        profilePicId: mainUpload[0] ? mainUpload[0]._id : null,\n        email: email, \n        blogName: blogName,\n        password: password,\n        blogDescription: blogDescription\n      }\n\n      registerUser({ \n        variables: {\n          instanceData: instanceData\n        }\n      })\n    })\n  }\n\n  return (\n    <div\n      className='registerForm'\n    >\n      <div\n        className='greetingHeader'\n      >\n        <h1>Rumblr</h1>\n      </div>\n\n        <form\n          onSubmit={e => {\n            handleSubmit(e)\n          }}\n        >\n\n        <PhotoPostOrRegisterPhotoInput \n          register={true}\n          previewProfilePicRef={previewProfilePicRef}\n          profileImageFile={profileImageFile}\n          setProfileImageFile={setProfileImageFile}\n        />\n\n        <ul\n          className='authErrors'\n        >\n          {errorMessages.map((error, i) => {\n            return <li key={i}>{error}</li>\n          })}\n        </ul>\n\n        <input\n          type='text'\n          value={email}\n          placeholder={'Email'}\n          onChange={e => setEmail(email = e.target.value)}\n        />\n        <input\n          type='text'\n          value={blogName}\n          placeholder={'Blog Name'}\n          onChange={e => setBlogName(blogName = e.target.value)}\n        />\n        <textarea\n          value={blogDescription}\n          placeholder={'Blog description'}\n          onChange={e => {\n            if (blogDescription.length < 150) {\n              setBlogDescription(blogDescription = e.target.value)\n            } \n          }}\n        ></textarea>\n        <span>{150 - blogDescription.length} characters left</span>\n        \n\n        <input\n          type='password'\n          value={password}\n          placeholder={'Password'}\n          onChange={e => setPassword(password = e.target.value)}\n        />\n\n        <button \n          type='submit'\n        >\n          Sign up\n        </button>\n\n        <Link\n          to='/login'\n        >\n          Already have an account? Log in!\n        </Link>\n      </form>\n    </div>\n  )\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}