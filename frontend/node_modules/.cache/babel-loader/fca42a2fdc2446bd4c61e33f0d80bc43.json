{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{Link}from'react-router-dom';import{useQuery}from'@apollo/client';import Cookies from'js-cookie';import ProfilePic from'../user/util/components/Profile_Pic';import PostShow from'../posts/types/showOrUpdate/PostShow';import FollowButton from'../posts/util/components/social/Follow_Button';import PostShowUtil from'../posts/util/functions/post_show_util.js';import Queries from'../../graphql/queries.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FETCH_ALL_TAG_FEED=Queries.FETCH_ALL_TAG_FEED;var handlePostClassName=PostShowUtil.handlePostClassName;var AllTagFeed=function AllTagFeed(_ref){var user=_ref.user;var leftFeedArr=useRef([]);var rightFeedArr=useRef([]);useEffect(function(){return function(){refetch();};//eslint-disable-next-line\n},[]);var _useQuery=useQuery(FETCH_ALL_TAG_FEED,{variables:{query:Cookies.get('currentUser')}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;if(loading)return'';if(error)return\"Error: \".concat(error.message);var fetchAllTagFeed=data.fetchAllTagFeed;if(fetchAllTagFeed){leftFeedArr.current=fetchAllTagFeed.slice(0,fetchAllTagFeed.length/2);rightFeedArr.current=fetchAllTagFeed.slice(fetchAllTagFeed.length/2,fetchAllTagFeed.length);}return/*#__PURE__*/_jsxs(\"div\",{className:\"discoverFeed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"leftColumn\",children:leftFeedArr.current.map(function(post,i){if(post.kind==='Repost'){return/*#__PURE__*/_jsxs(\"div\",{className:handlePostClassName(post),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"userRepostShowHeader\",children:[/*#__PURE__*/_jsx(ProfilePic,{user:post.user}),/*#__PURE__*/_jsxs(\"span\",{className:\"repostHeaderContainer\",children:[/*#__PURE__*/_jsx(Link,{className:\"user\",to:\"/view/blog/\".concat(Cookies.get('currentUser')),children:Cookies.get('currentUser')}),/*#__PURE__*/_jsxs(\"div\",{className:\"iconRepostedAndFollowContainer\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",alt:\"\"}),/*#__PURE__*/_jsx(Link,{className:\"repostedFrom\",to:\"/view/blog/\".concat(post.user.blogName),children:post.user.blogName}),/*#__PURE__*/_jsx(FollowButton,{feed:true,user:post.repostedFrom})]})]})]}),/*#__PURE__*/_jsx(PostShow,{post:post,discover:true})]},post._id);}else{return/*#__PURE__*/_jsx(\"div\",{className:handlePostClassName(post),children:/*#__PURE__*/_jsx(PostShow,{post:post,user:user,discover:true})},post._id);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"rightColumn\",children:rightFeedArr.current.map(function(post,i){if(post.kind==='Repost'){return/*#__PURE__*/_jsxs(\"div\",{className:handlePostClassName(post),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"userRepostShowHeader\",children:[/*#__PURE__*/_jsx(ProfilePic,{user:post.user}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Link,{className:\"user\",to:\"/view/blog/\".concat(Cookies.get('currentUser')),children:Cookies.get('currentUser')}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",alt:\"\"}),/*#__PURE__*/_jsx(Link,{className:\"repostedFrom\",to:\"/view/blog/\".concat(post.user.blogName),children:post.user.blogName})]})]})]}),/*#__PURE__*/_jsx(PostShow,{post:post,discover:true})]},post._id);}else{return/*#__PURE__*/_jsx(\"div\",{className:handlePostClassName(post),children:/*#__PURE__*/_jsx(PostShow,{post:post,user:user,discover:true})},post._id);}})})]});};export default AllTagFeed;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/feeds/All_Tag_Feed.js"],"names":["React","useRef","useEffect","Link","useQuery","Cookies","ProfilePic","PostShow","FollowButton","PostShowUtil","Queries","FETCH_ALL_TAG_FEED","handlePostClassName","AllTagFeed","user","leftFeedArr","rightFeedArr","refetch","variables","query","get","loading","error","data","message","fetchAllTagFeed","current","slice","length","map","post","i","kind","blogName","repostedFrom","_id"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostShow from '../posts/types/showOrUpdate/PostShow';\nimport FollowButton from '../posts/util/components/social/Follow_Button';\n\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_ALL_TAG_FEED } = Queries;\nconst { handlePostClassName } = PostShowUtil;\n\nconst AllTagFeed = ({\n  user\n}) => {\n  let leftFeedArr = useRef([]);\n  let rightFeedArr = useRef([]);\n\n  useEffect(() => {\n    \n    return () => {\n      refetch()\n    }\n    //eslint-disable-next-line\n  }, [])\n  \n  let { loading, error, data, refetch } = useQuery(FETCH_ALL_TAG_FEED, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading) return '';\n  if (error) return `Error: ${error.message}`;\n  \n  const { fetchAllTagFeed } = data;\n  \n  if (fetchAllTagFeed) {\n    leftFeedArr.current = fetchAllTagFeed.slice(0, (fetchAllTagFeed.length / 2))\n    rightFeedArr.current = fetchAllTagFeed.slice((fetchAllTagFeed.length / 2), fetchAllTagFeed.length)\n  }\n\n  return(\n    <div\n      className='discoverFeed'\n    >\n      <div\n        className='leftColumn'\n      >\n      {leftFeedArr.current.map((post, i) => {\n        if (post.kind === 'Repost') {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <div\n                className='userRepostShowHeader'\n              >\n                <ProfilePic\n                  user={post.user}\n                />\n                <span\n                  className='repostHeaderContainer'\n                >\n                  <Link \n                    className='user'\n                    to={`/view/blog/${Cookies.get('currentUser')}`}>\n                    {Cookies.get('currentUser')}\n                  </Link>\n\n                  <div\n                    className='iconRepostedAndFollowContainer'\n                  >\n                    <img\n                      src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                      alt=''\n                    />\n                    <Link\n                      className='repostedFrom'\n                      to={`/view/blog/${post.user.blogName}`}\n                    >\n                      {post.user.blogName}\n                    </Link>\n                    <FollowButton\n                      feed={true}\n                      user={post.repostedFrom}\n                    />\n                  </div>\n                </span>\n              </div>\n\n              <PostShow\n                post={post}\n                discover={true}\n              />\n            </div>\n          )\n        } else {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <PostShow\n                post={post}\n                user={user}\n                discover={true}\n              />\n            </div>\n          )\n        }\n      })}\n      </div>\n      <div\n        className='rightColumn'\n      >\n      {rightFeedArr.current.map((post, i) => {\n        if (post.kind === 'Repost') {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <div\n                className='userRepostShowHeader'\n              >\n                <ProfilePic\n                  user={post.user}\n                />\n                <span>\n                  <Link \n                    className='user'\n                    to={`/view/blog/${Cookies.get('currentUser')}`}>\n                    {Cookies.get('currentUser')}\n                  </Link>\n\n                  <div>\n                    <img\n                      src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                      alt=''\n                    />\n                    <Link\n                      className='repostedFrom'\n                      to={`/view/blog/${post.user.blogName}`}\n                    >\n                      {post.user.blogName}\n                    </Link>\n                  </div>\n                </span>\n              </div>\n\n              <PostShow\n                post={post}\n                discover={true}\n              />\n            </div>\n          )\n        } else {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <PostShow\n                post={post}\n                user={user}\n                discover={true}\n              />\n            </div>\n          )\n        }\n      })}\n      </div>\n    </div>\n  )\n}\n\nexport default AllTagFeed;"]},"metadata":{},"sourceType":"module"}