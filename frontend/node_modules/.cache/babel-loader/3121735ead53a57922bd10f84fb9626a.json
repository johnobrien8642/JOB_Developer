{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLyricsHeaderLength = exports.endTag2 = void 0;\nexports.endTag2 = 'LYRICS200';\n\nasync function getLyricsHeaderLength(reader) {\n  if (reader.fileSize >= 143) {\n    const buf = Buffer.alloc(15);\n    await reader.randomRead(buf, 0, buf.length, reader.fileSize - 143);\n    const txt = buf.toString('binary');\n    const tag = txt.substr(6);\n\n    if (tag === exports.endTag2) {\n      return parseInt(txt.substr(0, 6), 10) + 15;\n    }\n  }\n\n  return 0;\n}\n\nexports.getLyricsHeaderLength = getLyricsHeaderLength;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/lyrics3/Lyrics3.js"],"names":["Object","defineProperty","exports","value","getLyricsHeaderLength","endTag2","reader","fileSize","buf","Buffer","alloc","randomRead","length","txt","toString","tag","substr","parseInt"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgCF,OAAO,CAACG,OAAR,GAAkB,KAAK,CAAvD;AACAH,OAAO,CAACG,OAAR,GAAkB,WAAlB;;AACA,eAAeD,qBAAf,CAAqCE,MAArC,EAA6C;AACzC,MAAIA,MAAM,CAACC,QAAP,IAAmB,GAAvB,EAA4B;AACxB,UAAMC,GAAG,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,CAAZ;AACA,UAAMJ,MAAM,CAACK,UAAP,CAAkBH,GAAlB,EAAuB,CAAvB,EAA0BA,GAAG,CAACI,MAA9B,EAAsCN,MAAM,CAACC,QAAP,GAAkB,GAAxD,CAAN;AACA,UAAMM,GAAG,GAAGL,GAAG,CAACM,QAAJ,CAAa,QAAb,CAAZ;AACA,UAAMC,GAAG,GAAGF,GAAG,CAACG,MAAJ,CAAW,CAAX,CAAZ;;AACA,QAAID,GAAG,KAAKb,OAAO,CAACG,OAApB,EAA6B;AACzB,aAAOY,QAAQ,CAACJ,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAR,GAAiC,EAAxC;AACH;AACJ;;AACD,SAAO,CAAP;AACH;;AACDd,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getLyricsHeaderLength = exports.endTag2 = void 0;\r\nexports.endTag2 = 'LYRICS200';\r\nasync function getLyricsHeaderLength(reader) {\r\n    if (reader.fileSize >= 143) {\r\n        const buf = Buffer.alloc(15);\r\n        await reader.randomRead(buf, 0, buf.length, reader.fileSize - 143);\r\n        const txt = buf.toString('binary');\r\n        const tag = txt.substr(6);\r\n        if (tag === exports.endTag2) {\r\n            return parseInt(txt.substr(0, 6), 10) + 15;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nexports.getLyricsHeaderLength = getLyricsHeaderLength;\r\n"]},"metadata":{},"sourceType":"script"}