{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atom = void 0;\n\nconst initDebug = require(\"debug\");\n\nconst AtomToken = require(\"./AtomToken\");\n\nconst debug = initDebug('music-metadata:parser:MP4:Atom');\n\nclass Atom {\n  constructor(header, extended, parent) {\n    this.header = header;\n    this.extended = extended;\n    this.parent = parent;\n    this.children = [];\n    this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\n  }\n\n  static async readAtom(tokenizer, dataHandler, parent, remaining) {\n    // Parse atom header\n    const offset = tokenizer.position; // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n\n    const header = await tokenizer.readToken(AtomToken.Header);\n    const extended = header.length === 1;\n\n    if (extended) {\n      header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\n    }\n\n    const atomBean = new Atom(header, header.length === 1, parent);\n    const payloadLength = atomBean.getPayloadLength(remaining);\n    debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\n\n    await atomBean.readData(tokenizer, dataHandler, payloadLength);\n    return atomBean;\n  }\n\n  getHeaderLength() {\n    return this.extended ? 16 : 8;\n  }\n\n  getPayloadLength(remaining) {\n    return (this.header.length === 0 ? remaining : this.header.length) - this.getHeaderLength();\n  }\n\n  async readAtoms(tokenizer, dataHandler, size) {\n    while (size > 0) {\n      const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\n      this.children.push(atomBean);\n      size -= atomBean.header.length === 0 ? size : atomBean.header.length;\n    }\n  }\n\n  async readData(tokenizer, dataHandler, remaining) {\n    switch (this.header.name) {\n      // \"Container\" atoms, contains nested atoms\n      case 'moov': // The Movie Atom: contains other atoms\n\n      case 'udta': // User defined atom\n\n      case 'trak':\n      case 'mdia': // Media atom\n\n      case 'minf': // Media Information Atom\n\n      case 'stbl': // The Sample Table Atom\n\n      case '<id>':\n      case 'ilst':\n      case 'tref':\n        return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\n\n      case 'meta':\n        // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\n        // meta has 4 bytes of padding, ignore\n        await tokenizer.ignore(4);\n        return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - 4);\n\n      case 'mdhd': // Media header atom\n\n      case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\n\n      case 'tkhd':\n      case 'stsz':\n      case 'mdat':\n      default:\n        return dataHandler(this, remaining);\n    }\n  }\n\n}\n\nexports.Atom = Atom;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/mp4/Atom.js"],"names":["Object","defineProperty","exports","value","Atom","initDebug","require","AtomToken","debug","constructor","header","extended","parent","children","atomPath","name","readAtom","tokenizer","dataHandler","remaining","offset","position","readToken","Header","length","ExtendedSize","atomBean","payloadLength","getPayloadLength","readData","getHeaderLength","readAtoms","size","push","ignore"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Atom = void 0;\r\nconst initDebug = require(\"debug\");\r\nconst AtomToken = require(\"./AtomToken\");\r\nconst debug = initDebug('music-metadata:parser:MP4:Atom');\r\nclass Atom {\r\n    constructor(header, extended, parent) {\r\n        this.header = header;\r\n        this.extended = extended;\r\n        this.parent = parent;\r\n        this.children = [];\r\n        this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\r\n    }\r\n    static async readAtom(tokenizer, dataHandler, parent, remaining) {\r\n        // Parse atom header\r\n        const offset = tokenizer.position;\r\n        // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\r\n        const header = await tokenizer.readToken(AtomToken.Header);\r\n        const extended = header.length === 1;\r\n        if (extended) {\r\n            header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\r\n        }\r\n        const atomBean = new Atom(header, header.length === 1, parent);\r\n        const payloadLength = atomBean.getPayloadLength(remaining);\r\n        debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\r\n        await atomBean.readData(tokenizer, dataHandler, payloadLength);\r\n        return atomBean;\r\n    }\r\n    getHeaderLength() {\r\n        return this.extended ? 16 : 8;\r\n    }\r\n    getPayloadLength(remaining) {\r\n        return (this.header.length === 0 ? remaining : this.header.length) - this.getHeaderLength();\r\n    }\r\n    async readAtoms(tokenizer, dataHandler, size) {\r\n        while (size > 0) {\r\n            const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\r\n            this.children.push(atomBean);\r\n            size -= atomBean.header.length === 0 ? size : atomBean.header.length;\r\n        }\r\n    }\r\n    async readData(tokenizer, dataHandler, remaining) {\r\n        switch (this.header.name) {\r\n            // \"Container\" atoms, contains nested atoms\r\n            case 'moov': // The Movie Atom: contains other atoms\r\n            case 'udta': // User defined atom\r\n            case 'trak':\r\n            case 'mdia': // Media atom\r\n            case 'minf': // Media Information Atom\r\n            case 'stbl': // The Sample Table Atom\r\n            case '<id>':\r\n            case 'ilst':\r\n            case 'tref':\r\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\r\n            case 'meta': // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\r\n                // meta has 4 bytes of padding, ignore\r\n                await tokenizer.ignore(4);\r\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - 4);\r\n            case 'mdhd': // Media header atom\r\n            case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\r\n            case 'tkhd':\r\n            case 'stsz':\r\n            case 'mdat':\r\n            default:\r\n                return dataHandler(this, remaining);\r\n        }\r\n    }\r\n}\r\nexports.Atom = Atom;\r\n"]},"metadata":{},"sourceType":"script"}