{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextEncodingToken = exports.ExtendedHeader = exports.ID3v2Header = exports.UINT32SYNCSAFE = exports.AttachedPictureType = void 0;\n\nconst Token = require(\"token-types\");\n\nconst Util_1 = require(\"../common/Util\");\n/**\r\n * The picture type according to the ID3v2 APIC frame\r\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\r\n */\n\n\nvar AttachedPictureType;\n\n(function (AttachedPictureType) {\n  AttachedPictureType[AttachedPictureType[\"Other\"] = 0] = \"Other\";\n  AttachedPictureType[AttachedPictureType[\"32x32 pixels 'file icon' (PNG only)\"] = 1] = \"32x32 pixels 'file icon' (PNG only)\";\n  AttachedPictureType[AttachedPictureType[\"Other file icon\"] = 2] = \"Other file icon\";\n  AttachedPictureType[AttachedPictureType[\"Cover (front)\"] = 3] = \"Cover (front)\";\n  AttachedPictureType[AttachedPictureType[\"Cover (back)\"] = 4] = \"Cover (back)\";\n  AttachedPictureType[AttachedPictureType[\"Leaflet page\"] = 5] = \"Leaflet page\";\n  AttachedPictureType[AttachedPictureType[\"Media (e.g. label side of CD)\"] = 6] = \"Media (e.g. label side of CD)\";\n  AttachedPictureType[AttachedPictureType[\"Lead artist/lead performer/soloist\"] = 7] = \"Lead artist/lead performer/soloist\";\n  AttachedPictureType[AttachedPictureType[\"Artist/performer\"] = 8] = \"Artist/performer\";\n  AttachedPictureType[AttachedPictureType[\"Conductor\"] = 9] = \"Conductor\";\n  AttachedPictureType[AttachedPictureType[\"Band/Orchestra\"] = 10] = \"Band/Orchestra\";\n  AttachedPictureType[AttachedPictureType[\"Composer\"] = 11] = \"Composer\";\n  AttachedPictureType[AttachedPictureType[\"Lyricist/text writer\"] = 12] = \"Lyricist/text writer\";\n  AttachedPictureType[AttachedPictureType[\"Recording Location\"] = 13] = \"Recording Location\";\n  AttachedPictureType[AttachedPictureType[\"During recording\"] = 14] = \"During recording\";\n  AttachedPictureType[AttachedPictureType[\"During performance\"] = 15] = \"During performance\";\n  AttachedPictureType[AttachedPictureType[\"Movie/video screen capture\"] = 16] = \"Movie/video screen capture\";\n  AttachedPictureType[AttachedPictureType[\"A bright coloured fish\"] = 17] = \"A bright coloured fish\";\n  AttachedPictureType[AttachedPictureType[\"Illustration\"] = 18] = \"Illustration\";\n  AttachedPictureType[AttachedPictureType[\"Band/artist logotype\"] = 19] = \"Band/artist logotype\";\n  AttachedPictureType[AttachedPictureType[\"Publisher/Studio logotype\"] = 20] = \"Publisher/Studio logotype\";\n})(AttachedPictureType = exports.AttachedPictureType || (exports.AttachedPictureType = {}));\n/**\r\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\r\n * 4 * %0xxxxxxx\r\n */\n\n\nexports.UINT32SYNCSAFE = {\n  get: (buf, off) => {\n    return buf[off + 3] & 0x7f | buf[off + 2] << 7 | buf[off + 1] << 14 | buf[off] << 21;\n  },\n  len: 4\n};\n/**\r\n * ID3v2 header\r\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\r\n * ToDo\r\n */\n\nexports.ID3v2Header = {\n  len: 10,\n  get: (buf, off) => {\n    return {\n      // ID3v2/file identifier   \"ID3\"\n      fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\n      // ID3v2 versionIndex\n      version: {\n        major: Token.INT8.get(buf, off + 3),\n        revision: Token.INT8.get(buf, off + 4)\n      },\n      // ID3v2 flags\n      flags: {\n        // Unsynchronisation\n        unsynchronisation: Util_1.default.strtokBITSET.get(buf, off + 5, 7),\n        // Extended header\n        isExtendedHeader: Util_1.default.strtokBITSET.get(buf, off + 5, 6),\n        // Experimental indicator\n        expIndicator: Util_1.default.strtokBITSET.get(buf, off + 5, 5),\n        footer: Util_1.default.strtokBITSET.get(buf, off + 5, 4)\n      },\n      size: exports.UINT32SYNCSAFE.get(buf, off + 6)\n    };\n  }\n};\nexports.ExtendedHeader = {\n  len: 10,\n  get: (buf, off) => {\n    return {\n      // Extended header size\n      size: Token.UINT32_BE.get(buf, off),\n      // Extended Flags\n      extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n      // Size of padding\n      sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n      // CRC data present\n      crcDataPresent: Util_1.default.strtokBITSET.get(buf, off + 4, 31)\n    };\n  }\n};\nexports.TextEncodingToken = {\n  len: 1,\n  get: (buf, off) => {\n    switch (buf.readUInt8(off)) {\n      case 0x00:\n        return {\n          encoding: 'iso-8859-1'\n        };\n      // binary\n\n      case 0x01:\n        return {\n          encoding: 'utf16',\n          bom: true\n        };\n\n      case 0x02:\n        return {\n          encoding: 'utf16',\n          bom: false\n        };\n\n      case 0x03:\n        return {\n          encoding: 'utf8',\n          bom: false\n        };\n\n      default:\n        return {\n          encoding: 'utf8',\n          bom: false\n        };\n    }\n  }\n};","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/id3v2/ID3v2Token.js"],"names":["Object","defineProperty","exports","value","TextEncodingToken","ExtendedHeader","ID3v2Header","UINT32SYNCSAFE","AttachedPictureType","Token","require","Util_1","get","buf","off","len","fileIdentifier","StringType","version","major","INT8","revision","flags","unsynchronisation","default","strtokBITSET","isExtendedHeader","expIndicator","footer","size","UINT32_BE","extendedFlags","UINT16_BE","sizeOfPadding","crcDataPresent","readUInt8","encoding","bom"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TextEncodingToken = exports.ExtendedHeader = exports.ID3v2Header = exports.UINT32SYNCSAFE = exports.AttachedPictureType = void 0;\r\nconst Token = require(\"token-types\");\r\nconst Util_1 = require(\"../common/Util\");\r\n/**\r\n * The picture type according to the ID3v2 APIC frame\r\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\r\n */\r\nvar AttachedPictureType;\r\n(function (AttachedPictureType) {\r\n    AttachedPictureType[AttachedPictureType[\"Other\"] = 0] = \"Other\";\r\n    AttachedPictureType[AttachedPictureType[\"32x32 pixels 'file icon' (PNG only)\"] = 1] = \"32x32 pixels 'file icon' (PNG only)\";\r\n    AttachedPictureType[AttachedPictureType[\"Other file icon\"] = 2] = \"Other file icon\";\r\n    AttachedPictureType[AttachedPictureType[\"Cover (front)\"] = 3] = \"Cover (front)\";\r\n    AttachedPictureType[AttachedPictureType[\"Cover (back)\"] = 4] = \"Cover (back)\";\r\n    AttachedPictureType[AttachedPictureType[\"Leaflet page\"] = 5] = \"Leaflet page\";\r\n    AttachedPictureType[AttachedPictureType[\"Media (e.g. label side of CD)\"] = 6] = \"Media (e.g. label side of CD)\";\r\n    AttachedPictureType[AttachedPictureType[\"Lead artist/lead performer/soloist\"] = 7] = \"Lead artist/lead performer/soloist\";\r\n    AttachedPictureType[AttachedPictureType[\"Artist/performer\"] = 8] = \"Artist/performer\";\r\n    AttachedPictureType[AttachedPictureType[\"Conductor\"] = 9] = \"Conductor\";\r\n    AttachedPictureType[AttachedPictureType[\"Band/Orchestra\"] = 10] = \"Band/Orchestra\";\r\n    AttachedPictureType[AttachedPictureType[\"Composer\"] = 11] = \"Composer\";\r\n    AttachedPictureType[AttachedPictureType[\"Lyricist/text writer\"] = 12] = \"Lyricist/text writer\";\r\n    AttachedPictureType[AttachedPictureType[\"Recording Location\"] = 13] = \"Recording Location\";\r\n    AttachedPictureType[AttachedPictureType[\"During recording\"] = 14] = \"During recording\";\r\n    AttachedPictureType[AttachedPictureType[\"During performance\"] = 15] = \"During performance\";\r\n    AttachedPictureType[AttachedPictureType[\"Movie/video screen capture\"] = 16] = \"Movie/video screen capture\";\r\n    AttachedPictureType[AttachedPictureType[\"A bright coloured fish\"] = 17] = \"A bright coloured fish\";\r\n    AttachedPictureType[AttachedPictureType[\"Illustration\"] = 18] = \"Illustration\";\r\n    AttachedPictureType[AttachedPictureType[\"Band/artist logotype\"] = 19] = \"Band/artist logotype\";\r\n    AttachedPictureType[AttachedPictureType[\"Publisher/Studio logotype\"] = 20] = \"Publisher/Studio logotype\";\r\n})(AttachedPictureType = exports.AttachedPictureType || (exports.AttachedPictureType = {}));\r\n/**\r\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\r\n * 4 * %0xxxxxxx\r\n */\r\nexports.UINT32SYNCSAFE = {\r\n    get: (buf, off) => {\r\n        return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\r\n            ((buf[off + 1]) << 14) | ((buf[off]) << 21);\r\n    },\r\n    len: 4\r\n};\r\n/**\r\n * ID3v2 header\r\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\r\n * ToDo\r\n */\r\nexports.ID3v2Header = {\r\n    len: 10,\r\n    get: (buf, off) => {\r\n        return {\r\n            // ID3v2/file identifier   \"ID3\"\r\n            fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\r\n            // ID3v2 versionIndex\r\n            version: {\r\n                major: Token.INT8.get(buf, off + 3),\r\n                revision: Token.INT8.get(buf, off + 4)\r\n            },\r\n            // ID3v2 flags\r\n            flags: {\r\n                // Unsynchronisation\r\n                unsynchronisation: Util_1.default.strtokBITSET.get(buf, off + 5, 7),\r\n                // Extended header\r\n                isExtendedHeader: Util_1.default.strtokBITSET.get(buf, off + 5, 6),\r\n                // Experimental indicator\r\n                expIndicator: Util_1.default.strtokBITSET.get(buf, off + 5, 5),\r\n                footer: Util_1.default.strtokBITSET.get(buf, off + 5, 4)\r\n            },\r\n            size: exports.UINT32SYNCSAFE.get(buf, off + 6)\r\n        };\r\n    }\r\n};\r\nexports.ExtendedHeader = {\r\n    len: 10,\r\n    get: (buf, off) => {\r\n        return {\r\n            // Extended header size\r\n            size: Token.UINT32_BE.get(buf, off),\r\n            // Extended Flags\r\n            extendedFlags: Token.UINT16_BE.get(buf, off + 4),\r\n            // Size of padding\r\n            sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\r\n            // CRC data present\r\n            crcDataPresent: Util_1.default.strtokBITSET.get(buf, off + 4, 31)\r\n        };\r\n    }\r\n};\r\nexports.TextEncodingToken = {\r\n    len: 1,\r\n    get: (buf, off) => {\r\n        switch (buf.readUInt8(off)) {\r\n            case 0x00:\r\n                return { encoding: 'iso-8859-1' }; // binary\r\n            case 0x01:\r\n                return { encoding: 'utf16', bom: true };\r\n            case 0x02:\r\n                return { encoding: 'utf16', bom: false };\r\n            case 0x03:\r\n                return { encoding: 'utf8', bom: false };\r\n            default:\r\n                return { encoding: 'utf8', bom: false };\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}