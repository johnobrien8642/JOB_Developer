{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atom = void 0;\n\nvar initDebug = require(\"debug\");\n\nvar AtomToken = require(\"./AtomToken\");\n\nvar debug = initDebug('music-metadata:parser:MP4:Atom');\n\nvar Atom = /*#__PURE__*/function () {\n  function Atom(header, extended, parent) {\n    _classCallCheck(this, Atom);\n\n    this.header = header;\n    this.extended = extended;\n    this.parent = parent;\n    this.children = [];\n    this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\n  }\n\n  _createClass(Atom, [{\n    key: \"getHeaderLength\",\n    value: function getHeaderLength() {\n      return this.extended ? 16 : 8;\n    }\n  }, {\n    key: \"getPayloadLength\",\n    value: function getPayloadLength(remaining) {\n      return (this.header.length === 0 ? remaining : this.header.length) - this.getHeaderLength();\n    }\n  }, {\n    key: \"readAtoms\",\n    value: function () {\n      var _readAtoms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenizer, dataHandler, size) {\n        var atomBean;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(size > 0)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 3;\n                return Atom.readAtom(tokenizer, dataHandler, this, size);\n\n              case 3:\n                atomBean = _context.sent;\n                this.children.push(atomBean);\n                size -= atomBean.header.length === 0 ? size : atomBean.header.length;\n                _context.next = 0;\n                break;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function readAtoms(_x, _x2, _x3) {\n        return _readAtoms.apply(this, arguments);\n      }\n\n      return readAtoms;\n    }()\n  }, {\n    key: \"readData\",\n    value: function () {\n      var _readData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenizer, dataHandler, remaining) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = this.header.name;\n                _context2.next = _context2.t0 === 'moov' ? 3 : _context2.t0 === 'udta' ? 3 : _context2.t0 === 'trak' ? 3 : _context2.t0 === 'mdia' ? 3 : _context2.t0 === 'minf' ? 3 : _context2.t0 === 'stbl' ? 3 : _context2.t0 === '<id>' ? 3 : _context2.t0 === 'ilst' ? 3 : _context2.t0 === 'tref' ? 3 : _context2.t0 === 'meta' ? 4 : _context2.t0 === 'mdhd' ? 7 : _context2.t0 === 'mvhd' ? 7 : _context2.t0 === 'tkhd' ? 7 : _context2.t0 === 'stsz' ? 7 : _context2.t0 === 'mdat' ? 7 : 7;\n                break;\n\n              case 3:\n                return _context2.abrupt(\"return\", this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining)));\n\n              case 4:\n                _context2.next = 6;\n                return tokenizer.ignore(4);\n\n              case 6:\n                return _context2.abrupt(\"return\", this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - 4));\n\n              case 7:\n                return _context2.abrupt(\"return\", dataHandler(this, remaining));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function readData(_x4, _x5, _x6) {\n        return _readData.apply(this, arguments);\n      }\n\n      return readData;\n    }()\n  }], [{\n    key: \"readAtom\",\n    value: function () {\n      var _readAtom = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tokenizer, dataHandler, parent, remaining) {\n        var offset, header, extended, atomBean, payloadLength;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // Parse atom header\n                offset = tokenizer.position; // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\n\n                _context3.next = 3;\n                return tokenizer.readToken(AtomToken.Header);\n\n              case 3:\n                header = _context3.sent;\n                extended = header.length === 1;\n\n                if (!extended) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 8;\n                return tokenizer.readToken(AtomToken.ExtendedSize);\n\n              case 8:\n                header.length = _context3.sent;\n\n              case 9:\n                atomBean = new Atom(header, header.length === 1, parent);\n                payloadLength = atomBean.getPayloadLength(remaining);\n                debug(\"parse atom name=\".concat(atomBean.atomPath, \", extended=\").concat(atomBean.extended, \", offset=\").concat(offset, \", len=\").concat(atomBean.header.length)); //  buf.toString('ascii')\n\n                _context3.next = 14;\n                return atomBean.readData(tokenizer, dataHandler, payloadLength);\n\n              case 14:\n                return _context3.abrupt(\"return\", atomBean);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function readAtom(_x7, _x8, _x9, _x10) {\n        return _readAtom.apply(this, arguments);\n      }\n\n      return readAtom;\n    }()\n  }]);\n\n  return Atom;\n}();\n\nexports.Atom = Atom;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/mp4/Atom.js"],"names":["Object","defineProperty","exports","value","Atom","initDebug","require","AtomToken","debug","header","extended","parent","children","atomPath","name","remaining","length","getHeaderLength","tokenizer","dataHandler","size","readAtom","atomBean","push","readAtoms","getPayloadLength","ignore","offset","position","readToken","Header","ExtendedSize","payloadLength","readData"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Atom = void 0;\r\nconst initDebug = require(\"debug\");\r\nconst AtomToken = require(\"./AtomToken\");\r\nconst debug = initDebug('music-metadata:parser:MP4:Atom');\r\nclass Atom {\r\n    constructor(header, extended, parent) {\r\n        this.header = header;\r\n        this.extended = extended;\r\n        this.parent = parent;\r\n        this.children = [];\r\n        this.atomPath = (this.parent ? this.parent.atomPath + '.' : '') + this.header.name;\r\n    }\r\n    static async readAtom(tokenizer, dataHandler, parent, remaining) {\r\n        // Parse atom header\r\n        const offset = tokenizer.position;\r\n        // debug(`Reading next token on offset=${offset}...`); //  buf.toString('ascii')\r\n        const header = await tokenizer.readToken(AtomToken.Header);\r\n        const extended = header.length === 1;\r\n        if (extended) {\r\n            header.length = await tokenizer.readToken(AtomToken.ExtendedSize);\r\n        }\r\n        const atomBean = new Atom(header, header.length === 1, parent);\r\n        const payloadLength = atomBean.getPayloadLength(remaining);\r\n        debug(`parse atom name=${atomBean.atomPath}, extended=${atomBean.extended}, offset=${offset}, len=${atomBean.header.length}`); //  buf.toString('ascii')\r\n        await atomBean.readData(tokenizer, dataHandler, payloadLength);\r\n        return atomBean;\r\n    }\r\n    getHeaderLength() {\r\n        return this.extended ? 16 : 8;\r\n    }\r\n    getPayloadLength(remaining) {\r\n        return (this.header.length === 0 ? remaining : this.header.length) - this.getHeaderLength();\r\n    }\r\n    async readAtoms(tokenizer, dataHandler, size) {\r\n        while (size > 0) {\r\n            const atomBean = await Atom.readAtom(tokenizer, dataHandler, this, size);\r\n            this.children.push(atomBean);\r\n            size -= atomBean.header.length === 0 ? size : atomBean.header.length;\r\n        }\r\n    }\r\n    async readData(tokenizer, dataHandler, remaining) {\r\n        switch (this.header.name) {\r\n            // \"Container\" atoms, contains nested atoms\r\n            case 'moov': // The Movie Atom: contains other atoms\r\n            case 'udta': // User defined atom\r\n            case 'trak':\r\n            case 'mdia': // Media atom\r\n            case 'minf': // Media Information Atom\r\n            case 'stbl': // The Sample Table Atom\r\n            case '<id>':\r\n            case 'ilst':\r\n            case 'tref':\r\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining));\r\n            case 'meta': // Metadata Atom, ref: https://developer.apple.com/library/content/documentation/QuickTime/QTFF/Metadata/Metadata.html#//apple_ref/doc/uid/TP40000939-CH1-SW8\r\n                // meta has 4 bytes of padding, ignore\r\n                await tokenizer.ignore(4);\r\n                return this.readAtoms(tokenizer, dataHandler, this.getPayloadLength(remaining) - 4);\r\n            case 'mdhd': // Media header atom\r\n            case 'mvhd': // 'movie' => 'mvhd': movie header atom; child of Movie Atom\r\n            case 'tkhd':\r\n            case 'stsz':\r\n            case 'mdat':\r\n            default:\r\n                return dataHandler(this, remaining);\r\n        }\r\n    }\r\n}\r\nexports.Atom = Atom;\r\n"]},"metadata":{},"sourceType":"script"}