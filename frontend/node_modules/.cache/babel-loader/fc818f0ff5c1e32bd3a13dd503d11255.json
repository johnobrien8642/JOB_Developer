{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/auth/Logout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Mutations from '../../graphql/mutations';\nimport Queries from '../../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  LOGOUT_USER\n} = Mutations;\nconst {\n  IS_LOGGED_IN\n} = Queries;\n\nconst Logout = ({\n  listener\n}) => {\n  _s();\n\n  let history = useHistory();\n  const [Logout] = useMutation(LOGOUT_USER, {\n    update(client, {\n      data\n    }) {\n      client.writeQuery({\n        query: IS_LOGGED_IN,\n        data: {\n          isLoggedIn: data.logoutUser.loggedIn\n        }\n      });\n    },\n\n    onCompleted() {\n      document.removeEventListener('click', listener, true);\n      Cookies.set('auth-token', '');\n      Cookies.set('currentUser', '');\n      history.push('/');\n    },\n\n    onError(error) {\n      console.log(error);\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout\",\n      type: \"button\",\n      onClick: e => {\n        Logout({\n          variables: {\n            token: Cookies.get('auth-token')\n          }\n        });\n      },\n      children: \"Log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logout, \"O+fKFZjBJ6Qb0RkJ+Sh7dhKK30I=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/auth/Logout.js"],"names":["React","useMutation","useHistory","Cookies","Mutations","Queries","LOGOUT_USER","IS_LOGGED_IN","Logout","listener","history","update","client","data","writeQuery","query","isLoggedIn","logoutUser","loggedIn","onCompleted","document","removeEventListener","set","push","onError","error","console","log","e","variables","token","get"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBF,SAAxB;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAmBF,OAAzB;;AAEA,MAAMG,MAAM,GAAG,CAAC;AACdC,EAAAA;AADc,CAAD,KAET;AAAA;;AACJ,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AAEA,QAAM,CAAEM,MAAF,IAAaP,WAAW,CAACK,WAAD,EAAc;AAC1CK,IAAAA,MAAM,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,EAAmB;AACvBD,MAAAA,MAAM,CAACE,UAAP,CAAkB;AAChBC,QAAAA,KAAK,EAAER,YADS;AAEhBM,QAAAA,IAAI,EAAE;AACJG,UAAAA,UAAU,EAAEH,IAAI,CAACI,UAAL,CAAgBC;AADxB;AAFU,OAAlB;AAMD,KARyC;;AAS1CC,IAAAA,WAAW,GAAG;AACZC,MAAAA,QAAQ,CAACC,mBAAT,CAA6B,OAA7B,EAAsCZ,QAAtC,EAAgD,IAAhD;AACAN,MAAAA,OAAO,CAACmB,GAAR,CAAY,YAAZ,EAA0B,EAA1B;AACAnB,MAAAA,OAAO,CAACmB,GAAR,CAAY,aAAZ,EAA2B,EAA3B;AACAZ,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,KAdyC;;AAe1CC,IAAAA,OAAO,CAACC,KAAD,EAAQ;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAjByC,GAAd,CAA9B;AAoBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAEG,CAAC,IAAI;AACZpB,QAAAA,MAAM,CAAC;AACLqB,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAE3B,OAAO,CAAC4B,GAAR,CAAY,YAAZ;AADE;AADN,SAAD,CAAN;AAKD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1CD;;GAAMvB,M;UAGUN,U,EAEKD,W;;;KALfO,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport Mutations from '../../graphql/mutations';\nimport Queries from '../../graphql/queries';\nconst { LOGOUT_USER } = Mutations;\nconst { IS_LOGGED_IN } = Queries;\n\nconst Logout = ({\n  listener\n}) => {\n  let history = useHistory();\n\n  const [ Logout ] = useMutation(LOGOUT_USER, {\n    update(client, { data }) {\n      client.writeQuery({\n        query: IS_LOGGED_IN,\n        data: {\n          isLoggedIn: data.logoutUser.loggedIn,\n        }\n      })\n    },\n    onCompleted() {\n      document.removeEventListener('click', listener, true)\n      Cookies.set('auth-token', '')\n      Cookies.set('currentUser', '')\n      history.push('/')\n    },\n    onError(error) {\n      console.log(error)\n    }\n  })\n\n  return (\n    <React.Fragment>\n      <button\n        className='logout'\n        type='button'\n        onClick={e => {\n          Logout({ \n            variables: { \n              token: Cookies.get('auth-token')\n            }\n          })\n        }}\n      >\n        Log out\n      </button>\n    </React.Fragment>\n  )\n}\n\nexport default Logout;"]},"metadata":{},"sourceType":"module"}