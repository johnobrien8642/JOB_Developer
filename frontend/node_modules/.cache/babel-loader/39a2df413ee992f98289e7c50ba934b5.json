{"ast":null,"code":"import React from'react';import{useQuery}from'@apollo/client';import Queries from'../../../../../graphql/queries.js';import PostFormUtil from'../../functions/post_form_util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FETCH_MATCHING_TAGS=Queries.FETCH_MATCHING_TAGS;var handleFoundTag=PostFormUtil.handleFoundTag;var MatchedTagResults=function MatchedTagResults(_ref){var query=_ref.query,tags=_ref.tags,setTags=_ref.setTags,tag=_ref.tag,setTag=_ref.setTag;var _useQuery=useQuery(FETCH_MATCHING_TAGS,{variables:{filter:query}}),error=_useQuery.error,data=_useQuery.data;if(error)return\"Error: \".concat(error);var handleMatchedTagClassName=function handleMatchedTagClassName(data){if(data.fetchMatchingTags.length>0){return'matchingTagsDD active';}else{return'matchingTagsDD';}};if(data){return/*#__PURE__*/_jsxs(\"ul\",{className:handleMatchedTagClassName(data),children:[/*#__PURE__*/_jsx(\"li\",{children:\"POPULAR\"}),data.fetchMatchingTags.map(function(tag,i){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(e){handleFoundTag(tag.title,setTags,tags,setTag,tag);},children:tag.title.slice(1,tag.title.length)},i);})]});}else{return/*#__PURE__*/_jsx(\"ul\",{className:\"noMatchingTags\"});}};export default MatchedTagResults;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/Matched_Tag_Results.js"],"names":["React","useQuery","Queries","PostFormUtil","FETCH_MATCHING_TAGS","handleFoundTag","MatchedTagResults","query","tags","setTags","tag","setTag","variables","filter","error","data","handleMatchedTagClassName","fetchMatchingTags","length","map","i","e","title","slice"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mCAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,mCAAzB,C,wFACA,GAAQC,CAAAA,mBAAR,CAAgCF,OAAhC,CAAQE,mBAAR,CACA,GAAQC,CAAAA,cAAR,CAA2BF,YAA3B,CAAQE,cAAR,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAMlB,IALJC,CAAAA,KAKI,MALJA,KAKI,CAJJC,IAII,MAJJA,IAII,CAHJC,OAGI,MAHJA,OAGI,CAFJC,GAEI,MAFJA,GAEI,CADJC,MACI,MADJA,MACI,CAEJ,cAAsBV,QAAQ,CAACG,mBAAD,CAAsB,CAClDQ,SAAS,CAAE,CACTC,MAAM,CAAEN,KADC,CADuC,CAAtB,CAA9B,CAAMO,KAAN,WAAMA,KAAN,CAAaC,IAAb,WAAaA,IAAb,CAMA,GAAID,KAAJ,CAAW,uBAAiBA,KAAjB,EAEX,GAAME,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACD,IAAD,CAAU,CAC1C,GAAIA,IAAI,CAACE,iBAAL,CAAuBC,MAAvB,CAAgC,CAApC,CAAuC,CACrC,MAAO,uBAAP,CACD,CAFD,IAEO,CACL,MAAO,gBAAP,CACD,CACF,CAND,CAQA,GAAIH,IAAJ,CAAU,CACR,mBACE,YACE,SAAS,CAAEC,yBAAyB,CAACD,IAAD,CADtC,wBAGE,+BAHF,CAIGA,IAAI,CAACE,iBAAL,CAAuBE,GAAvB,CAA2B,SAACT,GAAD,CAAMU,CAAN,CAAY,CACtC,mBACE,WAEE,OAAO,CAAE,iBAAAC,CAAC,CAAI,CACZhB,cAAc,CACZK,GAAG,CAACY,KADQ,CAEZb,OAFY,CAEHD,IAFG,CAGZG,MAHY,CAGJD,GAHI,CAAd,CAKD,CARH,UAUGA,GAAG,CAACY,KAAJ,CAAUC,KAAV,CAAgB,CAAhB,CAAmBb,GAAG,CAACY,KAAJ,CAAUJ,MAA7B,CAVH,EACOE,CADP,CADF,CAcD,CAfA,CAJH,GADF,CAuBD,CAxBD,IAwBO,CACL,mBACE,WACE,SAAS,CAAC,gBADZ,EADF,CAMD,CAEJ,CAzDD,CA2DA,cAAed,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport Queries from '../../../../../graphql/queries.js';\nimport PostFormUtil from '../../functions/post_form_util.js';\nconst { FETCH_MATCHING_TAGS } = Queries;\nconst { handleFoundTag } = PostFormUtil;\n\nconst MatchedTagResults = ({\n    query,\n    tags,\n    setTags, \n    tag,\n    setTag, \n  }) => {\n    \n    let { error, data } = useQuery(FETCH_MATCHING_TAGS, {\n      variables: {\n        filter: query\n      }\n    })\n\n    if (error) return `Error: ${error}`;\n\n    const handleMatchedTagClassName = (data) => {\n      if (data.fetchMatchingTags.length > 0) {\n        return 'matchingTagsDD active'\n      } else {\n        return 'matchingTagsDD'\n      }\n    }\n\n    if (data) {\n      return (\n        <ul\n          className={handleMatchedTagClassName(data)}\n        >\n          <li>POPULAR</li>\n          {data.fetchMatchingTags.map((tag, i) => {\n            return (\n              <li \n                key={i}\n                onClick={e => {\n                  handleFoundTag(\n                    tag.title,\n                    setTags, tags,\n                    setTag, tag\n                  )\n                }}\n              >\n                {tag.title.slice(1, tag.title.length)}\n              </li>\n            )\n          })}\n        </ul>\n      )\n    } else {\n      return (\n        <ul\n          className='noMatchingTags'\n        >\n        </ul>\n      )\n    }\n\n}\n\nexport default MatchedTagResults;"]},"metadata":{},"sourceType":"module"}