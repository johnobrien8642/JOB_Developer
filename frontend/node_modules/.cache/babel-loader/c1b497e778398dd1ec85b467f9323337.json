{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{useQuery,useApolloClient}from'@apollo/client';import Cookies from'js-cookie';import FeedUtil from'../posts/util/functions/feed_util.js';import ActivityUtil from'../nav/util/activity_util.js';import Queries from'../../graphql/queries.js';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var FETCH_ALL_ACTIVITY=Queries.FETCH_ALL_ACTIVITY;var handleActivity=ActivityUtil.handleActivity,handleTimeAgo=ActivityUtil.handleTimeAgo;var infiniteScroll=FeedUtil.infiniteScroll,updateCacheInfScrollActivity=FeedUtil.updateCacheInfScrollActivity,handleData=FeedUtil.handleData;var Content=function Content(_ref){var tab=_ref.tab,active=_ref.active,setActive=_ref.setActive,navActive=_ref.navActive,setNavActive=_ref.setNavActive,timeAgoRef=_ref.timeAgoRef;var feedArr=useRef([]);var fetchMoreDiv=useRef(null);var cursorId=useRef(null);var fetchMoreDivId=useRef('#fetchMoreActivity');var gqlQuery=useRef(FETCH_ALL_ACTIVITY);var query=useRef(Cookies.get('currentUser'));var endOfPosts=useRef(false);var client=useApolloClient();useEffect(function(){timeAgoRef.current=[];document.querySelector('.activity').focus();var scroll=infiniteScroll(client,updateCacheInfScrollActivity,query,gqlQuery,cursorId,fetchMoreDiv,fetchMoreDivId);return function(){document.removeEventListener('scroll',scroll);refetch();};//eslint-disable-next-line\n},[tab,active]);var _useQuery=useQuery(gqlQuery.current,{variables:{query:Cookies.get('currentUser'),cursorId:null},fetchPolicy:'no-cache'}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;if(loading)return'Loading Content...';if(error)return\"Error: \".concat(error);handleData(data,feedArr,cursorId,endOfPosts);return/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[feedArr.current.map(function(activity,i){return/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){setNavActive(navActive=false);},children:[handleTimeAgo(activity,timeAgoRef,tab),handleActivity(activity,tab,true,navActive,setNavActive)]},activity._id);}),/*#__PURE__*/_jsx(\"div\",{id:\"fetchMoreActivity\"})]});};export default Content;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Content.js"],"names":["React","useRef","useEffect","useQuery","useApolloClient","Cookies","FeedUtil","ActivityUtil","Queries","FETCH_ALL_ACTIVITY","handleActivity","handleTimeAgo","infiniteScroll","updateCacheInfScrollActivity","handleData","Content","tab","active","setActive","navActive","setNavActive","timeAgoRef","feedArr","fetchMoreDiv","cursorId","fetchMoreDivId","gqlQuery","query","get","endOfPosts","client","current","document","querySelector","focus","scroll","removeEventListener","refetch","variables","fetchPolicy","loading","error","data","map","activity","i","_id"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useQuery, useApolloClient } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport FeedUtil from '../posts/util/functions/feed_util.js';\nimport ActivityUtil from '../nav/util/activity_util.js';\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_ALL_ACTIVITY } = Queries;\nconst { handleActivity, handleTimeAgo } = ActivityUtil;\nconst { infiniteScroll, \n        updateCacheInfScrollActivity, \n        handleData } = FeedUtil;\n\nconst Content = ({\n  tab, \n  active, \n  setActive,\n  navActive, \n  setNavActive,\n  timeAgoRef\n}) => {\n  let feedArr = useRef([]);\n  let fetchMoreDiv = useRef(null);\n  let cursorId = useRef(null);\n  let fetchMoreDivId = useRef('#fetchMoreActivity');\n  let gqlQuery = useRef(FETCH_ALL_ACTIVITY)\n  let query = useRef(Cookies.get('currentUser'));\n  let endOfPosts = useRef(false);\n  const client = useApolloClient();\n\n  useEffect(() => {\n    timeAgoRef.current = []\n\n    document.querySelector('.activity').focus()\n    \n    var scroll = infiniteScroll(\n      client, updateCacheInfScrollActivity,\n      query, gqlQuery,\n      cursorId, fetchMoreDiv,\n      fetchMoreDivId\n    )\n\n    return () => {\n      document.removeEventListener('scroll', scroll)\n      refetch()\n    }\n    //eslint-disable-next-line\n  }, [tab, active])\n  \n  let { loading, error, data, refetch } = useQuery(gqlQuery.current, {\n    variables: {\n      query: Cookies.get('currentUser'),\n      cursorId: null\n    },\n    fetchPolicy: 'no-cache'\n  })\n\n  if (loading) return 'Loading Content...';\n  if (error) return `Error: ${error}`;\n  \n  handleData(data, feedArr, cursorId, endOfPosts)\n\n  return(\n    <div\n      className='content'\n    >\n      {feedArr.current.map((activity, i) => {\n        return (\n          <div\n            key={activity._id}\n            onClick={() => {\n              setNavActive(navActive = false)\n            }}\n          >\n            {handleTimeAgo(activity, timeAgoRef, tab)}\n            {handleActivity(activity, tab, true, navActive, setNavActive)}\n          </div>\n        )\n      })}\n\n      <div\n        id='fetchMoreActivity'\n      >\n      </div>\n    </div>\n  )\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}