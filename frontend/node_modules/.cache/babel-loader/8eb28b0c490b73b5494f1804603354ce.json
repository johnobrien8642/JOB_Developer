{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/types/create/AudioPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport randomstring from 'randomstring';\nimport AudioFileInput from '../../util/components/forms/inputTypes/Audio_File_Input';\nimport BodyImageAndText from '../../util/components/forms/Body_Image_And_Text';\nimport Tags from '../../util/components/forms/Tags';\nimport ProfilePic from '../../../user/util/components/Profile_Pic';\nimport ConfirmClose from '../../../nav/Confirm_Close';\nimport Queries from '../../../../graphql/queries.js';\nimport Mutations from '../../../../graphql/mutations.js';\nimport UpdateCacheUtil from '../../util/functions/update_cache_util.js';\nimport PostFormUtil from '../../util/functions/post_form_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  postCreate,\n  postUpdate\n} = UpdateCacheUtil;\nconst {\n  bodyPost,\n  handleFormData,\n  stripAllImgs,\n  audioPost,\n  handleUploadedFiles,\n  resetDisplayIdx,\n  handleMentions,\n  discardMentions,\n  handleAllTextAudioPost,\n  allowScroll,\n  preventScroll,\n  handleTagInput\n} = PostFormUtil;\nconst {\n  CREATE_OR_UPDATE_POST\n} = Mutations;\nconst {\n  FETCH_USER_FEED\n} = Queries;\n\nconst AudioPostForm = ({\n  mobile,\n  user,\n  post,\n  update,\n  setUpdate,\n  audioPostActive,\n  setAudioPostActive,\n  postFormModal,\n  setPostFormModal,\n  postFormOpen,\n  setPostFormOpen,\n  uploading,\n  setUploading\n}) => {\n  _s();\n\n  let [audioFile, setAudioFile] = useState('');\n  let [title, setTitle] = useState('');\n  let [artist, setArtist] = useState('');\n  let [album, setAlbum] = useState('');\n  let [src, setSrc] = useState('');\n  let [active, setActive] = useState(false);\n  let objsToClean = useRef([]);\n  let body = useRef([]);\n  let allText = useRef([]);\n  let [description, setDescription] = useState('');\n  let [bodyImageFiles, setBodyImageFiles] = useState([]);\n  let [tag, setTag] = useState('');\n  let [tags, setTags] = useState([]);\n  let [errMessage, setErrMessage] = useState('');\n  let [render, setRender] = useState(0);\n  let [confirmClose, setConfirmClose] = useState(false);\n  let [displayBodyImageAndTextInput, setDisplayBodyImageAndTextInput] = useState(false);\n  let history = useHistory();\n  const formId = 'audioPostForm';\n  const formInputId = 'audioPostInput';\n  useEffect(() => {\n    preventScroll(audioPostActive, document);\n  }, [audioPostActive]);\n  useEffect(() => {\n    resetDisplayIdx(body);\n  });\n  let [createOrUpdatePost] = useMutation(CREATE_OR_UPDATE_POST, {\n    update(client, {\n      data\n    }) {\n      const {\n        createOrUpdatePost\n      } = data;\n      var currentUser = Cookies.get('currentUser');\n      var query = FETCH_USER_FEED;\n\n      if (post) {\n        postUpdate(client, createOrUpdatePost, currentUser, query);\n      } else {\n        postCreate(client, createOrUpdatePost, currentUser, query);\n      }\n    },\n\n    onCompleted() {\n      resetInputs();\n\n      if (post) {\n        setUpdate(update = false);\n        setUploading(uploading = false);\n      } else {\n        resetInputs();\n        allowScroll(document);\n        setAudioPostActive(audioPostActive = false);\n\n        if (mobile) {\n          setPostFormOpen(postFormOpen = false);\n          history.push('/dashboard');\n        }\n\n        setUploading(uploading = false);\n      }\n    },\n\n    onError(error) {\n      console.log(error);\n    }\n\n  });\n\n  const resetInputs = () => {\n    setTitle(title = '');\n    setArtist(artist = '');\n    setAlbum(album = '');\n    setSrc(src = '');\n    setAudioFile(audioFile = '');\n    setBodyImageFiles(bodyImageFiles = []);\n    body.current = [];\n    allText.current = '';\n    setDescription(description = '');\n    setTag(tag = '');\n    setTags(tags = []);\n    setErrMessage(errMessage = '');\n    setActive(active = false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (audioFile) {\n      var audioFileFormData = new FormData();\n      audioFileFormData.append('audio', audioFile);\n    }\n\n    var bodyImagesFormData = handleFormData(bodyImageFiles);\n    Promise.all([bodyPost(bodyImagesFormData), audioPost(audioFileFormData)]).then(([bodyUploads, audio]) => {\n      var mentions = handleMentions(body, stripAllImgs);\n      discardMentions(post, mentions, objsToClean);\n      var descriptions = stripAllImgs(body);\n      handleAllTextAudioPost(allText, descriptions, title, artist, album);\n      var instanceData = {\n        variants: {\n          audioFileId: audio[0] ? audio[0]._id : post.audioFile._id,\n          audioMeta: {\n            title,\n            artist,\n            album\n          }\n        },\n        allText: allText.current,\n        descriptions: descriptions,\n        descriptionImages: handleUploadedFiles(body, bodyUploads),\n        mentions: mentions,\n        user: Cookies.get('currentUser'),\n        tags,\n        kind: 'AudioPost',\n        objsToClean: objsToClean.current,\n        postId: post ? post._id : null\n      };\n      createOrUpdatePost({\n        variables: {\n          instanceData: instanceData\n        }\n      });\n    });\n  };\n\n  const disabledBool = () => {\n    return !audioFile;\n  };\n\n  const handleAudioPostFormClass = () => {\n    if (audioPostActive && !uploading || update) {\n      return 'postForm audioPostForm active';\n    } else if (audioPostActive && uploading) {\n      return 'postForm audioPostForm hidden';\n    } else {\n      return 'postForm audioPostForm none';\n    }\n  };\n\n  if (audioPostActive || update) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: update ? 'postFormContainer update' : 'postFormContainer',\n      children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n        user: update ? post.user : user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: handleAudioPostFormClass(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"userNameHeader\",\n          children: update ? post.user.blogName : user.blogName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: formId,\n          onSubmit: e => handleSubmit(e),\n          onKeyPress: e => {\n            e.key === 'Enter' && e.preventDefault();\n          },\n          encType: 'multipart/form-data',\n          children: [/*#__PURE__*/_jsxDEV(AudioFileInput, {\n            post: post,\n            update: update,\n            displayBodyImageAndTextInput: displayBodyImageAndTextInput,\n            setDisplayBodyImageAndTextInput: setDisplayBodyImageAndTextInput,\n            formId: formId,\n            objsToClean: objsToClean,\n            audioFile: audioFile,\n            setAudioFile: setAudioFile,\n            title: title,\n            setTitle: setTitle,\n            artist: artist,\n            setArtist: setArtist,\n            album: album,\n            setAlbum: setAlbum,\n            src: src,\n            setSrc: setSrc,\n            active: active,\n            setActive: setActive,\n            render: render,\n            setRender: setRender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(BodyImageAndText, {\n            displayBodyImageAndTextInput: displayBodyImageAndTextInput,\n            post: post,\n            update: update,\n            formId: formId,\n            formInputId: formInputId,\n            objsToClean: objsToClean,\n            body: body,\n            bodyImageFiles: bodyImageFiles,\n            setBodyImageFiles: setBodyImageFiles,\n            description: description,\n            setDescription: setDescription,\n            render: render,\n            setRender: setRender,\n            errMessage: errMessage,\n            setErrMessage: setErrMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Tags, {\n            post: post,\n            tag: tag,\n            setTag: setTag,\n            tags: tags,\n            setTags: setTags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"closeOrPostContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"closeBtn\",\n              onClick: () => {\n                if (disabledBool()) {\n                  resetInputs();\n                  allowScroll(document);\n\n                  if (!update) {\n                    setAudioPostActive(audioPostActive = false);\n                    setPostFormModal(postFormModal = false);\n                  } else {\n                    setUpdate(update = false);\n                  }\n\n                  if (mobile) {\n                    setPostFormOpen(postFormOpen = false);\n                  }\n                } else {\n                  setConfirmClose(confirmClose = true);\n                }\n              },\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(ConfirmClose, {\n              mobile: mobile,\n              update: update,\n              setUpdate: setUpdate,\n              confirmClose: confirmClose,\n              setConfirmClose: setConfirmClose,\n              allowScroll: allowScroll,\n              resetInputs: resetInputs,\n              setFormActive: setAudioPostActive,\n              formActive: audioPostActive,\n              setPostFormModal: setPostFormModal,\n              postFormModal: postFormModal,\n              postFormOpen: postFormOpen,\n              setPostFormOpen: setPostFormOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: disabledBool() ? 'formSubmitBtn disabled' : 'formSubmitBtn',\n              disabled: disabledBool(),\n              onClick: () => {\n                if (description) {\n                  var textObj = {\n                    kind: 'text',\n                    srcType: 'text',\n                    content: description,\n                    displayIdx: body.current.length,\n                    uniqId: randomstring.generate({\n                      length: 12,\n                      charset: 'alphabetic'\n                    })\n                  };\n                  body.current.push(textObj);\n                  setDescription(description = '');\n                }\n\n                if (tag) {\n                  handleTagInput(tag, setTag, tags, setTags);\n                }\n\n                if (!update) {\n                  setPostFormModal(postFormModal = false);\n                }\n\n                setUploading(uploading = true);\n              },\n              children: post ? 'Update' : 'Post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(AudioPostForm, \"QE29w3UCqM5M8TJNZyjsU6z1kjI=\", false, function () {\n  return [useHistory, useMutation];\n});\n\n_c = AudioPostForm;\nexport default AudioPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioPostForm\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/types/create/AudioPostForm.js"],"names":["React","useEffect","useState","useRef","useHistory","useMutation","Cookies","randomstring","AudioFileInput","BodyImageAndText","Tags","ProfilePic","ConfirmClose","Queries","Mutations","UpdateCacheUtil","PostFormUtil","postCreate","postUpdate","bodyPost","handleFormData","stripAllImgs","audioPost","handleUploadedFiles","resetDisplayIdx","handleMentions","discardMentions","handleAllTextAudioPost","allowScroll","preventScroll","handleTagInput","CREATE_OR_UPDATE_POST","FETCH_USER_FEED","AudioPostForm","mobile","user","post","update","setUpdate","audioPostActive","setAudioPostActive","postFormModal","setPostFormModal","postFormOpen","setPostFormOpen","uploading","setUploading","audioFile","setAudioFile","title","setTitle","artist","setArtist","album","setAlbum","src","setSrc","active","setActive","objsToClean","body","allText","description","setDescription","bodyImageFiles","setBodyImageFiles","tag","setTag","tags","setTags","errMessage","setErrMessage","render","setRender","confirmClose","setConfirmClose","displayBodyImageAndTextInput","setDisplayBodyImageAndTextInput","history","formId","formInputId","document","createOrUpdatePost","client","data","currentUser","get","query","onCompleted","resetInputs","push","onError","error","console","log","current","handleSubmit","e","preventDefault","audioFileFormData","FormData","append","bodyImagesFormData","Promise","all","then","bodyUploads","audio","mentions","descriptions","instanceData","variants","audioFileId","_id","audioMeta","descriptionImages","kind","postId","variables","disabledBool","handleAudioPostFormClass","blogName","key","textObj","srcType","content","displayIdx","length","uniqId","generate","charset"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport randomstring from 'randomstring';\n\nimport AudioFileInput from '../../util/components/forms/inputTypes/Audio_File_Input';\nimport BodyImageAndText from '../../util/components/forms/Body_Image_And_Text';\nimport Tags from '../../util/components/forms/Tags';\nimport ProfilePic from '../../../user/util/components/Profile_Pic';\nimport ConfirmClose from '../../../nav/Confirm_Close';\n\nimport Queries from '../../../../graphql/queries.js';\nimport Mutations from '../../../../graphql/mutations.js';\nimport UpdateCacheUtil from '../../util/functions/update_cache_util.js';\nimport PostFormUtil from '../../util/functions/post_form_util.js';\nconst { postCreate, postUpdate } = UpdateCacheUtil;\nconst { bodyPost, handleFormData, stripAllImgs,\n        audioPost, handleUploadedFiles,\n        resetDisplayIdx, handleMentions, \n        discardMentions, handleAllTextAudioPost,\n        allowScroll, preventScroll, handleTagInput } = PostFormUtil;\nconst { CREATE_OR_UPDATE_POST } = Mutations;\nconst { FETCH_USER_FEED } = Queries;\n\nconst AudioPostForm = ({\n  mobile,\n  user,\n  post, \n  update,\n  setUpdate,\n  audioPostActive,\n  setAudioPostActive,\n  postFormModal,\n  setPostFormModal,\n  postFormOpen,\n  setPostFormOpen,\n  uploading,\n  setUploading\n}) => {\n  let [audioFile, setAudioFile] = useState('');\n  let [title, setTitle] = useState('');\n  let [artist, setArtist] = useState('');\n  let [album, setAlbum] = useState('');\n  let [src, setSrc] = useState('');\n\n  let [active, setActive] = useState(false)\n\n  let objsToClean = useRef([]);\n  let body = useRef([]);\n  let allText = useRef([]);\n  let [description, setDescription] = useState('');\n  let [bodyImageFiles, setBodyImageFiles] = useState([]);\n  let [tag, setTag] = useState('');\n  let [tags, setTags] = useState([]);\n  let [errMessage, setErrMessage] = useState('');\n  let [render, setRender] = useState(0);\n  let [confirmClose, setConfirmClose] = useState(false);\n  let [displayBodyImageAndTextInput, setDisplayBodyImageAndTextInput] = useState(false)\n  let history = useHistory();\n  const formId = 'audioPostForm';\n  const formInputId = 'audioPostInput'\n  \n  useEffect(() => {\n\n    preventScroll(audioPostActive, document)\n\n  }, [audioPostActive])\n\n  useEffect(() => {\n    resetDisplayIdx(body)\n  })\n\n  let [createOrUpdatePost] = useMutation(CREATE_OR_UPDATE_POST, {\n    update(client, { data }){\n      const { createOrUpdatePost } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER_FEED\n      \n      if (post) {\n        postUpdate(client, createOrUpdatePost, currentUser, query)\n      } else {\n        postCreate(client, createOrUpdatePost, currentUser, query)\n      }\n    },\n    onCompleted() {\n      resetInputs();\n      if (post) {\n        setUpdate(update = false)\n        setUploading(uploading = false)\n      } else {\n        resetInputs()\n        allowScroll(document)\n        setAudioPostActive(audioPostActive = false)\n\n        if (mobile) {\n          setPostFormOpen(postFormOpen = false)\n          history.push('/dashboard')\n        }\n\n        setUploading(uploading = false)\n      }\n    },\n    onError(error) {\n      console.log(error)\n    }\n  });\n\n  const resetInputs = () => {\n    setTitle(title = '') \n    setArtist(artist = '') \n    setAlbum(album = '') \n    setSrc(src = '')\n    setAudioFile(audioFile = '')\n    setBodyImageFiles(bodyImageFiles = []);\n    body.current = [];\n    allText.current = '';\n    setDescription(description = '');\n    setTag(tag = '');\n    setTags(tags = []);\n    setErrMessage(errMessage = '');\n    setActive(active = false)\n  }\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (audioFile) {\n      var audioFileFormData = new FormData();\n      audioFileFormData.append('audio', audioFile)\n    }\n  \n    var bodyImagesFormData = handleFormData(bodyImageFiles)\n  \n    Promise.all([\n      bodyPost(bodyImagesFormData),\n      audioPost(audioFileFormData)\n    ]).then(\n      ([bodyUploads, audio]) => {\n        \n        var mentions = handleMentions(body, stripAllImgs)\n        \n        discardMentions(post, mentions, objsToClean)\n\n        var descriptions = stripAllImgs(body)\n\n        handleAllTextAudioPost(allText, descriptions, title, artist, album)\n\n        var instanceData = {\n          variants: {\n            audioFileId: audio[0] ? audio[0]._id : post.audioFile._id,\n              audioMeta: {\n                title, artist, album\n              }\n          },\n          allText: allText.current,\n          descriptions: descriptions,\n          descriptionImages: handleUploadedFiles(body, bodyUploads),\n          mentions: mentions,\n          user: Cookies.get('currentUser'),\n          tags, kind: 'AudioPost',\n          objsToClean: objsToClean.current,\n          postId: post ? post._id : null\n        };\n        \n        createOrUpdatePost({\n          variables: {\n            instanceData: instanceData\n          }\n        })\n      }\n    )\n  }\n\n  const disabledBool = () => {\n    return !audioFile\n  }\n\n  const handleAudioPostFormClass = () => {\n    if ((audioPostActive && !uploading) || update) {\n      return 'postForm audioPostForm active'\n    } else if (audioPostActive && uploading) {\n      return 'postForm audioPostForm hidden'\n    } else {\n      return 'postForm audioPostForm none'\n    }\n  }\n\n  if (audioPostActive || update) {\n    return (\n      <div\n        className={update ? 'postFormContainer update' : 'postFormContainer'}\n      >\n\n      <ProfilePic user={update ? post.user : user} />\n\n      <div\n        className={handleAudioPostFormClass()}\n      >\n\n        <h3\n          className='userNameHeader'\n        >{update ? post.user.blogName : user.blogName}</h3>\n\n        <form\n          id={formId}\n          onSubmit={e => handleSubmit(e)}\n          onKeyPress={e => { e.key === 'Enter' && e.preventDefault() }}\n          encType={'multipart/form-data'}\n        >\n      \n        <AudioFileInput\n          post={post}\n          update={update}\n          displayBodyImageAndTextInput={displayBodyImageAndTextInput}\n          setDisplayBodyImageAndTextInput={setDisplayBodyImageAndTextInput}\n          formId={formId}\n          objsToClean={objsToClean}\n          audioFile={audioFile}\n          setAudioFile={setAudioFile}\n          title={title}\n          setTitle={setTitle}\n          artist={artist}\n          setArtist={setArtist}\n          album={album}\n          setAlbum={setAlbum}\n          src={src}\n          setSrc={setSrc}\n          active={active}\n          setActive={setActive}\n          render={render}\n          setRender={setRender}\n        />\n  \n        <BodyImageAndText\n          displayBodyImageAndTextInput={displayBodyImageAndTextInput}\n          post={post}\n          update={update}\n          formId={formId}\n          formInputId={formInputId}\n          objsToClean={objsToClean}\n          body={body}\n          bodyImageFiles={bodyImageFiles}\n          setBodyImageFiles={setBodyImageFiles}\n          description={description}\n          setDescription={setDescription}\n          render={render}\n          setRender={setRender}\n          errMessage={errMessage}\n          setErrMessage={setErrMessage}\n        />\n  \n        <Tags\n          post={post}\n          tag={tag}\n          setTag={setTag}\n          tags={tags}\n          setTags={setTags}\n        />\n  \n        <div\n          className='closeOrPostContainer'\n        >\n          <div\n            className='closeBtn'\n            onClick={() => {\n              if (disabledBool()) {\n                resetInputs()\n                allowScroll(document)\n                \n                if (!update) {\n                  setAudioPostActive(audioPostActive = false)\n                  setPostFormModal(postFormModal = false)\n                } else {\n                  setUpdate(update = false)\n                }\n\n                if (mobile) {\n                  setPostFormOpen(postFormOpen = false)\n                }\n              } else {\n                setConfirmClose(confirmClose = true)\n              }\n            }}\n          >\n            Close\n          </div>\n\n          <ConfirmClose\n            mobile={mobile}\n            update={update}\n            setUpdate={setUpdate}\n            confirmClose={confirmClose}\n            setConfirmClose={setConfirmClose}\n            allowScroll={allowScroll}\n            resetInputs={resetInputs}\n            setFormActive={setAudioPostActive}\n            formActive={audioPostActive}\n            setPostFormModal={setPostFormModal}\n            postFormModal={postFormModal}\n            postFormOpen={postFormOpen}\n            setPostFormOpen={setPostFormOpen}\n          />\n\n          <button\n            type='submit'\n            className={disabledBool() ? 'formSubmitBtn disabled': 'formSubmitBtn'}\n            disabled={disabledBool()}\n            onClick={() => {\n              if (description) {\n                var textObj = {\n                  kind: 'text',\n                  srcType: 'text',\n                  content: description,\n                  displayIdx: body.current.length,\n                  uniqId: randomstring.generate({\n                    length: 12,\n                    charset: 'alphabetic'\n                  })\n                }\n\n                body.current.push(textObj)\n              \n                setDescription(description = '')\n              }\n              \n              if (tag) {\n                handleTagInput(\n                  tag, setTag,\n                  tags, setTags\n                )\n              }\n              \n              if (!update) {\n                setPostFormModal(postFormModal = false)\n              }\n\n              setUploading(uploading = true)\n            }}\n          >\n            {post ? 'Update' : 'Post'}\n          </button>\n        </div>\n        </form>\n      </div>\n    </div>\n    )\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default AudioPostForm;"]},"metadata":{},"sourceType":"module"}