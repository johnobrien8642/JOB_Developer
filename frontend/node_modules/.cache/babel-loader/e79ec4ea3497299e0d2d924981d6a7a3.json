{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/types/showOrUpdate/PostShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport PostNotes from '../../util/components/social/Post_Notes.js';\nimport PostOptions from '../../util/components/social/Post_Options.js';\nimport RepostForm from '../../util/components/social/Repost_Form';\nimport PostShowUtil from '../../util/functions/post_show_util.js';\nimport Queries from '../../../../graphql/queries';\nimport Mutations from '../../../../graphql/mutations';\nimport PostFormUtil from '../../util/functions/post_form_util.js';\nimport UpdateCacheUtil from '../../util/functions/update_cache_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  postHeader,\n  postBody,\n  repostFooter,\n  postTags\n} = PostShowUtil;\nconst {\n  allowScroll,\n  preventScroll\n} = PostFormUtil;\nconst {\n  postDelete\n} = UpdateCacheUtil;\nconst {\n  FETCH_LIKES_REPOSTS_AND_COMMENTS,\n  FETCH_USER_FEED\n} = Queries;\nconst {\n  DELETE_POST\n} = Mutations;\n\nconst PostShow = ({\n  post,\n  repostFormBool,\n  update,\n  setUpdate,\n  toggleUpdate,\n  discover,\n  radar,\n  repostCaption,\n  setRepostCaption,\n  uploading,\n  setUploading\n}) => {\n  _s();\n\n  let [notesActive, setNotesActive] = useState(false);\n  let [repostActive, setRepostActive] = useState(false);\n  let [confirmDelete, setConfirmDelete] = useState(false);\n  let doesUserFollowUserRef = useRef(false);\n  useEffect(() => {\n    if (confirmDelete) {\n      preventScroll(confirmDelete, document);\n    }\n  }, [confirmDelete]);\n  let [deletePost] = useMutation(DELETE_POST, {\n    update(client, {\n      data\n    }) {\n      const {\n        deletePost\n      } = data;\n      var currentUser = Cookies.get('currentUser');\n      var query = FETCH_USER_FEED;\n      postDelete(client, post, deletePost, currentUser, query);\n    }\n\n  });\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_LIKES_REPOSTS_AND_COMMENTS, {\n    variables: {\n      postId: post._id\n    }\n  });\n\n  const toggleNotes = () => {\n    if (notesActive) {\n      setNotesActive(notesActive = false);\n    } else {\n      setNotesActive(notesActive = true);\n    }\n  };\n\n  const notesAndOptions = () => {\n    if (!repostFormBool) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PostNotes, {\n          post: post,\n          notesCount: data.fetchLikesRepostsAndComments.length,\n          notes: data.fetchLikesRepostsAndComments,\n          notesActive: notesActive,\n          setNotesActive: setNotesActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostOptions, {\n          post: post,\n          notesCount: data.fetchLikesRepostsAndComments.length,\n          notesActive: notesActive,\n          setNotesActive: setNotesActive,\n          toggleNotes: toggleNotes,\n          update: update,\n          setUpdate: setUpdate,\n          toggleUpdate: toggleUpdate,\n          repostActive: repostActive,\n          setRepostActive: setRepostActive,\n          confirmDelete: confirmDelete,\n          setConfirmDelete: setConfirmDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const renderConfirmDelete = () => {\n    if (confirmDelete) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmDeleteModal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmDelete\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete this post?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancelBtn\",\n              onClick: () => {\n                allowScroll(document);\n                setConfirmDelete(confirmDelete = false);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteBtn\",\n              onClick: e => {\n                allowScroll(document);\n                deletePost({\n                  variables: {\n                    post: post\n                  }\n                });\n                setConfirmDelete(confirmDelete = false);\n              },\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`;\n\n  switch (post) {\n    case null:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry, looks like this post no longer exists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [postHeader(post, discover, radar, doesUserFollowUserRef, repostFormBool), postBody(post), repostFooter(post, update, repostCaption, setRepostCaption), postTags(post), notesAndOptions(), renderConfirmDelete(), /*#__PURE__*/_jsxDEV(RepostForm, {\n          post: post,\n          repostActive: repostActive,\n          setRepostActive: setRepostActive,\n          uploading: uploading,\n          setUploading: setUploading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this);\n  }\n};\n\n_s(PostShow, \"bxIY+PTAp1fDhhA2gHWhoqjik8I=\", false, function () {\n  return [useMutation, useQuery];\n});\n\n_c = PostShow;\nexport default PostShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostShow\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/types/showOrUpdate/PostShow.js"],"names":["React","useState","useRef","useEffect","useQuery","useMutation","Cookies","PostNotes","PostOptions","RepostForm","PostShowUtil","Queries","Mutations","PostFormUtil","UpdateCacheUtil","postHeader","postBody","repostFooter","postTags","allowScroll","preventScroll","postDelete","FETCH_LIKES_REPOSTS_AND_COMMENTS","FETCH_USER_FEED","DELETE_POST","PostShow","post","repostFormBool","update","setUpdate","toggleUpdate","discover","radar","repostCaption","setRepostCaption","uploading","setUploading","notesActive","setNotesActive","repostActive","setRepostActive","confirmDelete","setConfirmDelete","doesUserFollowUserRef","document","deletePost","client","data","currentUser","get","query","loading","error","variables","postId","_id","toggleNotes","notesAndOptions","fetchLikesRepostsAndComments","length","renderConfirmDelete","e"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport PostNotes from '../../util/components/social/Post_Notes.js';\nimport PostOptions from '../../util/components/social/Post_Options.js';\nimport RepostForm from '../../util/components/social/Repost_Form';\n\nimport PostShowUtil from '../../util/functions/post_show_util.js';\nimport Queries from '../../../../graphql/queries';\nimport Mutations from '../../../../graphql/mutations';\nimport PostFormUtil from '../../util/functions/post_form_util.js';\nimport UpdateCacheUtil from '../../util/functions/update_cache_util.js';\nconst { postHeader, postBody, repostFooter, postTags } = PostShowUtil;\nconst { allowScroll, preventScroll } = PostFormUtil;\nconst { postDelete } = UpdateCacheUtil;\nconst { FETCH_LIKES_REPOSTS_AND_COMMENTS, FETCH_USER_FEED } = Queries;\nconst { DELETE_POST } = Mutations;\n\n\nconst PostShow = ({ \n  post, \n  repostFormBool,\n  update, \n  setUpdate,\n  toggleUpdate,\n  discover, \n  radar,\n  repostCaption,\n  setRepostCaption,\n  uploading,\n  setUploading\n}) => {\n  let [notesActive, setNotesActive] = useState(false)\n  let [repostActive, setRepostActive] = useState(false)\n  let [confirmDelete, setConfirmDelete] = useState(false)\n  let doesUserFollowUserRef = useRef(false)\n\n  useEffect(() => {\n    if (confirmDelete) {\n\n      preventScroll(confirmDelete, document)\n\n    }\n    \n  }, [confirmDelete])\n\n  let [deletePost] = useMutation(DELETE_POST, {\n    update(client, { data }) {\n      const { deletePost } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER_FEED\n    \n      postDelete(\n        client, post, deletePost,\n        currentUser, query\n      )\n    }\n  })\n\n  let { loading, error, data } = useQuery(FETCH_LIKES_REPOSTS_AND_COMMENTS, {\n    variables: {\n      postId: post._id\n    }\n  })\n\n  const toggleNotes = () => {\n    if (notesActive) {\n      setNotesActive(notesActive = false)\n    } else {\n      setNotesActive(notesActive = true)\n    }\n  }\n\n  const notesAndOptions = () => {\n    if (!repostFormBool) {\n      return (\n        <React.Fragment>\n          <PostNotes\n            post={post}\n            notesCount={data.fetchLikesRepostsAndComments.length}\n            notes={data.fetchLikesRepostsAndComments}\n            notesActive={notesActive}\n            setNotesActive={setNotesActive}\n          />\n      \n          <PostOptions\n            post={post}\n            notesCount={data.fetchLikesRepostsAndComments.length}\n            notesActive={notesActive}\n            setNotesActive={setNotesActive}\n            toggleNotes={toggleNotes}\n            update={update}\n            setUpdate={setUpdate}\n            toggleUpdate={toggleUpdate}\n            repostActive={repostActive}\n            setRepostActive={setRepostActive}\n            confirmDelete={confirmDelete}\n            setConfirmDelete={setConfirmDelete}\n          />\n        </React.Fragment>\n      )\n    }\n  }\n\n  const renderConfirmDelete = () => {\n    if (confirmDelete) {\n      return (\n        <React.Fragment>\n          <div className='confirmDeleteModal' />\n          <div\n            className='confirmDelete'\n          >\n            <p>Are you sure you want to delete this post?</p>\n\n            <div>\n              <button\n                className='cancelBtn'\n                onClick={() => {\n                  allowScroll(document)\n                  setConfirmDelete(confirmDelete = false)\n                }}\n              >\n                Cancel\n              </button>\n\n              <button\n                className='deleteBtn'\n                onClick={e => {\n                  allowScroll(document)\n                  deletePost({\n                    variables: {\n                      post: post\n                    }\n                  })\n                  setConfirmDelete(confirmDelete = false)\n                }}\n              >\n                Ok\n              </button> \n            </div>\n          </div>\n        </React.Fragment>\n      )\n    }\n  }\n\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`\n  \n  switch(post) {\n    case null:\n      return (\n        <div>\n          <p>Sorry, looks like this post no longer exists</p>\n        </div>\n      )\n    default:\n      return (\n        <React.Fragment>\n            {postHeader(post, discover, radar, doesUserFollowUserRef, repostFormBool)}\n        \n            {postBody(post)}\n        \n            {repostFooter(post, update, repostCaption, setRepostCaption)}\n        \n            {postTags(post)}\n\n            {notesAndOptions()}\n\n            {renderConfirmDelete()}\n\n            <RepostForm\n              post={post}\n              repostActive={repostActive}\n              setRepostActive={setRepostActive}\n              uploading={uploading}\n              setUploading={setUploading}\n            />\n        </React.Fragment>\n      )\n  }\n}\n\nexport default PostShow;"]},"metadata":{},"sourceType":"module"}