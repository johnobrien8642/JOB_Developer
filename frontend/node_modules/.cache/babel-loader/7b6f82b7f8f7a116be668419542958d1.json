{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Nav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport BrowserNav from './Browser_Nav';\nimport MobileNav from './Mobile_Nav';\nimport Queries from '../../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  IS_LOGGED_IN,\n  FETCH_USER_DETAILS_COUNTS,\n  FETCH_USER\n} = Queries;\n\nconst Nav = () => {\n  _s();\n\n  let cursorId = useRef(new Date().getTime());\n  useEffect(() => {\n    return () => {\n      refetch();\n    }; //eslint-disable-next-line\n  }, []);\n  var {\n    loading: loading1,\n    error: error1,\n    data: userDetailsCounts,\n    refetch\n  } = useQuery(FETCH_USER_DETAILS_COUNTS, {\n    variables: {\n      query: Cookies.get('currentUser')\n    },\n    fetchPolicy: 'network-only'\n  });\n  var {\n    loading: loading2,\n    error: error2,\n    data: fetchedUser\n  } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  });\n  var {\n    data: loggedInBool\n  } = useQuery(IS_LOGGED_IN);\n  if (loading1 || loading2) return 'Loading...';\n\n  if (error1) {\n    return `Error: ${error1}`;\n  } else if (error2) {\n    return `Error: ${error2}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BrowserNav, {\n      user: fetchedUser.user,\n      userDetailsCounts: userDetailsCounts,\n      loggedInBool: loggedInBool,\n      cursorId: cursorId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileNav, {\n      user: fetchedUser.user,\n      userDetailsCounts: userDetailsCounts,\n      loggedInBool: loggedInBool,\n      cursorId: cursorId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nav, \"B0l0B4Uvv6lLe9v0ffU3NOArOfw=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/nav/Nav.js"],"names":["React","useRef","useEffect","useQuery","Cookies","BrowserNav","MobileNav","Queries","IS_LOGGED_IN","FETCH_USER_DETAILS_COUNTS","FETCH_USER","Nav","cursorId","Date","getTime","refetch","loading","loading1","error","error1","data","userDetailsCounts","variables","query","get","fetchPolicy","loading2","error2","fetchedUser","loggedInBool","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AACA,MAAM;AAAEC,EAAAA,YAAF;AACEC,EAAAA,yBADF;AAEEC,EAAAA;AAFF,IAEiBH,OAFvB;;AAKA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAIC,QAAQ,GAAGX,MAAM,CAAC,IAAIY,IAAJ,GAAWC,OAAX,EAAD,CAArB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,WAAO,MAAM;AACXa,MAAAA,OAAO;AACR,KAFD,CAFc,CAKd;AACD,GANQ,EAMN,EANM,CAAT;AAQA,MAAI;AAAEC,IAAAA,OAAO,EAAEC,QAAX;AACEC,IAAAA,KAAK,EAAEC,MADT;AAEEC,IAAAA,IAAI,EAAEC,iBAFR;AAGEN,IAAAA;AAHF,MAGcZ,QAAQ,CAACM,yBAAD,EAA4B;AAC9Ca,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEnB,OAAO,CAACoB,GAAR,CAAY,aAAZ;AADE,KADmC;AAI9CC,IAAAA,WAAW,EAAE;AAJiC,GAA5B,CAH1B;AAUA,MAAI;AAAET,IAAAA,OAAO,EAAEU,QAAX;AACER,IAAAA,KAAK,EAAES,MADT;AAEEP,IAAAA,IAAI,EAAEQ;AAFR,MAEwBzB,QAAQ,CAACO,UAAD,EAAa;AACzCY,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEnB,OAAO,CAACoB,GAAR,CAAY,aAAZ;AADE;AAD8B,GAAb,CAFpC;AAQI,MAAI;AAAEJ,IAAAA,IAAI,EAAES;AAAR,MAAyB1B,QAAQ,CAACK,YAAD,CAArC;AAEA,MAAIS,QAAQ,IAAIS,QAAhB,EAA0B,OAAO,YAAP;;AAE1B,MAAIP,MAAJ,EAAY;AACV,WAAQ,UAASA,MAAO,EAAxB;AACD,GAFD,MAEO,IAAIQ,MAAJ,EAAY;AACjB,WAAQ,UAASA,MAAO,EAAxB;AACD;;AAEL,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEC,WAAW,CAACE,IADpB;AAEE,MAAA,iBAAiB,EAAET,iBAFrB;AAGE,MAAA,YAAY,EAAEQ,YAHhB;AAIE,MAAA,QAAQ,EAAEjB;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,SAAD;AACE,MAAA,IAAI,EAAEgB,WAAW,CAACE,IADpB;AAEE,MAAA,iBAAiB,EAAET,iBAFrB;AAGE,MAAA,YAAY,EAAEQ,YAHhB;AAIE,MAAA,QAAQ,EAAEjB;AAJZ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvDD;;GAAMD,G;UAccR,Q,EASUA,Q,EAMKA,Q;;;KA7B7BQ,G;AAyDN,eAAeA,GAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport BrowserNav from './Browser_Nav';\nimport MobileNav from './Mobile_Nav';\n\nimport Queries from '../../graphql/queries';\nconst { IS_LOGGED_IN,\n        FETCH_USER_DETAILS_COUNTS,\n        FETCH_USER } = Queries;\n\n\nconst Nav = () => {\n  let cursorId = useRef(new Date().getTime())\n  \n  useEffect(() => {\n\n    return () => {\n      refetch()\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  var { loading: loading1, \n        error: error1,\n        data: userDetailsCounts, \n        refetch } = useQuery(FETCH_USER_DETAILS_COUNTS, {\n          variables: {\n            query: Cookies.get('currentUser')\n          },\n          fetchPolicy: 'network-only'\n      })\n\n  var { loading: loading2, \n        error: error2, \n        data: fetchedUser } = useQuery(FETCH_USER, {\n          variables: {\n            query: Cookies.get('currentUser')\n          },\n      })\n      \n      var { data: loggedInBool } = useQuery(IS_LOGGED_IN)\n\n      if (loading1 || loading2) return 'Loading...';\n      \n      if (error1) {\n        return `Error: ${error1}`\n      } else if (error2) {\n        return `Error: ${error2}`\n      }\n\n  return (\n    <React.Fragment>\n      <BrowserNav\n        user={fetchedUser.user}\n        userDetailsCounts={userDetailsCounts}\n        loggedInBool={loggedInBool}\n        cursorId={cursorId}\n      />\n      <MobileNav\n        user={fetchedUser.user}\n        userDetailsCounts={userDetailsCounts}\n        loggedInBool={loggedInBool}\n        cursorId={cursorId}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default Nav;"]},"metadata":{},"sourceType":"module"}