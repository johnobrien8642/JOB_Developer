{"ast":null,"code":"import React,{useEffect}from'react';import BodyImageDnD from'./dragAndDrop/Body_Image_DnD';import BodyTextDnD from'../forms/dragAndDrop/Body_Text_DnD';import BodyImageInput from'./inputTypes/Body_Image_Input';import DescriptionStringInput from'./inputTypes/Description_String_Input';import PostUpdateUtil from'../../functions/post_update_util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var reassembleBody=PostUpdateUtil.reassembleBody;var BodyImageAndText=function BodyImageAndText(_ref){var displayBodyImageAndTextInput=_ref.displayBodyImageAndTextInput,post=_ref.post,formId=_ref.formId,update=_ref.update,formInputId=_ref.formInputId,objsToClean=_ref.objsToClean,body=_ref.body,bodyImageFiles=_ref.bodyImageFiles,setBodyImageFiles=_ref.setBodyImageFiles,description=_ref.description,setDescription=_ref.setDescription,render=_ref.render,setRender=_ref.setRender,errMessage=_ref.errMessage,setErrMessage=_ref.setErrMessage;useEffect(function(){if(post){//eslint-disable-next-line\nreassembleBody(body,post.descriptionImages,post.descriptions);setRender(render+1);}//eslint-disable-next-line\n},[]);if(displayBodyImageAndTextInput){return/*#__PURE__*/_jsxs(\"div\",{className:'bodyPreview',children:[body.current.map(function(obj,i){if(obj.srcType==='newImgFile'||obj.srcType==='newImgLink'||obj.srcType==='oldImgUpload'||obj.srcType==='oldImgLink'){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(BodyImageDnD,{bodyIdx:i,img:obj,body:body,bodyImageFiles:bodyImageFiles,setBodyImageFiles:setBodyImageFiles,render:render,setRender:setRender,objsToClean:objsToClean})},i);}else if(obj.srcType==='text'||obj.srcType==='oldText'){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(BodyTextDnD,{bodyIdx:i,update:update,formInputId:formInputId,text:obj,body:body,bodyImageFiles:bodyImageFiles,setBodyImageFiles:setBodyImageFiles,render:render,setRender:setRender,objsToClean:objsToClean})},i);}else{return/*#__PURE__*/_jsx(\"div\",{});}}),/*#__PURE__*/_jsxs(\"div\",{className:\"bodyImageOrDescriptionStringContainer\",children:[/*#__PURE__*/_jsx(BodyImageInput,{formId:formId,body:body,bodyImageFiles:bodyImageFiles,setBodyImageFiles:setBodyImageFiles,render:render,setRender:setRender,errMessage:errMessage,setErrMessage:setErrMessage}),/*#__PURE__*/_jsx(DescriptionStringInput,{body:body,update:update,description:description,setDescription:setDescription,formInputId:formInputId})]})]});}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default BodyImageAndText;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/Body_Image_And_Text.js"],"names":["React","useEffect","BodyImageDnD","BodyTextDnD","BodyImageInput","DescriptionStringInput","PostUpdateUtil","reassembleBody","BodyImageAndText","displayBodyImageAndTextInput","post","formId","update","formInputId","objsToClean","body","bodyImageFiles","setBodyImageFiles","description","setDescription","render","setRender","errMessage","setErrMessage","descriptionImages","descriptions","current","map","obj","i","srcType"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oCAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,uCAAnC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,qCAA3B,C,wFACA,GAAQC,CAAAA,cAAR,CAA2BD,cAA3B,CAAQC,cAAR,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAgBnB,IAfJC,CAAAA,4BAeI,MAfJA,4BAeI,CAdJC,IAcI,MAdJA,IAcI,CAbJC,MAaI,MAbJA,MAaI,CAZJC,MAYI,MAZJA,MAYI,CAXJC,WAWI,MAXJA,WAWI,CAVJC,WAUI,MAVJA,WAUI,CATJC,IASI,MATJA,IASI,CARJC,cAQI,MARJA,cAQI,CAPJC,iBAOI,MAPJA,iBAOI,CANJC,WAMI,MANJA,WAMI,CALJC,cAKI,MALJA,cAKI,CAJJC,MAII,MAJJA,MAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,UAEI,MAFJA,UAEI,CADJC,aACI,MADJA,aACI,CAEJtB,SAAS,CAAC,UAAM,CACd,GAAIS,IAAJ,CAAU,CACR;AACAH,cAAc,CAACQ,IAAD,CAAOL,IAAI,CAACc,iBAAZ,CAA+Bd,IAAI,CAACe,YAApC,CAAd,CACAJ,SAAS,CAACD,MAAM,CAAG,CAAV,CAAT,CACD,CACD;AACD,CAPQ,CAON,EAPM,CAAT,CASA,GAAIX,4BAAJ,CAAkC,CAChC,mBACA,aACE,SAAS,CAAE,aADb,WAGKM,IAAI,CAACW,OAAL,CAAaC,GAAb,CAAiB,SAACC,GAAD,CAAMC,CAAN,CAAY,CAC1B,GACID,GAAG,CAACE,OAAJ,GAAgB,YAAhB,EACAF,GAAG,CAACE,OAAJ,GAAgB,YADhB,EAEAF,GAAG,CAACE,OAAJ,GAAgB,cAFhB,EAGAF,GAAG,CAACE,OAAJ,GAAgB,YAJpB,CAKI,CACA,mBACE,KAAC,KAAD,CAAO,QAAP,wBAGE,KAAC,YAAD,EACE,OAAO,CAAED,CADX,CAEE,GAAG,CAAED,GAFP,CAGE,IAAI,CAAEb,IAHR,CAIE,cAAc,CAAEC,cAJlB,CAKE,iBAAiB,CAAEC,iBALrB,CAME,MAAM,CAAEG,MANV,CAOE,SAAS,CAAEC,SAPb,CAQE,WAAW,CAAEP,WARf,EAHF,EACOe,CADP,CADF,CAgBD,CAtBH,IAsBS,IACHD,GAAG,CAACE,OAAJ,GAAgB,MAAhB,EACAF,GAAG,CAACE,OAAJ,GAAgB,SAFb,CAGH,CACF,mBACE,KAAC,KAAD,CAAO,QAAP,wBAGE,KAAC,WAAD,EACE,OAAO,CAAED,CADX,CAEE,MAAM,CAAEjB,MAFV,CAGE,WAAW,CAAEC,WAHf,CAIE,IAAI,CAAEe,GAJR,CAKE,IAAI,CAAEb,IALR,CAME,cAAc,CAAEC,cANlB,CAOE,iBAAiB,CAAEC,iBAPrB,CAQE,MAAM,CAAEG,MARV,CASE,SAAS,CAAEC,SATb,CAUE,WAAW,CAAEP,WAVf,EAHF,EACOe,CADP,CADF,CAkBH,CAtBQ,IAsBF,CACL,mBACE,cADF,CAGD,CACJ,CAlDA,CAHL,cAuDI,aACE,SAAS,CAAC,uCADZ,wBAGI,KAAC,cAAD,EACE,MAAM,CAAElB,MADV,CAEE,IAAI,CAAEI,IAFR,CAGE,cAAc,CAAEC,cAHlB,CAIE,iBAAiB,CAAEC,iBAJrB,CAKE,MAAM,CAAEG,MALV,CAME,SAAS,CAAEC,SANb,CAOE,UAAU,CAAEC,UAPd,CAQE,aAAa,CAAEC,aARjB,EAHJ,cAcI,KAAC,sBAAD,EACE,IAAI,CAAER,IADR,CAEE,MAAM,CAAEH,MAFV,CAGE,WAAW,CAAEM,WAHf,CAIE,cAAc,CAAEC,cAJlB,CAKE,WAAW,CAAEN,WALf,EAdJ,GAvDJ,GADA,CAgFD,CAjFD,IAiFO,CACL,mBACE,cADF,CAGD,CAEF,CAlHD,CAoHA,cAAeL,CAAAA,gBAAf","sourcesContent":["import React, { useEffect } from 'react';\n\nimport BodyImageDnD from './dragAndDrop/Body_Image_DnD'\nimport BodyTextDnD from '../forms/dragAndDrop/Body_Text_DnD'\nimport BodyImageInput from './inputTypes/Body_Image_Input';\nimport DescriptionStringInput from './inputTypes/Description_String_Input';\n\nimport PostUpdateUtil from '../../functions/post_update_util.js';\nconst { reassembleBody } = PostUpdateUtil;\n\nconst BodyImageAndText = ({\n  displayBodyImageAndTextInput,\n  post, \n  formId, \n  update,\n  formInputId, \n  objsToClean,\n  body, \n  bodyImageFiles,\n  setBodyImageFiles, \n  description,\n  setDescription, \n  render,\n  setRender, \n  errMessage,\n  setErrMessage\n}) => {\n\n  useEffect(() => {\n    if (post) {\n      //eslint-disable-next-line\n      reassembleBody(body, post.descriptionImages, post.descriptions)\n      setRender(render + 1)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  if (displayBodyImageAndTextInput) {\n    return(\n    <div\n      className={'bodyPreview'}\n    >\n        {body.current.map((obj, i) => {\n            if (\n                obj.srcType === 'newImgFile' ||\n                obj.srcType === 'newImgLink' ||\n                obj.srcType === 'oldImgUpload' ||\n                obj.srcType === 'oldImgLink'\n              ) {\n                return (\n                  <React.Fragment\n                    key={i}\n                  >\n                    <BodyImageDnD\n                      bodyIdx={i}\n                      img={obj}\n                      body={body}\n                      bodyImageFiles={bodyImageFiles}\n                      setBodyImageFiles={setBodyImageFiles}\n                      render={render}\n                      setRender={setRender}\n                      objsToClean={objsToClean}       \n                    />\n                  </React.Fragment>\n                )\n              } else if (\n                  obj.srcType === 'text' ||\n                  obj.srcType === 'oldText'\n                ) {\n                return (\n                  <React.Fragment\n                    key={i}\n                  >\n                    <BodyTextDnD\n                      bodyIdx={i}\n                      update={update}\n                      formInputId={formInputId}\n                      text={obj}\n                      body={body}\n                      bodyImageFiles={bodyImageFiles}\n                      setBodyImageFiles={setBodyImageFiles}\n                      render={render}\n                      setRender={setRender}\n                      objsToClean={objsToClean}\n                    />\n                  </React.Fragment>\n                )\n            } else {\n              return (\n                <div></div>\n              )\n            }\n        })}\n  \n        <div\n          className='bodyImageOrDescriptionStringContainer'\n        >\n            <BodyImageInput\n              formId={formId}\n              body={body}\n              bodyImageFiles={bodyImageFiles}\n              setBodyImageFiles={setBodyImageFiles}\n              render={render}\n              setRender={setRender}\n              errMessage={errMessage}\n              setErrMessage={setErrMessage}\n            />\n  \n            <DescriptionStringInput\n              body={body}\n              update={update}\n              description={description}\n              setDescription={setDescription}\n              formInputId={formInputId}\n            />\n          </div>\n        </div>\n    )\n  } else {\n    return (\n      <div></div>\n    )\n  }\n  \n}\n\nexport default BodyImageAndText;"]},"metadata":{},"sourceType":"module"}