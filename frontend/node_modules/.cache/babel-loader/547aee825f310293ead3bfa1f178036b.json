{"ast":null,"code":"import React from'react';import{useQuery}from'@apollo/client';import UserResult from'./resultTypes/User_Result';import TagResult from'./resultTypes/Tag_Result';import Queries from'../../graphql/queries';import{jsx as _jsx}from\"react/jsx-runtime\";var SEARCH_USERS_AND_TAGS=Queries.SEARCH_USERS_AND_TAGS;var Results=function Results(_ref){var user=_ref.user,input=_ref.input,active=_ref.active,setActive=_ref.setActive;var _useQuery=useQuery(SEARCH_USERS_AND_TAGS,{variables:{filter:{OR:[{blogName_contains:input},{tag_title_contains:input}]}}}),data=_useQuery.data;if(data){var usersAndTags=data.usersAndTags;if(usersAndTags){if(active){return/*#__PURE__*/_jsx(\"ul\",{className:\"results\",tabIndex:\"0\",children:usersAndTags.map(function(res,i){switch(res.__typename){case'UserType':return/*#__PURE__*/_jsx(\"li\",{className:\"userResult\",children:/*#__PURE__*/_jsx(UserResult,{currentUser:user,user:res,active:active,setActive:setActive})},res._id);case'TagType':return/*#__PURE__*/_jsx(\"li\",{className:\"tagResult\",children:/*#__PURE__*/_jsx(TagResult,{currentUser:user,tag:res,active:active,setActive:setActive})},res._id);default:return/*#__PURE__*/_jsx(\"li\",{});}})});}else{return/*#__PURE__*/_jsx(\"div\",{});}}else{return/*#__PURE__*/_jsx(\"div\",{});}}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default Results;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/search/Results.js"],"names":["React","useQuery","UserResult","TagResult","Queries","SEARCH_USERS_AND_TAGS","Results","user","input","active","setActive","variables","filter","OR","blogName_contains","tag_title_contains","data","usersAndTags","map","res","i","__typename","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,2CACA,GAAQC,CAAAA,qBAAR,CAAkCD,OAAlC,CAAQC,qBAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAKV,IAJJC,CAAAA,IAII,MAJJA,IAII,CAHJC,KAGI,MAHJA,KAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,SACI,MADJA,SACI,CAEJ,cAAeT,QAAQ,CAACI,qBAAD,CACnB,CAAEM,SAAS,CAAE,CACXC,MAAM,CAAE,CAAEC,EAAE,CAAE,CACV,CAAEC,iBAAiB,CAAEN,KAArB,CADU,CAEV,CAAEO,kBAAkB,CAAEP,KAAtB,CAFU,CAAN,CADG,CAAb,CADmB,CAAvB,CAAMQ,IAAN,WAAMA,IAAN,CAWA,GAAIA,IAAJ,CAAU,CAER,GAAQC,CAAAA,YAAR,CAAyBD,IAAzB,CAAQC,YAAR,CAEA,GAAIA,YAAJ,CAAkB,CAChB,GAAIR,MAAJ,CAAY,CACV,mBACE,WACE,SAAS,CAAC,SADZ,CAEE,QAAQ,CAAC,GAFX,UAIGQ,YAAY,CAACC,GAAb,CAAiB,SAACC,GAAD,CAAMC,CAAN,CAAY,CAC5B,OAAOD,GAAG,CAACE,UAAX,EACE,IAAK,UAAL,CACE,mBACE,WACE,SAAS,CAAC,YADZ,uBAIE,KAAC,UAAD,EACE,WAAW,CAAEd,IADf,CAEE,IAAI,CAAEY,GAFR,CAGE,MAAM,CAAEV,MAHV,CAIE,SAAS,CAAEC,SAJb,EAJF,EAEOS,GAAG,CAACG,GAFX,CADF,CAaF,IAAK,SAAL,CACE,mBACE,WACE,SAAS,CAAC,WADZ,uBAIE,KAAC,SAAD,EACE,WAAW,CAAEf,IADf,CAEE,GAAG,CAAEY,GAFP,CAGE,MAAM,CAAEV,MAHV,CAIE,SAAS,CAAEC,SAJb,EAJF,EAEOS,GAAG,CAACG,GAFX,CADF,CAaF,QACE,mBACE,aADF,CA9BJ,CAkCD,CAnCA,CAJH,EADF,CA2CD,CA5CD,IA4CO,CACL,mBACE,cADF,CAID,CACF,CAnDD,IAmDO,CACL,mBACE,cADF,CAID,CACF,CA7DD,IA6DO,CACL,mBACE,cADF,CAID,CACF,CArFD,CAuFA,cAAehB,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport UserResult from './resultTypes/User_Result';\nimport TagResult from './resultTypes/Tag_Result';\n\nimport Queries from '../../graphql/queries';\nconst { SEARCH_USERS_AND_TAGS } = Queries;\n\nconst Results = ({\n  user,\n  input, \n  active, \n  setActive \n}) => {\n  \n  let { data } = useQuery(SEARCH_USERS_AND_TAGS,\n      { variables: {\n        filter: { OR: [\n            { blogName_contains: input },\n            { tag_title_contains: input }\n          ]\n        }\n      }\n    }\n  );\n  \n  if (data) {\n    \n    const { usersAndTags } = data;\n\n    if (usersAndTags) {\n      if (active) {\n        return (\n          <ul\n            className='results'\n            tabIndex='0'\n          >\n            {usersAndTags.map((res, i) => {\n              switch(res.__typename) {\n                case 'UserType':\n                  return(\n                    <li\n                      className='userResult'\n                      key={res._id}\n                    >\n                      <UserResult\n                        currentUser={user}\n                        user={res}\n                        active={active}\n                        setActive={setActive}\n                      />\n                    </li>\n                  )\n                case 'TagType':\n                  return(\n                    <li\n                      className='tagResult'\n                      key={res._id}\n                    >\n                      <TagResult\n                        currentUser={user}\n                        tag={res}\n                        active={active}\n                        setActive={setActive}\n                      />\n                    </li>\n                  )\n                default:\n                  return (\n                    <li></li>\n                  )\n                }\n            })}\n          </ul>\n        )\n      } else {\n        return (\n          <div>\n          </div>\n        )\n      }\n    } else {\n      return (\n        <div>\n        </div>\n      )\n    }\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}