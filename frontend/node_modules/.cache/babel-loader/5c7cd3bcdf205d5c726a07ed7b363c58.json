{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TheoraParser = void 0;\n\nvar initDebug = require(\"debug\");\n\nvar Theora_1 = require(\"./Theora\");\n\nvar debug = initDebug('music-metadata:parser:ogg:theora');\n/**\r\n * Ref:\r\n *   https://theora.org/doc/Theora.pdf\r\n */\n\nvar TheoraParser = /*#__PURE__*/function () {\n  function TheoraParser(metadata, options, tokenizer) {\n    _classCallCheck(this, TheoraParser);\n\n    this.metadata = metadata;\n    this.tokenizer = tokenizer;\n  }\n  /**\r\n   * Vorbis 1 parser\r\n   * @param header Ogg Page Header\r\n   * @param pageData Page data\r\n   */\n\n\n  _createClass(TheoraParser, [{\n    key: \"parsePage\",\n    value: function parsePage(header, pageData) {\n      if (header.headerType.firstPage) {\n        this.parseFirstPage(header, pageData);\n      }\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      debug('flush');\n    }\n  }, {\n    key: \"calculateDuration\",\n    value: function calculateDuration(header) {\n      debug('duration calculation not implemented');\n    }\n    /**\r\n     * Parse first Theora Ogg page. the initial identification header packet\r\n     * @param {IPageHeader} header\r\n     * @param {Buffer} pageData\r\n     */\n\n  }, {\n    key: \"parseFirstPage\",\n    value: function parseFirstPage(header, pageData) {\n      debug('First Ogg/Theora page');\n      this.metadata.setFormat('codec', 'Theora');\n      var idHeader = Theora_1.IdentificationHeader.get(pageData, 0);\n      this.metadata.setFormat('bitrate', idHeader.nombr);\n    }\n  }]);\n\n  return TheoraParser;\n}();\n\nexports.TheoraParser = TheoraParser;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/ogg/theora/TheoraParser.js"],"names":["Object","defineProperty","exports","value","TheoraParser","initDebug","require","Theora_1","debug","metadata","options","tokenizer","header","pageData","headerType","firstPage","parseFirstPage","setFormat","idHeader","IdentificationHeader","get","nombr"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,KAAK,GAAGH,SAAS,CAAC,kCAAD,CAAvB;AACA;AACA;AACA;AACA;;IACMD,Y;AACF,wBAAYK,QAAZ,EAAsBC,OAAtB,EAA+BC,SAA/B,EAA0C;AAAA;;AACtC,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKE,SAAL,GAAiBA,SAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,mBAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACxB,UAAID,MAAM,CAACE,UAAP,CAAkBC,SAAtB,EAAiC;AAC7B,aAAKC,cAAL,CAAoBJ,MAApB,EAA4BC,QAA5B;AACH;AACJ;;;WACD,iBAAQ;AACJL,MAAAA,KAAK,CAAC,OAAD,CAAL;AACH;;;WACD,2BAAkBI,MAAlB,EAA0B;AACtBJ,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeI,MAAf,EAAuBC,QAAvB,EAAiC;AAC7BL,MAAAA,KAAK,CAAC,uBAAD,CAAL;AACA,WAAKC,QAAL,CAAcQ,SAAd,CAAwB,OAAxB,EAAiC,QAAjC;AACA,UAAMC,QAAQ,GAAGX,QAAQ,CAACY,oBAAT,CAA8BC,GAA9B,CAAkCP,QAAlC,EAA4C,CAA5C,CAAjB;AACA,WAAKJ,QAAL,CAAcQ,SAAd,CAAwB,SAAxB,EAAmCC,QAAQ,CAACG,KAA5C;AACH;;;;;;AAELnB,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TheoraParser = void 0;\r\nconst initDebug = require(\"debug\");\r\nconst Theora_1 = require(\"./Theora\");\r\nconst debug = initDebug('music-metadata:parser:ogg:theora');\r\n/**\r\n * Ref:\r\n *   https://theora.org/doc/Theora.pdf\r\n */\r\nclass TheoraParser {\r\n    constructor(metadata, options, tokenizer) {\r\n        this.metadata = metadata;\r\n        this.tokenizer = tokenizer;\r\n    }\r\n    /**\r\n     * Vorbis 1 parser\r\n     * @param header Ogg Page Header\r\n     * @param pageData Page data\r\n     */\r\n    parsePage(header, pageData) {\r\n        if (header.headerType.firstPage) {\r\n            this.parseFirstPage(header, pageData);\r\n        }\r\n    }\r\n    flush() {\r\n        debug('flush');\r\n    }\r\n    calculateDuration(header) {\r\n        debug('duration calculation not implemented');\r\n    }\r\n    /**\r\n     * Parse first Theora Ogg page. the initial identification header packet\r\n     * @param {IPageHeader} header\r\n     * @param {Buffer} pageData\r\n     */\r\n    parseFirstPage(header, pageData) {\r\n        debug('First Ogg/Theora page');\r\n        this.metadata.setFormat('codec', 'Theora');\r\n        const idHeader = Theora_1.IdentificationHeader.get(pageData, 0);\r\n        this.metadata.setFormat('bitrate', idHeader.nombr);\r\n    }\r\n}\r\nexports.TheoraParser = TheoraParser;\r\n"]},"metadata":{},"sourceType":"script"}