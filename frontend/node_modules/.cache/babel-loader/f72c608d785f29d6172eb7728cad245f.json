{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useMutation}from'@apollo/client';import{Link}from'react-router-dom';import Cookies from'js-cookie';import PostShow from'../../../types/showOrUpdate/PostShow';import ConfirmClose from'../../../../nav/Confirm_Close';import DescriptionStringInput from'../forms/inputTypes/Description_String_Input';import Queries from'../../../../../graphql/queries';import Mutations from'../../../../../graphql/mutations';import PostFormUtil from'../../functions/post_form_util.js';import UpdateCacheUtil from'../../functions/update_cache_util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CREATE_REPOST=Mutations.CREATE_REPOST,UPDATE_REPOST=Mutations.UPDATE_REPOST;var FETCH_USER_FEED=Queries.FETCH_USER_FEED;var preventScroll=PostFormUtil.preventScroll,allowScroll=PostFormUtil.allowScroll;var postCreate=UpdateCacheUtil.postCreate;var RepostForm=function RepostForm(_ref){var post=_ref.post,show=_ref.show,repostActive=_ref.repostActive,setRepostActive=_ref.setRepostActive,update=_ref.update,setUpdate=_ref.setUpdate;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),repostCaption=_useState2[0],setRepostCaption=_useState2[1];// let repostTrail = useState([])\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),confirmClose=_useState4[0],setConfirmClose=_useState4[1];useEffect(function(){if(repostActive){preventScroll(repostActive,document);}return function(){allowScroll(document);};});var _useMutation=useMutation(CREATE_REPOST,{update:function update(client,_ref2){var data=_ref2.data;var repost=data.repost;var createQuery=FETCH_USER_FEED;postCreate(client,repost,Cookies.get('currentUser'),createQuery);},onCompleted:function onCompleted(data){resetInputs();setRepostActive(repostActive=false);},onError:function onError(error){console.log(error);}}),_useMutation2=_slicedToArray(_useMutation,1),repost=_useMutation2[0];var _useMutation3=useMutation(UPDATE_REPOST,{onCompleted:function onCompleted(){setUpdate(update=false);},onError:function onError(error){console.log(error);}}),_useMutation4=_slicedToArray(_useMutation3,1),updateRepost=_useMutation4[0];var resetInputs=function resetInputs(){setRepostCaption(repostCaption='');};var handleSubmit=function handleSubmit(){var repostObj={};if(post.kind==='Repost'){repostObj.repostedId=post._id;repostObj.postId=post.post._id;repostObj.postKind=post.post.kind;repostObj.postAuthor=post.post.user._id;}else{repostObj.repostedId=post._id;repostObj.postId=post._id;repostObj.postKind=post.kind;repostObj.postAuthor=post.user._id;}if(update){repostObj.captionId=post.repostTrail[post.repostTrail.length-1]._id;repostObj.update=true;}else{repostObj.update=false;repostObj.updatedRepostTrail=null;}repostObj.previousReposter=post.kind==='Repost'?post.user:null;repostObj.repostCaption=repostCaption;repostObj.user=Cookies.get('currentUser');repostObj.repostedFrom=post.user.blogName;if(update){updateRepost({variables:{repostData:repostObj}});}else{repost({variables:{repostData:repostObj}});}};var handleRepostFormHeader=function handleRepostFormHeader(){if(!update){return/*#__PURE__*/_jsx(\"div\",{className:\"userRepostFormHeader\",children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(Link,{className:\"user\",to:\"/view/blog/\".concat(Cookies.get('currentUser')),children:Cookies.get('currentUser')}),\"\\xA0\",/*#__PURE__*/_jsx(\"img\",{src:\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",alt:\"\"}),/*#__PURE__*/_jsx(Link,{className:\"repostedFrom\",to:\"/view/blog/\".concat(post.user.blogName),children:post.user.blogName})]})});}};var handleConfirmCloseForm=function handleConfirmCloseForm(){if(!update){return/*#__PURE__*/_jsx(ConfirmClose,{update:update,setUpdate:setUpdate,confirmClose:confirmClose,setConfirmClose:setConfirmClose,allowScroll:allowScroll,resetInputs:resetInputs,setFormActive:setRepostActive,formActive:repostActive,repost:true});}};var handleConfirmCloseUpdate=function handleConfirmCloseUpdate(){if(update){return/*#__PURE__*/_jsx(ConfirmClose,{update:update,setUpdate:setUpdate,confirmClose:confirmClose,setConfirmClose:setConfirmClose,allowScroll:allowScroll,resetInputs:resetInputs,setFormActive:setRepostActive,formActive:repostActive,repost:true});}};var handleCaptionInput=function handleCaptionInput(){if(!update){return/*#__PURE__*/_jsx(DescriptionStringInput,{repost:true,description:repostCaption,setDescription:setRepostCaption});}};if(repostActive||update){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:update?'repostModal none':'repostModal',children:[/*#__PURE__*/_jsxs(\"div\",{className:update?'repostForm update':'repostForm',children:[handleRepostFormHeader(),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();handleSubmit();},children:[/*#__PURE__*/_jsx(PostShow,{post:post,repostFormBool:true,update:update,repostCaption:repostCaption,setRepostCaption:setRepostCaption}),handleCaptionInput(),/*#__PURE__*/_jsxs(\"div\",{className:\"closeOrPostContainer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"closeBtn\",type:\"button\",onClick:function onClick(){if(repostCaption||update){setConfirmClose(confirmClose=true);}else{setRepostActive(repostActive=false);}},children:\"Close\"}),handleConfirmCloseForm(),/*#__PURE__*/_jsx(\"button\",{className:\"formSubmitBtn\",type:\"submit\",onClick:function onClick(){if(!update){setPostFormModal(postFormModal=false);}},children:update?'Update':'Repost'})]})]})]}),handleConfirmCloseUpdate()]})});}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default RepostForm;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/social/Repost_Form.js"],"names":["React","useState","useEffect","useMutation","Link","Cookies","PostShow","ConfirmClose","DescriptionStringInput","Queries","Mutations","PostFormUtil","UpdateCacheUtil","CREATE_REPOST","UPDATE_REPOST","FETCH_USER_FEED","preventScroll","allowScroll","postCreate","RepostForm","post","show","repostActive","setRepostActive","update","setUpdate","repostCaption","setRepostCaption","confirmClose","setConfirmClose","document","client","data","repost","createQuery","get","onCompleted","resetInputs","onError","error","console","log","updateRepost","handleSubmit","repostObj","kind","repostedId","_id","postId","postKind","postAuthor","user","captionId","repostTrail","length","updatedRepostTrail","previousReposter","repostedFrom","blogName","variables","repostData","handleRepostFormHeader","handleConfirmCloseForm","handleConfirmCloseUpdate","handleCaptionInput","e","preventDefault","setPostFormModal","postFormModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport PostShow from '../../../types/showOrUpdate/PostShow'\nimport ConfirmClose from '../../../../nav/Confirm_Close';\nimport DescriptionStringInput from '../forms/inputTypes/Description_String_Input';\n\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nimport PostFormUtil from '../../functions/post_form_util.js';\nimport UpdateCacheUtil from '../../functions/update_cache_util.js';\nconst { CREATE_REPOST, UPDATE_REPOST } = Mutations;\nconst { FETCH_USER_FEED } = Queries;\nconst { preventScroll, allowScroll } = PostFormUtil;\nconst { postCreate } = UpdateCacheUtil;\n\nconst RepostForm = ({\n  post,\n  show,\n  repostActive,\n  setRepostActive,\n  update,\n  setUpdate\n}) => {\n  let [repostCaption, setRepostCaption] = useState('');\n  // let repostTrail = useState([])\n  let [confirmClose, setConfirmClose] = useState(false);\n\n  useEffect(() => {\n\n    if (repostActive) {\n      preventScroll(repostActive, document)\n    }\n\n    return () => {\n      allowScroll(document)\n    }\n  })\n  \n  let [repost] = useMutation(CREATE_REPOST, {\n    update(client, { data }) {\n      const { repost } = data;\n      var createQuery = FETCH_USER_FEED\n\n      postCreate(client, repost, Cookies.get('currentUser'), createQuery)\n    },\n    onCompleted(data) {\n      resetInputs();\n      setRepostActive(repostActive = false)\n    },\n    onError(error) {\n      console.log(error)\n    }\n  })\n  \n  let [updateRepost] = useMutation(UPDATE_REPOST, {\n    onCompleted() {\n      setUpdate(update = false)\n    },\n    onError(error) {\n      console.log(error)\n    }\n  })\n  \n  const resetInputs = () => {\n    setRepostCaption(repostCaption = '');\n  }\n\n  const handleSubmit = () => {\n    var repostObj = {}\n\n    if (post.kind === 'Repost') {\n      repostObj.repostedId = post._id\n      repostObj.postId = post.post._id\n      repostObj.postKind = post.post.kind\n      repostObj.postAuthor = post.post.user._id\n    } else {\n      repostObj.repostedId = post._id\n      repostObj.postId = post._id\n      repostObj.postKind = post.kind\n      repostObj.postAuthor = post.user._id\n    }\n\n    if (update) {\n      repostObj.captionId = post.repostTrail[post.repostTrail.length - 1]._id\n      repostObj.update = true\n    } else {\n      repostObj.update = false\n      repostObj.updatedRepostTrail = null\n    }\n    \n    repostObj.previousReposter = post.kind === 'Repost' ? post.user : null\n    repostObj.repostCaption = repostCaption\n    repostObj.user = Cookies.get('currentUser')\n    repostObj.repostedFrom = post.user.blogName\n\n    if (update) {\n      updateRepost({\n        variables: {\n          repostData: repostObj\n        }\n      })\n    } else {\n      repost({\n        variables: {\n          repostData: repostObj\n        }\n      })\n    }\n  }\n\n  const handleRepostFormHeader = () => {\n    if (!update) {\n      return (\n        <div\n          className='userRepostFormHeader'\n        >\n          <span>\n            <Link \n              className='user'\n              to={`/view/blog/${Cookies.get('currentUser')}`}>\n              {Cookies.get('currentUser')}\n            </Link> \n            <img \n              src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n              alt=''\n            />\n            <Link\n              className='repostedFrom'\n              to={`/view/blog/${post.user.blogName}`}\n            >\n              {post.user.blogName}\n            </Link>\n          </span>\n        </div>\n      )\n    }\n  }\n  \n  const handleConfirmCloseForm = () => {\n    if (!update) {\n      return (\n        <ConfirmClose\n          update={update}\n          setUpdate={setUpdate}\n          confirmClose={confirmClose}\n          setConfirmClose={setConfirmClose}\n          allowScroll={allowScroll}\n          resetInputs={resetInputs}\n          setFormActive={setRepostActive}\n          formActive={repostActive}\n          repost={true}\n        />\n      )\n    }\n  }\n\n  const handleConfirmCloseUpdate = () => {\n    if (update) {\n      return (\n        <ConfirmClose\n          update={update}\n          setUpdate={setUpdate}\n          confirmClose={confirmClose}\n          setConfirmClose={setConfirmClose}\n          allowScroll={allowScroll}\n          resetInputs={resetInputs}\n          setFormActive={setRepostActive}\n          formActive={repostActive}\n          repost={true}\n        />\n      )\n    }\n  }\n\n  const handleCaptionInput = () => {\n    if (!update) {\n      return (\n        <DescriptionStringInput\n          repost={true}\n          description={repostCaption}\n          setDescription={setRepostCaption}\n        />\n      )\n    }\n  }\n\n  if (repostActive || update) {\n    return (\n      <React.Fragment>\n        <div \n          className={update ? 'repostModal none' : 'repostModal'}\n        >\n          <div\n            className={update ? 'repostForm update' : 'repostForm'}\n          >\n\n            {handleRepostFormHeader()}\n\n            <form\n              onSubmit={e => {\n                e.preventDefault();\n                handleSubmit()\n              }}\n            >\n            \n              <PostShow\n                post={post}\n                repostFormBool={true}\n                update={update}\n                repostCaption={repostCaption}\n                setRepostCaption={setRepostCaption}\n              />\n\n              {handleCaptionInput()}\n\n              <div\n                className='closeOrPostContainer'\n              >\n                <button\n                  className='closeBtn'\n                  type='button'\n                  onClick={() => {\n                    if (repostCaption || update) {\n                      setConfirmClose(confirmClose = true)\n                    } else {\n                      setRepostActive(repostActive = false)\n                    }\n                  }} \n                >\n                  Close\n                </button>\n              \n                {handleConfirmCloseForm()}\n\n                <button\n                  className='formSubmitBtn'\n                  type='submit'\n                  onClick={() => {\n\n                    if (!update) {\n                      setPostFormModal(postFormModal = false)\n                    }\n                  }}\n                >\n                  {update ? 'Update' : 'Repost'}\n                </button>\n              </div>\n            </form>\n          </div>\n          {handleConfirmCloseUpdate()}\n        </div>\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div></div>\n    )\n  }\n}\n\nexport default RepostForm;"]},"metadata":{},"sourceType":"module"}