{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VorbisTagMapper = void 0;\n\nvar GenericTagMapper_1 = require(\"../../common/GenericTagMapper\");\n/**\r\n * Vorbis tag mappings\r\n *\r\n * Mapping from native header format to one or possibly more 'common' entries\r\n * The common entries aim to read the same information from different media files\r\n * independent of the underlying format\r\n */\n\n\nvar vorbisTagMap = {\n  TITLE: 'title',\n  ARTIST: 'artist',\n  ARTISTS: 'artists',\n  ALBUMARTIST: 'albumartist',\n  'ALBUM ARTIST': 'albumartist',\n  ALBUM: 'album',\n  DATE: 'date',\n  ORIGINALDATE: 'originaldate',\n  ORIGINALYEAR: 'originalyear',\n  COMMENT: 'comment',\n  TRACKNUMBER: 'track',\n  DISCNUMBER: 'disk',\n  GENRE: 'genre',\n  METADATA_BLOCK_PICTURE: 'picture',\n  COMPOSER: 'composer',\n  LYRICS: 'lyrics',\n  ALBUMSORT: 'albumsort',\n  TITLESORT: 'titlesort',\n  WORK: 'work',\n  ARTISTSORT: 'artistsort',\n  ALBUMARTISTSORT: 'albumartistsort',\n  COMPOSERSORT: 'composersort',\n  LYRICIST: 'lyricist',\n  WRITER: 'writer',\n  CONDUCTOR: 'conductor',\n  // 'PERFORMER=artist (instrument)': 'performer:instrument', // ToDo\n  REMIXER: 'remixer',\n  ARRANGER: 'arranger',\n  ENGINEER: 'engineer',\n  PRODUCER: 'producer',\n  DJMIXER: 'djmixer',\n  MIXER: 'mixer',\n  LABEL: 'label',\n  GROUPING: 'grouping',\n  SUBTITLE: 'subtitle',\n  DISCSUBTITLE: 'discsubtitle',\n  TRACKTOTAL: 'totaltracks',\n  DISCTOTAL: 'totaldiscs',\n  COMPILATION: 'compilation',\n  RATING: 'rating',\n  BPM: 'bpm',\n  KEY: 'key',\n  MOOD: 'mood',\n  MEDIA: 'media',\n  CATALOGNUMBER: 'catalognumber',\n  RELEASESTATUS: 'releasestatus',\n  RELEASETYPE: 'releasetype',\n  RELEASECOUNTRY: 'releasecountry',\n  SCRIPT: 'script',\n  LANGUAGE: 'language',\n  COPYRIGHT: 'copyright',\n  LICENSE: 'license',\n  ENCODEDBY: 'encodedby',\n  ENCODERSETTINGS: 'encodersettings',\n  BARCODE: 'barcode',\n  ISRC: 'isrc',\n  ASIN: 'asin',\n  MUSICBRAINZ_TRACKID: 'musicbrainz_recordingid',\n  MUSICBRAINZ_RELEASETRACKID: 'musicbrainz_trackid',\n  MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n  MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n  MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n  MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n  MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n  MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n  MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n  ACOUSTID_ID: 'acoustid_id',\n  ACOUSTID_ID_FINGERPRINT: 'acoustid_fingerprint',\n  MUSICIP_PUID: 'musicip_puid',\n  // 'FINGERPRINT=MusicMagic Fingerprint {fingerprint}': 'musicip_fingerprint', // ToDo\n  WEBSITE: 'website',\n  NOTES: 'notes',\n  TOTALTRACKS: 'totaltracks',\n  TOTALDISCS: 'totaldiscs',\n  // Discogs\n  DISCOGS_ARTIST_ID: 'discogs_artist_id',\n  DISCOGS_ARTISTS: 'artists',\n  DISCOGS_ARTIST_NAME: 'artists',\n  DISCOGS_ALBUM_ARTISTS: 'albumartist',\n  DISCOGS_CATALOG: 'catalognumber',\n  DISCOGS_COUNTRY: 'releasecountry',\n  DISCOGS_DATE: 'originaldate',\n  DISCOGS_LABEL: 'label',\n  DISCOGS_LABEL_ID: 'discogs_label_id',\n  DISCOGS_MASTER_RELEASE_ID: 'discogs_master_release_id',\n  DISCOGS_RATING: 'discogs_rating',\n  DISCOGS_RELEASED: 'date',\n  DISCOGS_RELEASE_ID: 'discogs_release_id',\n  DISCOGS_VOTES: 'discogs_votes',\n  CATALOGID: 'catalognumber',\n  STYLE: 'genre',\n  //\n  REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n  REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n  REPLAYGAIN_ALBUM_GAIN: 'replaygain_album_gain',\n  REPLAYGAIN_ALBUM_PEAK: 'replaygain_album_peak',\n  // To Sure if these (REPLAYGAIN_MINMAX, REPLAYGAIN_ALBUM_MINMAX & REPLAYGAIN_UNDO) are used for Vorbis:\n  REPLAYGAIN_MINMAX: 'replaygain_track_minmax',\n  REPLAYGAIN_ALBUM_MINMAX: 'replaygain_album_minmax',\n  REPLAYGAIN_UNDO: 'replaygain_undo'\n};\n\nvar VorbisTagMapper = /*#__PURE__*/function (_GenericTagMapper_1$C) {\n  _inherits(VorbisTagMapper, _GenericTagMapper_1$C);\n\n  var _super = _createSuper(VorbisTagMapper);\n\n  function VorbisTagMapper() {\n    _classCallCheck(this, VorbisTagMapper);\n\n    return _super.call(this, ['vorbis'], vorbisTagMap);\n  }\n\n  _createClass(VorbisTagMapper, [{\n    key: \"postMap\",\n    value: function postMap(tag) {\n      if (tag.id.indexOf('RATING:') === 0) {\n        var keys = tag.id.split(':');\n        tag.value = VorbisTagMapper.toRating(keys[1], tag.value);\n        tag.id = keys[0];\n      }\n    }\n  }], [{\n    key: \"toRating\",\n    value: function toRating(email, rating) {\n      return {\n        source: email ? email.toLowerCase() : email,\n        rating: parseFloat(rating) * GenericTagMapper_1.CommonTagMapper.maxRatingScore\n      };\n    }\n  }]);\n\n  return VorbisTagMapper;\n}(GenericTagMapper_1.CommonTagMapper);\n\nexports.VorbisTagMapper = VorbisTagMapper;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js"],"names":["Object","defineProperty","exports","value","VorbisTagMapper","GenericTagMapper_1","require","vorbisTagMap","TITLE","ARTIST","ARTISTS","ALBUMARTIST","ALBUM","DATE","ORIGINALDATE","ORIGINALYEAR","COMMENT","TRACKNUMBER","DISCNUMBER","GENRE","METADATA_BLOCK_PICTURE","COMPOSER","LYRICS","ALBUMSORT","TITLESORT","WORK","ARTISTSORT","ALBUMARTISTSORT","COMPOSERSORT","LYRICIST","WRITER","CONDUCTOR","REMIXER","ARRANGER","ENGINEER","PRODUCER","DJMIXER","MIXER","LABEL","GROUPING","SUBTITLE","DISCSUBTITLE","TRACKTOTAL","DISCTOTAL","COMPILATION","RATING","BPM","KEY","MOOD","MEDIA","CATALOGNUMBER","RELEASESTATUS","RELEASETYPE","RELEASECOUNTRY","SCRIPT","LANGUAGE","COPYRIGHT","LICENSE","ENCODEDBY","ENCODERSETTINGS","BARCODE","ISRC","ASIN","MUSICBRAINZ_TRACKID","MUSICBRAINZ_RELEASETRACKID","MUSICBRAINZ_ALBUMID","MUSICBRAINZ_ARTISTID","MUSICBRAINZ_ALBUMARTISTID","MUSICBRAINZ_RELEASEGROUPID","MUSICBRAINZ_WORKID","MUSICBRAINZ_TRMID","MUSICBRAINZ_DISCID","ACOUSTID_ID","ACOUSTID_ID_FINGERPRINT","MUSICIP_PUID","WEBSITE","NOTES","TOTALTRACKS","TOTALDISCS","DISCOGS_ARTIST_ID","DISCOGS_ARTISTS","DISCOGS_ARTIST_NAME","DISCOGS_ALBUM_ARTISTS","DISCOGS_CATALOG","DISCOGS_COUNTRY","DISCOGS_DATE","DISCOGS_LABEL","DISCOGS_LABEL_ID","DISCOGS_MASTER_RELEASE_ID","DISCOGS_RATING","DISCOGS_RELEASED","DISCOGS_RELEASE_ID","DISCOGS_VOTES","CATALOGID","STYLE","REPLAYGAIN_TRACK_GAIN","REPLAYGAIN_TRACK_PEAK","REPLAYGAIN_ALBUM_GAIN","REPLAYGAIN_ALBUM_PEAK","REPLAYGAIN_MINMAX","REPLAYGAIN_ALBUM_MINMAX","REPLAYGAIN_UNDO","tag","id","indexOf","keys","split","toRating","email","rating","source","toLowerCase","parseFloat","CommonTagMapper","maxRatingScore"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAMC,kBAAkB,GAAGC,OAAO,CAAC,+BAAD,CAAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,OADU;AAEjBC,EAAAA,MAAM,EAAE,QAFS;AAGjBC,EAAAA,OAAO,EAAE,SAHQ;AAIjBC,EAAAA,WAAW,EAAE,aAJI;AAKjB,kBAAgB,aALC;AAMjBC,EAAAA,KAAK,EAAE,OANU;AAOjBC,EAAAA,IAAI,EAAE,MAPW;AAQjBC,EAAAA,YAAY,EAAE,cARG;AASjBC,EAAAA,YAAY,EAAE,cATG;AAUjBC,EAAAA,OAAO,EAAE,SAVQ;AAWjBC,EAAAA,WAAW,EAAE,OAXI;AAYjBC,EAAAA,UAAU,EAAE,MAZK;AAajBC,EAAAA,KAAK,EAAE,OAbU;AAcjBC,EAAAA,sBAAsB,EAAE,SAdP;AAejBC,EAAAA,QAAQ,EAAE,UAfO;AAgBjBC,EAAAA,MAAM,EAAE,QAhBS;AAiBjBC,EAAAA,SAAS,EAAE,WAjBM;AAkBjBC,EAAAA,SAAS,EAAE,WAlBM;AAmBjBC,EAAAA,IAAI,EAAE,MAnBW;AAoBjBC,EAAAA,UAAU,EAAE,YApBK;AAqBjBC,EAAAA,eAAe,EAAE,iBArBA;AAsBjBC,EAAAA,YAAY,EAAE,cAtBG;AAuBjBC,EAAAA,QAAQ,EAAE,UAvBO;AAwBjBC,EAAAA,MAAM,EAAE,QAxBS;AAyBjBC,EAAAA,SAAS,EAAE,WAzBM;AA0BjB;AACAC,EAAAA,OAAO,EAAE,SA3BQ;AA4BjBC,EAAAA,QAAQ,EAAE,UA5BO;AA6BjBC,EAAAA,QAAQ,EAAE,UA7BO;AA8BjBC,EAAAA,QAAQ,EAAE,UA9BO;AA+BjBC,EAAAA,OAAO,EAAE,SA/BQ;AAgCjBC,EAAAA,KAAK,EAAE,OAhCU;AAiCjBC,EAAAA,KAAK,EAAE,OAjCU;AAkCjBC,EAAAA,QAAQ,EAAE,UAlCO;AAmCjBC,EAAAA,QAAQ,EAAE,UAnCO;AAoCjBC,EAAAA,YAAY,EAAE,cApCG;AAqCjBC,EAAAA,UAAU,EAAE,aArCK;AAsCjBC,EAAAA,SAAS,EAAE,YAtCM;AAuCjBC,EAAAA,WAAW,EAAE,aAvCI;AAwCjBC,EAAAA,MAAM,EAAE,QAxCS;AAyCjBC,EAAAA,GAAG,EAAE,KAzCY;AA0CjBC,EAAAA,GAAG,EAAE,KA1CY;AA2CjBC,EAAAA,IAAI,EAAE,MA3CW;AA4CjBC,EAAAA,KAAK,EAAE,OA5CU;AA6CjBC,EAAAA,aAAa,EAAE,eA7CE;AA8CjBC,EAAAA,aAAa,EAAE,eA9CE;AA+CjBC,EAAAA,WAAW,EAAE,aA/CI;AAgDjBC,EAAAA,cAAc,EAAE,gBAhDC;AAiDjBC,EAAAA,MAAM,EAAE,QAjDS;AAkDjBC,EAAAA,QAAQ,EAAE,UAlDO;AAmDjBC,EAAAA,SAAS,EAAE,WAnDM;AAoDjBC,EAAAA,OAAO,EAAE,SApDQ;AAqDjBC,EAAAA,SAAS,EAAE,WArDM;AAsDjBC,EAAAA,eAAe,EAAE,iBAtDA;AAuDjBC,EAAAA,OAAO,EAAE,SAvDQ;AAwDjBC,EAAAA,IAAI,EAAE,MAxDW;AAyDjBC,EAAAA,IAAI,EAAE,MAzDW;AA0DjBC,EAAAA,mBAAmB,EAAE,yBA1DJ;AA2DjBC,EAAAA,0BAA0B,EAAE,qBA3DX;AA4DjBC,EAAAA,mBAAmB,EAAE,qBA5DJ;AA6DjBC,EAAAA,oBAAoB,EAAE,sBA7DL;AA8DjBC,EAAAA,yBAAyB,EAAE,2BA9DV;AA+DjBC,EAAAA,0BAA0B,EAAE,4BA/DX;AAgEjBC,EAAAA,kBAAkB,EAAE,oBAhEH;AAiEjBC,EAAAA,iBAAiB,EAAE,mBAjEF;AAkEjBC,EAAAA,kBAAkB,EAAE,oBAlEH;AAmEjBC,EAAAA,WAAW,EAAE,aAnEI;AAoEjBC,EAAAA,uBAAuB,EAAE,sBApER;AAqEjBC,EAAAA,YAAY,EAAE,cArEG;AAsEjB;AACAC,EAAAA,OAAO,EAAE,SAvEQ;AAwEjBC,EAAAA,KAAK,EAAE,OAxEU;AAyEjBC,EAAAA,WAAW,EAAE,aAzEI;AA0EjBC,EAAAA,UAAU,EAAE,YA1EK;AA2EjB;AACAC,EAAAA,iBAAiB,EAAE,mBA5EF;AA6EjBC,EAAAA,eAAe,EAAE,SA7EA;AA8EjBC,EAAAA,mBAAmB,EAAE,SA9EJ;AA+EjBC,EAAAA,qBAAqB,EAAE,aA/EN;AAgFjBC,EAAAA,eAAe,EAAE,eAhFA;AAiFjBC,EAAAA,eAAe,EAAE,gBAjFA;AAkFjBC,EAAAA,YAAY,EAAE,cAlFG;AAmFjBC,EAAAA,aAAa,EAAE,OAnFE;AAoFjBC,EAAAA,gBAAgB,EAAE,kBApFD;AAqFjBC,EAAAA,yBAAyB,EAAE,2BArFV;AAsFjBC,EAAAA,cAAc,EAAE,gBAtFC;AAuFjBC,EAAAA,gBAAgB,EAAE,MAvFD;AAwFjBC,EAAAA,kBAAkB,EAAE,oBAxFH;AAyFjBC,EAAAA,aAAa,EAAE,eAzFE;AA0FjBC,EAAAA,SAAS,EAAE,eA1FM;AA2FjBC,EAAAA,KAAK,EAAE,OA3FU;AA4FjB;AACAC,EAAAA,qBAAqB,EAAE,uBA7FN;AA8FjBC,EAAAA,qBAAqB,EAAE,uBA9FN;AA+FjBC,EAAAA,qBAAqB,EAAE,uBA/FN;AAgGjBC,EAAAA,qBAAqB,EAAE,uBAhGN;AAiGjB;AACAC,EAAAA,iBAAiB,EAAE,yBAlGF;AAmGjBC,EAAAA,uBAAuB,EAAE,yBAnGR;AAoGjBC,EAAAA,eAAe,EAAE;AApGA,CAArB;;IAsGMjG,e;;;;;AAOF,6BAAc;AAAA;;AAAA,6BACJ,CAAC,QAAD,CADI,EACQG,YADR;AAEb;;;;WACD,iBAAQ+F,GAAR,EAAa;AACT,UAAIA,GAAG,CAACC,EAAJ,CAAOC,OAAP,CAAe,SAAf,MAA8B,CAAlC,EAAqC;AACjC,YAAMC,IAAI,GAAGH,GAAG,CAACC,EAAJ,CAAOG,KAAP,CAAa,GAAb,CAAb;AACAJ,QAAAA,GAAG,CAACnG,KAAJ,GAAYC,eAAe,CAACuG,QAAhB,CAAyBF,IAAI,CAAC,CAAD,CAA7B,EAAkCH,GAAG,CAACnG,KAAtC,CAAZ;AACAmG,QAAAA,GAAG,CAACC,EAAJ,GAASE,IAAI,CAAC,CAAD,CAAb;AACH;AACJ;;;WAfD,kBAAgBG,KAAhB,EAAuBC,MAAvB,EAA+B;AAC3B,aAAO;AACHC,QAAAA,MAAM,EAAEF,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAH,GAAyBH,KADnC;AAEHC,QAAAA,MAAM,EAAEG,UAAU,CAACH,MAAD,CAAV,GAAqBxG,kBAAkB,CAAC4G,eAAnB,CAAmCC;AAF7D,OAAP;AAIH;;;;EANyB7G,kBAAkB,CAAC4G,e;;AAkBjD/G,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.VorbisTagMapper = void 0;\r\nconst GenericTagMapper_1 = require(\"../../common/GenericTagMapper\");\r\n/**\r\n * Vorbis tag mappings\r\n *\r\n * Mapping from native header format to one or possibly more 'common' entries\r\n * The common entries aim to read the same information from different media files\r\n * independent of the underlying format\r\n */\r\nconst vorbisTagMap = {\r\n    TITLE: 'title',\r\n    ARTIST: 'artist',\r\n    ARTISTS: 'artists',\r\n    ALBUMARTIST: 'albumartist',\r\n    'ALBUM ARTIST': 'albumartist',\r\n    ALBUM: 'album',\r\n    DATE: 'date',\r\n    ORIGINALDATE: 'originaldate',\r\n    ORIGINALYEAR: 'originalyear',\r\n    COMMENT: 'comment',\r\n    TRACKNUMBER: 'track',\r\n    DISCNUMBER: 'disk',\r\n    GENRE: 'genre',\r\n    METADATA_BLOCK_PICTURE: 'picture',\r\n    COMPOSER: 'composer',\r\n    LYRICS: 'lyrics',\r\n    ALBUMSORT: 'albumsort',\r\n    TITLESORT: 'titlesort',\r\n    WORK: 'work',\r\n    ARTISTSORT: 'artistsort',\r\n    ALBUMARTISTSORT: 'albumartistsort',\r\n    COMPOSERSORT: 'composersort',\r\n    LYRICIST: 'lyricist',\r\n    WRITER: 'writer',\r\n    CONDUCTOR: 'conductor',\r\n    // 'PERFORMER=artist (instrument)': 'performer:instrument', // ToDo\r\n    REMIXER: 'remixer',\r\n    ARRANGER: 'arranger',\r\n    ENGINEER: 'engineer',\r\n    PRODUCER: 'producer',\r\n    DJMIXER: 'djmixer',\r\n    MIXER: 'mixer',\r\n    LABEL: 'label',\r\n    GROUPING: 'grouping',\r\n    SUBTITLE: 'subtitle',\r\n    DISCSUBTITLE: 'discsubtitle',\r\n    TRACKTOTAL: 'totaltracks',\r\n    DISCTOTAL: 'totaldiscs',\r\n    COMPILATION: 'compilation',\r\n    RATING: 'rating',\r\n    BPM: 'bpm',\r\n    KEY: 'key',\r\n    MOOD: 'mood',\r\n    MEDIA: 'media',\r\n    CATALOGNUMBER: 'catalognumber',\r\n    RELEASESTATUS: 'releasestatus',\r\n    RELEASETYPE: 'releasetype',\r\n    RELEASECOUNTRY: 'releasecountry',\r\n    SCRIPT: 'script',\r\n    LANGUAGE: 'language',\r\n    COPYRIGHT: 'copyright',\r\n    LICENSE: 'license',\r\n    ENCODEDBY: 'encodedby',\r\n    ENCODERSETTINGS: 'encodersettings',\r\n    BARCODE: 'barcode',\r\n    ISRC: 'isrc',\r\n    ASIN: 'asin',\r\n    MUSICBRAINZ_TRACKID: 'musicbrainz_recordingid',\r\n    MUSICBRAINZ_RELEASETRACKID: 'musicbrainz_trackid',\r\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\r\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\r\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\r\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\r\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\r\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\r\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\r\n    ACOUSTID_ID: 'acoustid_id',\r\n    ACOUSTID_ID_FINGERPRINT: 'acoustid_fingerprint',\r\n    MUSICIP_PUID: 'musicip_puid',\r\n    // 'FINGERPRINT=MusicMagic Fingerprint {fingerprint}': 'musicip_fingerprint', // ToDo\r\n    WEBSITE: 'website',\r\n    NOTES: 'notes',\r\n    TOTALTRACKS: 'totaltracks',\r\n    TOTALDISCS: 'totaldiscs',\r\n    // Discogs\r\n    DISCOGS_ARTIST_ID: 'discogs_artist_id',\r\n    DISCOGS_ARTISTS: 'artists',\r\n    DISCOGS_ARTIST_NAME: 'artists',\r\n    DISCOGS_ALBUM_ARTISTS: 'albumartist',\r\n    DISCOGS_CATALOG: 'catalognumber',\r\n    DISCOGS_COUNTRY: 'releasecountry',\r\n    DISCOGS_DATE: 'originaldate',\r\n    DISCOGS_LABEL: 'label',\r\n    DISCOGS_LABEL_ID: 'discogs_label_id',\r\n    DISCOGS_MASTER_RELEASE_ID: 'discogs_master_release_id',\r\n    DISCOGS_RATING: 'discogs_rating',\r\n    DISCOGS_RELEASED: 'date',\r\n    DISCOGS_RELEASE_ID: 'discogs_release_id',\r\n    DISCOGS_VOTES: 'discogs_votes',\r\n    CATALOGID: 'catalognumber',\r\n    STYLE: 'genre',\r\n    //\r\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\r\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\r\n    REPLAYGAIN_ALBUM_GAIN: 'replaygain_album_gain',\r\n    REPLAYGAIN_ALBUM_PEAK: 'replaygain_album_peak',\r\n    // To Sure if these (REPLAYGAIN_MINMAX, REPLAYGAIN_ALBUM_MINMAX & REPLAYGAIN_UNDO) are used for Vorbis:\r\n    REPLAYGAIN_MINMAX: 'replaygain_track_minmax',\r\n    REPLAYGAIN_ALBUM_MINMAX: 'replaygain_album_minmax',\r\n    REPLAYGAIN_UNDO: 'replaygain_undo'\r\n};\r\nclass VorbisTagMapper extends GenericTagMapper_1.CommonTagMapper {\r\n    static toRating(email, rating) {\r\n        return {\r\n            source: email ? email.toLowerCase() : email,\r\n            rating: parseFloat(rating) * GenericTagMapper_1.CommonTagMapper.maxRatingScore\r\n        };\r\n    }\r\n    constructor() {\r\n        super(['vorbis'], vorbisTagMap);\r\n    }\r\n    postMap(tag) {\r\n        if (tag.id.indexOf('RATING:') === 0) {\r\n            const keys = tag.id.split(':');\r\n            tag.value = VorbisTagMapper.toRating(keys[1], tag.value);\r\n            tag.id = keys[0];\r\n        }\r\n    }\r\n}\r\nexports.VorbisTagMapper = VorbisTagMapper;\r\n"]},"metadata":{},"sourceType":"script"}