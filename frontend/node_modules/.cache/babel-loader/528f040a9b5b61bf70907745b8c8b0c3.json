{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/Tags.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport MatchedTagResults from './Matched_Tag_Results';\nimport PostFormUtil from '../../functions/post_form_util.js';\nimport PostUpdateUtil from '../../functions/post_update_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  pushTags\n} = PostUpdateUtil;\nconst {\n  handleTagInput,\n  removeTag\n} = PostFormUtil;\n\nconst Tags = ({\n  post,\n  tags,\n  setTags,\n  tag,\n  setTag\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (post) {\n      pushTags(post.tagIds, tags, setTags);\n    } //eslint-disable-next-line\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagsContainer\",\n    children: [tags.map((tag, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagDiv\",\n        children: [tag, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"removeTag\",\n          onClick: () => {\n            removeTag(i, tags, setTags);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagInputAndDDContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: tag,\n        placeholder: \"#tags\",\n        onChange: e => setTag(tag = e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && tag || e.key === '#' && tag) {\n            handleTagInput(tag, setTag, tags, setTags);\n          }\n        },\n        onClick: e => {\n          if (tag) {\n            handleTagInput(tag, setTag, tags, setTags);\n          }\n        },\n        onBlur: e => {\n          if (e && e.relatedTarget) {\n            var formClasses = [...e.relatedTarget.classList];\n\n            if ((formClasses[0] === 'browserPostsNav' || formClasses.includes('ck') || formClasses[0] === 'titleInput' || !e.relatedTarget) && tag) {\n              handleTagInput(tag, setTag, tags, setTags);\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MatchedTagResults, {\n        query: tag,\n        tags: tags,\n        setTags: setTags,\n        tag: tag,\n        setTag: setTag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tags, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Tags;\nexport default Tags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/Tags.js"],"names":["React","useEffect","MatchedTagResults","PostFormUtil","PostUpdateUtil","pushTags","handleTagInput","removeTag","Tags","post","tags","setTags","tag","setTag","tagIds","map","i","e","target","value","key","relatedTarget","formClasses","classList","includes"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport MatchedTagResults from './Matched_Tag_Results'\n\nimport PostFormUtil from '../../functions/post_form_util.js'\nimport PostUpdateUtil from '../../functions/post_update_util.js'\nconst { pushTags } = PostUpdateUtil;\nconst { handleTagInput, removeTag } = PostFormUtil;\n\nconst Tags = ({\n  post, \n  tags, \n  setTags,\n  tag, \n  setTag\n}) => {\n\n  useEffect(() => {\n    if (post) {\n      pushTags(post.tagIds, tags, setTags)\n    }  \n    //eslint-disable-next-line\n  }, [])\n\n  return (\n    <div\n      className='tagsContainer'\n    >\n      {tags.map((tag, i) => {\n        return (\n          <div\n            className='tagDiv'\n            key={i}\n          >\n            {tag}\n            <span\n              className='removeTag'\n              onClick={() => {\n                removeTag(i, tags, setTags)\n              }}\n            >\n              <span>x</span>\n            </span>\n          </div>\n        )\n      })}\n\n      <div\n        className='tagInputAndDDContainer'\n      >\n        <input\n          type='text'\n          value={tag}\n          placeholder='#tags'\n          onChange={e => setTag(tag = e.target.value)}\n          onKeyDown={e => {\n            if (\n              (e.key === 'Enter' && tag) ||\n              (e.key === '#' && tag)\n            ) {\n              handleTagInput(\n                  tag, setTag,\n                  tags, setTags\n                )\n              }\n            }\n          }\n          onClick={e => {\n            if (tag) {\n              handleTagInput(\n                tag, setTag,\n                tags, setTags\n              )\n            }\n          }}\n          onBlur={e => {\n            if (e && e.relatedTarget) {\n              var formClasses = [...e.relatedTarget.classList]\n\n              if (\n                (formClasses[0] === 'browserPostsNav' ||\n                formClasses.includes('ck') ||\n                formClasses[0] === 'titleInput' ||\n                !e.relatedTarget) &&\n                tag\n              ) {\n                handleTagInput(\n                  tag, setTag,\n                  tags, setTags\n                )\n              }\n            }\n          }}\n        />\n\n        <MatchedTagResults \n          query={tag}\n          tags={tags}\n          setTags={setTags}\n          tag={tag}\n          setTag={setTag}\n        />\n      </div>\n    </div>\n  )\n\n}\n\nexport default Tags;"]},"metadata":{},"sourceType":"module"}