{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/dragAndDrop/Body_Text_DnD.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useApolloClient } from '@apollo/client';\nimport randomstring from 'randomstring';\nimport DOMPurify from 'dompurify';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Queries from '../../../../../../graphql/queries.js';\nimport PostFormUtil from '../../../functions/post_form_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_USERS_FOR_MENTIONS\n} = Queries;\nconst {\n  removeBodyObj,\n  drag,\n  onDropBody,\n  allowDrop,\n  MentionCustomization\n} = PostFormUtil;\n\nconst BodyTextDnD = ({\n  bodyIdx,\n  text,\n  body,\n  bodyImageFiles,\n  setBodyImageFiles,\n  objsToClean,\n  render,\n  setRender\n}) => {\n  _s();\n\n  const client = useApolloClient();\n  const editorConfiguration = {\n    extraPlugins: [MentionCustomization],\n    balloonToolbar: ['bold', 'italic', 'underline', 'link', 'blockQuote', 'undo', 'redo'],\n    mention: {\n      feeds: [{\n        marker: '@',\n        feed: query => {\n          return client.query({\n            query: FETCH_USERS_FOR_MENTIONS,\n            variables: {\n              filter: query\n            }\n          }).then(res => {\n            return res.data.fetchUsersForMentions.map(u => ({\n              id: '@' + u.blogName,\n              actualId: randomstring.generate({\n                length: 12,\n                charset: 'alphabetic'\n              })\n            }));\n          });\n        },\n        minimumCharacters: 1\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: text.uniqId,\n    className: \"draggable textContentContainer\",\n    onDrop: e => {\n      onDropBody(e, bodyIdx, body, bodyImageFiles);\n      setRender(render + 1);\n    },\n    onDragStart: e => drag(e, bodyIdx, JSON.stringify(text)),\n    onDragOver: e => allowDrop(e),\n    draggable: \"true\",\n    children: /*#__PURE__*/_jsxDEV(CKEditor, {\n      id: `${text.uniqId}`,\n      editor: Editor,\n      config: editorConfiguration,\n      data: DOMPurify.sanitize(text.content),\n      onChange: (e, editor) => {\n        body.current[bodyIdx].content = editor.getData();\n      },\n      onBlur: () => {\n        if (body.current[bodyIdx].content === '') {\n          removeBodyObj(text.srcType, body, setBodyImageFiles, bodyImageFiles, objsToClean, bodyIdx);\n          setRender(render + 1);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BodyTextDnD, \"bRce2qNAOkF4RDs+MXWx0he9v30=\", false, function () {\n  return [useApolloClient];\n});\n\n_c = BodyTextDnD;\nexport default BodyTextDnD;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyTextDnD\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/dragAndDrop/Body_Text_DnD.js"],"names":["React","useApolloClient","randomstring","DOMPurify","Editor","CKEditor","Queries","PostFormUtil","FETCH_USERS_FOR_MENTIONS","removeBodyObj","drag","onDropBody","allowDrop","MentionCustomization","BodyTextDnD","bodyIdx","text","body","bodyImageFiles","setBodyImageFiles","objsToClean","render","setRender","client","editorConfiguration","extraPlugins","balloonToolbar","mention","feeds","marker","feed","query","variables","filter","then","res","data","fetchUsersForMentions","map","u","id","blogName","actualId","generate","length","charset","minimumCharacters","uniqId","e","JSON","stringify","sanitize","content","editor","current","getData","srcType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useApolloClient } from '@apollo/client';\nimport randomstring from 'randomstring';\nimport DOMPurify from 'dompurify';\n\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\n\nimport Queries from '../../../../../../graphql/queries.js';\nimport PostFormUtil from '../../../functions/post_form_util.js';\nconst { FETCH_USERS_FOR_MENTIONS } = Queries;\nconst { removeBodyObj, drag, \n        onDropBody, allowDrop, MentionCustomization } = PostFormUtil;\n\nconst BodyTextDnD = ({\n  bodyIdx,\n  text, body,\n  bodyImageFiles,\n  setBodyImageFiles,\n  objsToClean,\n  render, setRender,\n}) => {\n  const client = useApolloClient();\n\n  const editorConfiguration = {\n    extraPlugins: [MentionCustomization],\n    balloonToolbar: [\n      'bold',\n      'italic',\n      'underline',\n      'link',\n      'blockQuote',\n      'undo',\n      'redo'\n    ],\n    mention: {\n      feeds: [\n        {\n          marker: '@',\n          feed: query => {\n            return client.query({\n              query: FETCH_USERS_FOR_MENTIONS,\n              variables: {\n                filter: query\n              }\n            }).then(res => {\n              return res.data.fetchUsersForMentions.map(u => ({\n                id: '@' + u.blogName,\n                actualId: randomstring.generate({\n                  length: 12,\n                  charset: 'alphabetic'\n                })\n              }))\n            })\n          },\n          minimumCharacters: 1\n        }\n      ]\n    }\n  }\n\n  return (\n    <div\n      id={text.uniqId}\n      className='draggable textContentContainer'\n      onDrop={e => {\n        onDropBody(\n          e, bodyIdx, body,\n          bodyImageFiles,\n        )\n        \n        setRender(render + 1)\n      }}\n      onDragStart={e => drag(e, bodyIdx, JSON.stringify(text))}\n      onDragOver={e => allowDrop(e)}\n      draggable='true'\n    >\n      <CKEditor\n        id={`${text.uniqId}`}\n        editor={ Editor }\n        config={ editorConfiguration }\n        data={DOMPurify.sanitize(text.content)}\n        onChange={(e, editor) => {\n          body.current[bodyIdx].content = editor.getData()\n        }}\n        onBlur={() => {\n          if (body.current[bodyIdx].content === '') {\n            removeBodyObj(\n              text.srcType, body,\n              setBodyImageFiles,\n              bodyImageFiles,\n              objsToClean, bodyIdx\n            )\n\n            setRender(render + 1)\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BodyTextDnD;"]},"metadata":{},"sourceType":"module"}