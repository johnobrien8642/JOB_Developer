{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/forms/inputTypes/Audio_File_Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AudioPlayer from 'react-h5-audio-player';\nimport * as mm from 'music-metadata-browser';\nimport PostFormUtil from '../../../functions/post_form_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  previewAudio,\n  removeAudioObj\n} = PostFormUtil;\n\nconst AudioFileInput = ({\n  displayBodyImageAndTextInput,\n  setDisplayBodyImageAndTextInput,\n  post,\n  update,\n  audioFile,\n  setAudioFile,\n  title,\n  setTitle,\n  artist,\n  setArtist,\n  album,\n  setAlbum,\n  src,\n  setSrc,\n  audioObj,\n  setAudioObj,\n  active,\n  setActive,\n  objsToClean\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (post) {\n      //eslint-disable-next-line\n      setTitle(title = post.audioMeta.title); //eslint-disable-next-line\n\n      setArtist(artist = post.audioMeta.artist); //eslint-disable-next-line\n\n      setAlbum(album = post.audioMeta.album); //eslint-disable-next-line\n\n      setSrc(src = post.audioFile.url); //eslint-disable-next-line\n\n      setActive(active = true);\n    } //eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    if (audioFile || src) {\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true);\n    }\n  }, [setDisplayBodyImageAndTextInput, displayBodyImageAndTextInput]);\n\n  const renderUpdateFileInput = () => {\n    if (update) {\n      return (\n        /*#__PURE__*/\n        // <div>\n        _jsxDEV(\"label\", {\n          className: \"audioFileInputCustomLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://img.icons8.com/nolan/64/headphones.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Upload a different audio file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"audioFileInput\",\n            type: \"file\",\n            accept: \".mp3, .mp4, .wav, .aiff\",\n            onChange: e => {\n              previewAudio(e, mm, audioFile, setAudioFile, title, setTitle, artist, setArtist, album, setAlbum, src, setSrc, active, setActive, objsToClean, post);\n              document.getElementById('audioFileInput').value = '';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this) // </div>\n\n      );\n    }\n  };\n\n  if (active) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audioFilePlayer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"removeBtn\",\n        type: \"button\",\n        disabled: update ? true : false,\n        onClick: () => {\n          removeAudioObj(post, audioObj, setAudioObj, audioFile, setAudioFile, active, setActive, objsToClean);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => {\n            setTitle(title = e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: artist,\n          onChange: e => {\n            setArtist(artist = e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: album,\n          onChange: e => {\n            setAlbum(album = e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        src: src\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), renderUpdateFileInput()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"audioFileInputCustomLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://img.icons8.com/nolan/64/headphones.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload an audio file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"audioFileInput\",\n        type: \"file\",\n        accept: \".mp3, .mp4, .wav, .aiff\",\n        onChange: e => {\n          previewAudio(e, mm, audioFile, setAudioFile, title, setTitle, artist, setArtist, album, setAlbum, src, setSrc, active, setActive, objsToClean, post);\n          document.getElementById('audioFileInput').value = '';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(AudioFileInput, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = AudioFileInput;\nexport default AudioFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AudioFileInput\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/forms/inputTypes/Audio_File_Input.js"],"names":["React","useEffect","AudioPlayer","mm","PostFormUtil","previewAudio","removeAudioObj","AudioFileInput","displayBodyImageAndTextInput","setDisplayBodyImageAndTextInput","post","update","audioFile","setAudioFile","title","setTitle","artist","setArtist","album","setAlbum","src","setSrc","audioObj","setAudioObj","active","setActive","objsToClean","audioMeta","url","renderUpdateFileInput","e","document","getElementById","value","target"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport AudioPlayer from 'react-h5-audio-player';\nimport * as mm from 'music-metadata-browser';\nimport PostFormUtil from '../../../functions/post_form_util.js'\nconst { previewAudio, removeAudioObj } = PostFormUtil;\n\nconst AudioFileInput = ({\n  displayBodyImageAndTextInput,\n  setDisplayBodyImageAndTextInput,\n  post, \n  update, \n  audioFile,\n  setAudioFile,\n  title, \n  setTitle, \n  artist, \n  setArtist, \n  album,\n  setAlbum,\n  src,\n  setSrc,\n  audioObj, setAudioObj, \n  active, setActive,\n  objsToClean\n}) => {\n\n  useEffect(() => {\n    if (post) {\n      //eslint-disable-next-line\n      setTitle(title = post.audioMeta.title)\n      //eslint-disable-next-line\n      setArtist(artist = post.audioMeta.artist) \n      //eslint-disable-next-line\n      setAlbum(album = post.audioMeta.album) \n      //eslint-disable-next-line\n      setSrc(src = post.audioFile.url) \n      //eslint-disable-next-line\n      setActive(active = true)\n    }\n\n    //eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    if (audioFile || src) {\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true)\n    }\n\n  }, [setDisplayBodyImageAndTextInput, displayBodyImageAndTextInput])\n\n  const renderUpdateFileInput = () => {\n    if (update) {\n      return (\n        // <div>\n        <label\n          className='audioFileInputCustomLabel'\n        >\n          <div>\n            <img \n              src=\"https://img.icons8.com/nolan/64/headphones.png\"\n              alt=''\n            />\n            <span>Upload a different audio file</span>\n          </div>\n          <input\n            id='audioFileInput'\n            type='file'\n            accept='.mp3, .mp4, .wav, .aiff'\n            onChange={e => {\n              previewAudio(\n                e,\n                mm,\n                audioFile,\n                setAudioFile,\n                title, \n                setTitle, \n                artist,\n                setArtist, \n                album,\n                setAlbum,\n                src,\n                setSrc,\n                active,\n                setActive,\n                objsToClean,\n                post,\n              )\n\n              document.getElementById('audioFileInput').value = ''\n            }}\n          />\n        </label>\n        // </div>\n      )\n    }\n  }\n\n  if (active) {\n    return (\n      <div\n        className='audioFilePlayer'\n      >\n        <button\n          className='removeBtn'\n          type='button'\n          disabled={update ? true : false}\n          onClick={() =>  {\n            removeAudioObj(\n              post,\n              audioObj,\n              setAudioObj,\n              audioFile,\n              setAudioFile,\n              active, \n              setActive,\n              objsToClean\n            )\n          }}\n        >\n          X\n        </button>\n        <p>Title:\n          <input \n            type='text'\n            value={title}\n            onChange={e => {\n              setTitle(title = e.target.value)\n            }}\n          /> \n        </p>\n        <p>Artist: \n          <input \n            type='text'\n            value={artist}\n            onChange={e => {\n              setArtist(artist = e.target.value) \n            }}\n          />\n        </p>\n        <p>Album: \n          <input \n            type='text'\n            value={album}\n            onChange={e => {\n              setAlbum(album = e.target.value) \n            }}\n          />\n        </p>\n        <AudioPlayer\n          src={src}\n        />\n        {renderUpdateFileInput()}\n      </div>\n    )\n  } else {\n    return(\n      <label\n        className='audioFileInputCustomLabel'\n      >\n        <div>\n          <img \n            src=\"https://img.icons8.com/nolan/64/headphones.png\"\n            alt=''\n          />\n          <span>Upload an audio file</span>\n        </div>\n        <input\n          id='audioFileInput'\n          type='file'\n          accept='.mp3, .mp4, .wav, .aiff'\n          onChange={e => {\n            previewAudio(\n              e,\n              mm,\n              audioFile,\n              setAudioFile,\n              title, \n              setTitle, \n              artist,\n              setArtist, \n              album,\n              setAlbum,\n              src,\n              setSrc,\n              active,\n              setActive,\n              objsToClean,\n              post,\n            )\n            document.getElementById('audioFileInput').value = ''\n          }}\n        />\n      </label>\n    )\n  }\n}\n\nexport default AudioFileInput;"]},"metadata":{},"sourceType":"module"}