{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/social/Like_Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nimport UpdateCacheUtil from '../../functions/update_cache_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  LIKE_POST,\n  UNLIKE_POST\n} = Mutations;\nconst {\n  FETCH_LIKES_REPOSTS_AND_COMMENTS\n} = Queries;\nconst {\n  postLike,\n  postUnlike\n} = UpdateCacheUtil;\n\nconst LikeButton = ({\n  post,\n  liked,\n  refetchDoesUserLikePost\n}) => {\n  _s();\n\n  var initial = liked ? true : false;\n  let [status, setStatus] = useState(initial);\n  useEffect(() => {\n    refetchDoesUserLikePost();\n  });\n  let [likePost] = useMutation(LIKE_POST, {\n    update(client, {\n      data\n    }) {\n      const {\n        likePost\n      } = data,\n            query = FETCH_LIKES_REPOSTS_AND_COMMENTS;\n      postLike(client, likePost, post, query);\n    }\n\n  });\n  let [unlikePost] = useMutation(UNLIKE_POST, {\n    update(client, {\n      data\n    }) {\n      const {\n        unlikePost\n      } = data,\n            query = FETCH_LIKES_REPOSTS_AND_COMMENTS;\n      postUnlike(client, unlikePost, post, liked, query);\n    }\n\n  });\n\n  if (status) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"likeBtn\",\n      src: \"https://img.icons8.com/material-rounded/64/000000/like--v1.png\",\n      alt: \"\",\n      onClick: () => {\n        unlikePost({\n          variables: {\n            likeId: liked._id,\n            postId: post._id\n          }\n        });\n        setStatus(status = false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"likeBtn\",\n      src: \"https://img.icons8.com/material-outlined/64/000000/like--v1.png\",\n      alt: \"\",\n      onClick: () => {\n        likePost({\n          variables: {\n            postId: post._id,\n            user: Cookies.get('currentUser'),\n            postKind: post.kind\n          }\n        });\n        setStatus(status = true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(LikeButton, \"kMdTDnPNqkug5DZ6oUQwr+2zoKk=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = LikeButton;\nexport default LikeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/social/Like_Button.js"],"names":["React","useState","useEffect","useMutation","Cookies","Queries","Mutations","UpdateCacheUtil","LIKE_POST","UNLIKE_POST","FETCH_LIKES_REPOSTS_AND_COMMENTS","postLike","postUnlike","LikeButton","post","liked","refetchDoesUserLikePost","initial","status","setStatus","likePost","update","client","data","query","unlikePost","variables","likeId","_id","postId","user","get","postKind","kind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;;AACA,MAAM;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA6BH,SAAnC;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAuCL,OAA7C;AACA,MAAM;AAAEM,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA2BL,eAAjC;;AAEA,MAAMM,UAAU,GAAG,CAAC;AAClBC,EAAAA,IADkB;AACZC,EAAAA,KADY;AAElBC,EAAAA;AAFkB,CAAD,KAGb;AAAA;;AACJ,MAAIC,OAAO,GAAGF,KAAK,GAAG,IAAH,GAAU,KAA7B;AAEA,MAAI,CAACG,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACgB,OAAD,CAAlC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,uBAAuB;AACxB,GAFQ,CAAT;AAIA,MAAI,CAACI,QAAD,IAAajB,WAAW,CAACK,SAAD,EAAY;AACtCa,IAAAA,MAAM,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,EAAmB;AACvB,YAAM;AAAEH,QAAAA;AAAF,UAAeG,IAArB;AAAA,YACAC,KAAK,GAAGd,gCADR;AAGAC,MAAAA,QAAQ,CACNW,MADM,EACEF,QADF,EAENN,IAFM,EAEAU,KAFA,CAAR;AAID;;AATqC,GAAZ,CAA5B;AAYA,MAAI,CAACC,UAAD,IAAetB,WAAW,CAACM,WAAD,EAAc;AAC1CY,IAAAA,MAAM,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,EAAmB;AACvB,YAAM;AAAEE,QAAAA;AAAF,UAAiBF,IAAvB;AAAA,YACAC,KAAK,GAAGd,gCADR;AAGAE,MAAAA,UAAU,CACRU,MADQ,EACAG,UADA,EAERX,IAFQ,EAEFC,KAFE,EAEKS,KAFL,CAAV;AAID;;AATyC,GAAd,CAA9B;;AAYA,MAAIN,MAAJ,EAAY;AACV,wBACE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,GAAG,EAAC,gEAFN;AAGE,MAAA,GAAG,EAAC,EAHN;AAIE,MAAA,OAAO,EAAE,MAAM;AACbO,QAAAA,UAAU,CAAC;AACTC,UAAAA,SAAS,EAAE;AACTC,YAAAA,MAAM,EAAEZ,KAAK,CAACa,GADL;AAETC,YAAAA,MAAM,EAAEf,IAAI,CAACc;AAFJ;AADF,SAAD,CAAV;AAMAT,QAAAA,SAAS,CAACD,MAAM,GAAG,KAAV,CAAT;AACD;AAZH;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAjBD,MAiBO;AACL,wBACE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,GAAG,EAAC,iEAFN;AAGE,MAAA,GAAG,EAAC,EAHN;AAIE,MAAA,OAAO,EAAE,MAAM;AACbE,QAAAA,QAAQ,CAAC;AACPM,UAAAA,SAAS,EAAE;AACTG,YAAAA,MAAM,EAAEf,IAAI,CAACc,GADJ;AAETE,YAAAA,IAAI,EAAE1B,OAAO,CAAC2B,GAAR,CAAY,aAAZ,CAFG;AAGTC,YAAAA,QAAQ,EAAElB,IAAI,CAACmB;AAHN;AADJ,SAAD,CAAR;AAOAd,QAAAA,SAAS,CAACD,MAAM,GAAG,IAAV,CAAT;AACD;AAbH;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;AACF,CAxED;;GAAML,U;UAYaV,W,EAYEA,W;;;KAxBfU,U;AA0EN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nimport UpdateCacheUtil from '../../functions/update_cache_util.js';\nconst { LIKE_POST, UNLIKE_POST } = Mutations;\nconst { FETCH_LIKES_REPOSTS_AND_COMMENTS } = Queries;\nconst { postLike, postUnlike } = UpdateCacheUtil;\n\nconst LikeButton = ({ \n  post, liked, \n  refetchDoesUserLikePost\n}) => {\n  var initial = liked ? true : false\n\n  let [status, setStatus] = useState(initial)\n\n  useEffect(() => {\n    refetchDoesUserLikePost()\n  })\n\n  let [likePost] = useMutation(LIKE_POST, {\n    update(client, { data }) {\n      const { likePost } = data,\n      query = FETCH_LIKES_REPOSTS_AND_COMMENTS\n\n      postLike(\n        client, likePost,\n        post, query\n      )\n    }\n  })\n\n  let [unlikePost] = useMutation(UNLIKE_POST, {\n    update(client, { data }) {\n      const { unlikePost } = data,\n      query = FETCH_LIKES_REPOSTS_AND_COMMENTS\n\n      postUnlike(\n        client, unlikePost,\n        post, liked, query\n      )\n    }\n  })\n  \n  if (status) {\n    return (\n      <img\n        className='likeBtn'\n        src=\"https://img.icons8.com/material-rounded/64/000000/like--v1.png\"\n        alt=''\n        onClick={() => {\n          unlikePost({\n            variables: {\n              likeId: liked._id,\n              postId: post._id\n            }\n          })\n          setStatus(status = false)\n        }}\n      />\n    )\n  } else {\n    return (\n      <img\n        className='likeBtn'\n        src=\"https://img.icons8.com/material-outlined/64/000000/like--v1.png\"\n        alt=''\n        onClick={() => {\n          likePost({\n            variables: {\n              postId: post._id,\n              user: Cookies.get('currentUser'),\n              postKind: post.kind\n            }\n          })\n          setStatus(status = true)\n        }}\n      />\n    )\n  }\n}\n\nexport default LikeButton;"]},"metadata":{},"sourceType":"module"}