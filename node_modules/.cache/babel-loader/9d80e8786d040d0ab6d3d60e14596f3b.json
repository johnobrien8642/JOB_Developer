{"ast":null,"code":"import _toConsumableArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var postCreate=function postCreate(client,createPost,currentUser,query){var readQuery=client.readQuery({query:query,variables:{query:currentUser}});var fetchUserFeed=readQuery.fetchUserFeed;var newPostArr=[{__typename:'createPost'},createPost].concat(_toConsumableArray(fetchUserFeed));client.writeQuery({query:query,variables:{query:currentUser},data:{fetchUserFeed:newPostArr}});};var postUpdate=function postUpdate(client,updatePost,currentUser,query){var readQuery=client.readQuery({query:query,variables:{query:currentUser}});var fetchUserFeed=readQuery.fetchUserFeed;var newPostArr=_toConsumableArray(fetchUserFeed);fetchUserFeed.forEach(function(p,i){if(updatePost._id===p._id){newPostArr.splice(i,1,updatePost);}});client.writeQuery({query:query,variables:{query:currentUser},data:{fetchUserFeed:newPostArr}});};var commentPost=function commentPost(client,comment,post,query){var readFeed=client.readQuery({query:query,variables:{postId:post._id}});var fetchLikesRepostsAndComments=readFeed.fetchLikesRepostsAndComments;var newPostArr=[].concat(_toConsumableArray(fetchLikesRepostsAndComments),[comment]);client.writeQuery({query:query,variables:{postId:post._id},data:{fetchLikesRepostsAndComments:newPostArr}});};var postDelete=function postDelete(client,post,deletePost,currentUser,query){var readFeed=client.readQuery({query:query,variables:{query:currentUser}});var fetchUserFeed=readFeed.fetchUserFeed;var newPostArr=fetchUserFeed.filter(function(post1){return post1._id!==post._id;});client.writeQuery({query:query,variables:{query:currentUser},data:{fetchUserFeed:[{__typename:'deletePost'}].concat(_toConsumableArray(newPostArr))}});};var postLike=function postLike(client,likePost,post,query){var readFeed=client.readQuery({query:query,variables:{postId:post._id}});var fetchLikesRepostsAndComments=readFeed.fetchLikesRepostsAndComments;var newPostArr=[].concat(_toConsumableArray(fetchLikesRepostsAndComments),[likePost]);client.writeQuery({query:query,variables:{postId:post._id},data:{fetchLikesRepostsAndComments:newPostArr}});};var postUnlike=function postUnlike(client,unlikePost,post,liked,query){var readFeed=client.readQuery({query:query,variables:{postId:post._id}});var fetchLikesRepostsAndComments=readFeed.fetchLikesRepostsAndComments;var newPostArr=fetchLikesRepostsAndComments.filter(function(item){if(item._id===liked._id){return false;}else{return true;}});client.writeQuery({query:query,variables:{postId:post._id},data:{fetchLikesRepostsAndComments:newPostArr}});};var filterTag=function filterTag(client,addFilterTag,currentUser,query){client.writeQuery({query:query,variables:{query:currentUser},data:{user:{filteredTags:addFilterTag.filteredTags}}});};var filterPostContent=function filterPostContent(client,addFilterPostContent,currentUser,query){client.writeQuery({query:query,variables:{query:currentUser},data:{user:{filteredTags:addFilterPostContent.filteredPostContent}}});};var followUpdate=function followUpdate(client,follow,gqlQuery,query,kind){var readFeed=client.readQuery({query:gqlQuery,variables:{query:query}});var user=readFeed.user;var newArr=kind==='User'?[].concat(_toConsumableArray(user.userFollows),[follow._id]):[].concat(_toConsumableArray(user.tagFollows),[follow._id]);if(kind==='User'){client.writeQuery({query:gqlQuery,variables:{query:query},data:{user:{userFollows:newArr}}});}else{client.writeQuery({query:gqlQuery,variables:{query:query},data:{user:{tagFollows:newArr}}});}};var unfollowUpdate=function unfollowUpdate(client,unfollow,gqlQuery,query,kind){var readFeed=client.readQuery({query:gqlQuery,variables:{query:query}});var user=readFeed.user;var newArr=kind==='User'?user.userFollows.filter(function(obj){return obj._id!==unfollow._id;}):user.tagFollows.filter(function(obj){return obj._id!==unfollow._id;});if(kind==='User'){client.writeQuery({query:gqlQuery,variables:{query:query},data:{user:{userFollows:newArr}}});}else{client.writeQuery({query:gqlQuery,variables:{query:query},data:{user:{tagFollows:newArr}}});}};var UpdateCacheUtil={postCreate:postCreate,postUpdate:postUpdate,commentPost:commentPost,postDelete:postDelete,postLike:postLike,postUnlike:postUnlike,filterTag:filterTag,filterPostContent:filterPostContent,followUpdate:followUpdate,unfollowUpdate:unfollowUpdate};export default UpdateCacheUtil;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/functions/update_cache_util.js"],"names":["postCreate","client","createPost","currentUser","query","readQuery","variables","fetchUserFeed","newPostArr","__typename","writeQuery","data","postUpdate","updatePost","forEach","p","i","_id","splice","commentPost","comment","post","readFeed","postId","fetchLikesRepostsAndComments","postDelete","deletePost","filter","post1","postLike","likePost","postUnlike","unlikePost","liked","item","filterTag","addFilterTag","user","filteredTags","filterPostContent","addFilterPostContent","filteredPostContent","followUpdate","follow","gqlQuery","kind","newArr","userFollows","tagFollows","unfollowUpdate","unfollow","obj","UpdateCacheUtil"],"mappings":"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","sourcesContent":["const postCreate = (\n  client, \n  createPost,\n  currentUser, \n  query\n) => {\n  var readQuery = client.readQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    }\n  })\n  \n  var { fetchUserFeed } = readQuery;\n  \n  var newPostArr = [{ __typename: 'createPost' }, createPost, ...fetchUserFeed]\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    },\n    data: {\n      fetchUserFeed: newPostArr\n    }\n  })\n}\n\nconst postUpdate = (\n  client, \n  updatePost,\n  currentUser, \n  query\n) => {\n  var readQuery = client.readQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    }\n  })\n  \n  var { fetchUserFeed } = readQuery;\n  \n  var newPostArr = [...fetchUserFeed]\n  \n  fetchUserFeed.forEach((p, i) => {\n    if (updatePost._id === p._id) {\n      newPostArr.splice(i, 1, updatePost)\n    }\n  })\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    },\n    data: {\n      fetchUserFeed: newPostArr\n    }\n  })\n}\n\nconst commentPost = (\n  client,\n  comment,\n  post,\n  query\n) => {\n  var readFeed = client.readQuery({\n    query: query,\n    variables: {\n      postId: post._id\n    }\n  })\n  \n  var { fetchLikesRepostsAndComments } = readFeed;\n\n  var newPostArr = [...fetchLikesRepostsAndComments, comment]\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      postId: post._id\n    },\n    data: {\n      fetchLikesRepostsAndComments: newPostArr\n    }\n  })\n}\n\nconst postDelete = (\n  client, \n  post, \n  deletePost,\n  currentUser, \n  query\n) => {\n  var readFeed = client.readQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    }\n  })\n\n  var { fetchUserFeed } = readFeed;\n  \n  var newPostArr = fetchUserFeed.filter(post1 => post1._id !== post._id)\n\n  client.writeQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    },\n    data: {\n      fetchUserFeed: [{ __typename: 'deletePost' }, ...newPostArr]\n    }\n  })\n}\n\nconst postLike = (\n  client, \n  likePost,\n  post, \n  query\n) => {\n  \n  var readFeed = client.readQuery({\n    query: query,\n    variables: {\n      postId: post._id\n    }\n  })\n  \n  var { fetchLikesRepostsAndComments } = readFeed;\n  \n  var newPostArr = [...fetchLikesRepostsAndComments, likePost]\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      postId: post._id\n    },\n    data: {\n      fetchLikesRepostsAndComments: newPostArr\n    }\n  })\n}\n\nconst postUnlike = (\n  client, \n  unlikePost,\n  post, \n  liked, \n  query\n) => {\n\n  var readFeed = client.readQuery({\n    query: query,\n    variables: {\n      postId: post._id\n    }\n  })\n  \n  var { fetchLikesRepostsAndComments } = readFeed;\n  \n  var newPostArr = fetchLikesRepostsAndComments.filter(item => {\n      if (item._id === liked._id) {\n        return false\n      } else {\n        return true\n      }\n    }\n  )\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      postId: post._id\n    },\n    data: {\n      fetchLikesRepostsAndComments: newPostArr\n    }\n  })\n}\n\nconst filterTag = (\n  client, \n  addFilterTag,\n  currentUser, \n  query\n) => {\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    },\n    data: {\n      user: {\n        filteredTags: addFilterTag.filteredTags\n      }\n    }\n  })\n}\n\nconst filterPostContent = (\n  client, \n  addFilterPostContent,\n  currentUser, \n  query\n) => {\n  \n  client.writeQuery({\n    query: query,\n    variables: {\n      query: currentUser\n    },\n    data: {\n      user: {\n        filteredTags: addFilterPostContent.filteredPostContent\n      }\n    }\n  })\n}\n\nconst followUpdate = (\n  client, \n  follow,\n  gqlQuery, \n  query,\n  kind\n) => {\n  var readFeed = client.readQuery({\n    query: gqlQuery,\n    variables: {\n      query: query\n    }\n  })\n  \n  var { user } = readFeed;\n\n  var newArr = kind === 'User' ? \n  [...user.userFollows, follow._id] : \n  [...user.tagFollows, follow._id]\n\n  if (kind === 'User') {\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query\n      },\n      data: {\n        user: {\n          userFollows: newArr\n        }\n      }\n    })\n  } else {\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query\n      },\n      data: {\n        user: {\n          tagFollows: newArr\n        }\n      }\n    })\n  }\n}\n\nconst unfollowUpdate = (\n  client, \n  unfollow,\n  gqlQuery, \n  query,\n  kind\n) => {\n  var readFeed = client.readQuery({\n    query: gqlQuery,\n    variables: {\n      query: query\n    }\n  })\n  \n  var { user } = readFeed;\n\n  var newArr = kind === 'User' ? \n  user.userFollows.filter(obj => obj._id !== unfollow._id) : \n  user.tagFollows.filter(obj => obj._id !== unfollow._id)\n\n  if (kind === 'User') {\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query\n      },\n      data: {\n        user: {\n          userFollows: newArr\n        }\n      }\n    })\n  } else {\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query\n      },\n      data: {\n        user: {\n          tagFollows: newArr\n        }\n      }\n    })\n  }\n}\n\nconst UpdateCacheUtil = {\n  postCreate, \n  postUpdate,\n  commentPost,\n  postDelete,\n  postLike, \n  postUnlike,\n  filterTag,\n  filterPostContent,\n  followUpdate,\n  unfollowUpdate\n}\n\nexport default UpdateCacheUtil"]},"metadata":{},"sourceType":"module"}