{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeexParser = void 0;\n\nvar initDebug = require(\"debug\");\n\nvar Speex = require(\"./Speex\");\n\nvar VorbisParser_1 = require(\"../vorbis/VorbisParser\");\n\nvar debug = initDebug('music-metadata:parser:ogg:speex');\n/**\r\n * Speex, RFC 5574\r\n * Ref:\r\n *   https://www.speex.org/docs/manual/speex-manual/\r\n *   https://tools.ietf.org/html/rfc5574\r\n */\n\nvar SpeexParser = /*#__PURE__*/function (_VorbisParser_1$Vorbi) {\n  _inherits(SpeexParser, _VorbisParser_1$Vorbi);\n\n  var _super = _createSuper(SpeexParser);\n\n  function SpeexParser(metadata, options, tokenizer) {\n    var _this;\n\n    _classCallCheck(this, SpeexParser);\n\n    _this = _super.call(this, metadata, options);\n    _this.tokenizer = tokenizer;\n    return _this;\n  }\n  /**\r\n   * Parse first Speex Ogg page\r\n   * @param {IPageHeader} header\r\n   * @param {Buffer} pageData\r\n   */\n\n\n  _createClass(SpeexParser, [{\n    key: \"parseFirstPage\",\n    value: function parseFirstPage(header, pageData) {\n      debug('First Ogg/Speex page');\n      var speexHeader = Speex.Header.get(pageData, 0);\n      this.metadata.setFormat('codec', \"Speex \".concat(speexHeader.version));\n      this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\n      this.metadata.setFormat('sampleRate', speexHeader.rate);\n\n      if (speexHeader.bitrate !== -1) {\n        this.metadata.setFormat('bitrate', speexHeader.bitrate);\n      }\n    }\n  }]);\n\n  return SpeexParser;\n}(VorbisParser_1.VorbisParser);\n\nexports.SpeexParser = SpeexParser;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/ogg/speex/SpeexParser.js"],"names":["Object","defineProperty","exports","value","SpeexParser","initDebug","require","Speex","VorbisParser_1","debug","metadata","options","tokenizer","header","pageData","speexHeader","Header","get","setFormat","version","nb_channels","rate","bitrate","VorbisParser"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAME,cAAc,GAAGF,OAAO,CAAC,wBAAD,CAA9B;;AACA,IAAMG,KAAK,GAAGJ,SAAS,CAAC,iCAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;IACMD,W;;;;;AACF,uBAAYM,QAAZ,EAAsBC,OAAtB,EAA+BC,SAA/B,EAA0C;AAAA;;AAAA;;AACtC,8BAAMF,QAAN,EAAgBC,OAAhB;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AAFsC;AAGzC;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,wBAAeC,MAAf,EAAuBC,QAAvB,EAAiC;AAC7BL,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACA,UAAMM,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaC,GAAb,CAAiBH,QAAjB,EAA2B,CAA3B,CAApB;AACA,WAAKJ,QAAL,CAAcQ,SAAd,CAAwB,OAAxB,kBAA0CH,WAAW,CAACI,OAAtD;AACA,WAAKT,QAAL,CAAcQ,SAAd,CAAwB,kBAAxB,EAA4CH,WAAW,CAACK,WAAxD;AACA,WAAKV,QAAL,CAAcQ,SAAd,CAAwB,YAAxB,EAAsCH,WAAW,CAACM,IAAlD;;AACA,UAAIN,WAAW,CAACO,OAAZ,KAAwB,CAAC,CAA7B,EAAgC;AAC5B,aAAKZ,QAAL,CAAcQ,SAAd,CAAwB,SAAxB,EAAmCH,WAAW,CAACO,OAA/C;AACH;AACJ;;;;EAnBqBd,cAAc,CAACe,Y;;AAqBzCrB,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SpeexParser = void 0;\r\nconst initDebug = require(\"debug\");\r\nconst Speex = require(\"./Speex\");\r\nconst VorbisParser_1 = require(\"../vorbis/VorbisParser\");\r\nconst debug = initDebug('music-metadata:parser:ogg:speex');\r\n/**\r\n * Speex, RFC 5574\r\n * Ref:\r\n *   https://www.speex.org/docs/manual/speex-manual/\r\n *   https://tools.ietf.org/html/rfc5574\r\n */\r\nclass SpeexParser extends VorbisParser_1.VorbisParser {\r\n    constructor(metadata, options, tokenizer) {\r\n        super(metadata, options);\r\n        this.tokenizer = tokenizer;\r\n    }\r\n    /**\r\n     * Parse first Speex Ogg page\r\n     * @param {IPageHeader} header\r\n     * @param {Buffer} pageData\r\n     */\r\n    parseFirstPage(header, pageData) {\r\n        debug('First Ogg/Speex page');\r\n        const speexHeader = Speex.Header.get(pageData, 0);\r\n        this.metadata.setFormat('codec', `Speex ${speexHeader.version}`);\r\n        this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\r\n        this.metadata.setFormat('sampleRate', speexHeader.rate);\r\n        if (speexHeader.bitrate !== -1) {\r\n            this.metadata.setFormat('bitrate', speexHeader.bitrate);\r\n        }\r\n    }\r\n}\r\nexports.SpeexParser = SpeexParser;\r\n"]},"metadata":{},"sourceType":"script"}