{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/nav/Tabs.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport Queries from '../../graphql/queries.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_USER\n} = Queries;\n\nconst Tabs = ({\n  tab,\n  setTab,\n  cursorId,\n  timeAgoRef\n}) => {\n  _s();\n\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  });\n  if (loading) return 'User Fetch Loading...';\n  if (error) return `Error: ${error}`;\n  const {\n    user\n  } = data;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activityTabsHeader\",\n      children: user.blogName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activityTabsDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: tab === 'all' ? 'tab activityTabSelected' : 'tab',\n        onClick: () => {\n          timeAgoRef.current = [];\n          cursorId.current = new Date().getTime();\n          setTab(tab = 'all');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: tab === 'Mention' ? 'tab activityTabSelected' : 'tab',\n        onClick: () => {\n          timeAgoRef.current = [];\n          cursorId.current = new Date().getTime();\n          setTab(tab = 'Mention');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Mentions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: tab === 'Repost' ? 'tab activityTabSelected' : 'tab',\n        onClick: () => {\n          timeAgoRef.current = [];\n          cursorId.current = new Date().getTime();\n          setTab(tab = 'Repost');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Reblogs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: tab === 'Comment' ? 'tab activityTabSelected' : 'tab',\n        onClick: () => {\n          timeAgoRef.current = [];\n          cursorId.current = new Date().getTime();\n          setTab(tab = 'Comment');\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Replies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tabs, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Tabs;\nexport default Tabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabs\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/nav/Tabs.js"],"names":["React","useQuery","Cookies","Queries","FETCH_USER","Tabs","tab","setTab","cursorId","timeAgoRef","loading","error","data","variables","query","get","user","blogName","current","Date","getTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_USER } = Queries;\n\nconst Tabs = ({\n  tab, \n  setTab,\n  cursorId,\n  timeAgoRef\n}) => {\n\n  let { loading, error, data } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading) return 'User Fetch Loading...';\n  if (error) return `Error: ${error}`;\n\n  const { user } = data;\n\n  return(\n    <React.Fragment>\n      <div\n        className='activityTabsHeader'\n      >\n        {user.blogName}\n      </div>\n\n      <div\n        className='activityTabsDiv'\n      >\n\n        <div\n        className={tab === 'all' ? 'tab activityTabSelected' : 'tab'}\n        onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'all')\n          }}\n        >\n          <span>All</span>\n        </div>\n\n        <div\n          className={tab === 'Mention' ? 'tab activityTabSelected' : 'tab'}\n          onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'Mention')\n          }}\n        >\n          <span>Mentions</span>\n        </div>\n\n        <div\n          className={tab === 'Repost' ? 'tab activityTabSelected' : 'tab'}\n          onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'Repost')\n          }}\n        >\n          <span>Reblogs</span>\n        </div>\n\n        <div\n          className={tab === 'Comment' ? 'tab activityTabSelected' : 'tab'}\n          onClick={() => {\n            timeAgoRef.current = []\n            cursorId.current = new Date().getTime()\n            setTab(tab = 'Comment')\n          }}\n        >\n          <span>Replies</span>\n        </div>\n        \n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}