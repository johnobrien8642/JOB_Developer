{"ast":null,"code":"import React from'react';import{useQuery}from'@apollo/client';import Cookies from'js-cookie';import LikeButton from'./Like_Button';import Queries from'../../../../../graphql/queries';import PostFormUtil from'../../functions/post_form_util.js';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var DOES_USER_LIKE_POST=Queries.DOES_USER_LIKE_POST;var handlePostId=PostFormUtil.handlePostId;var PostOptions=function PostOptions(_ref){var post=_ref.post,refetchNotes=_ref.refetchNotes,notesCount=_ref.notesCount,notesActive=_ref.notesActive,setNotesActive=_ref.setNotesActive,toggleNotes=_ref.toggleNotes,update=_ref.update,setUpdate=_ref.setUpdate,toggleUpdate=_ref.toggleUpdate,repostActive=_ref.repostActive,setRepostActive=_ref.setRepostActive,confirmDelete=_ref.confirmDelete,setConfirmDelete=_ref.setConfirmDelete;var postId=handlePostId(post);var _useQuery=useQuery(DOES_USER_LIKE_POST,{variables:{user:Cookies.get('currentUser'),postId:postId}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data,refetch=_useQuery.refetch;if(loading)return'Loading...';if(error)return\"Error: \".concat(error);var doesUserLikePost=data.doesUserLikePost;if(post.user.blogName===Cookies.get('currentUser')){return/*#__PURE__*/_jsxs(\"div\",{className:\"postFooter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notesBtn\",onClick:function onClick(){toggleNotes(notesActive,setNotesActive);},children:[notesCount,\" notes\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"postOptions\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"commentBubbleBtn\",src:\"https://img.icons8.com/windows/64/000000/speech-bubble--v1.png\",alt:\"\",onClick:function onClick(){toggleNotes();}}),/*#__PURE__*/_jsx(\"img\",{className:\"repostIcon\",src:\"https://img.icons8.com/material-outlined/64/000000/retweet.png\",alt:\"\",onClick:function onClick(){setNotesActive(notesActive=false);setRepostActive(repostActive=true);}}),/*#__PURE__*/_jsx(LikeButton,{post:post,liked:doesUserLikePost,refetchDoesUserLikePost:refetch,refetchNotes:refetchNotes}),/*#__PURE__*/_jsx(\"img\",{className:\"deletePostBtn\",src:\"https://img.icons8.com/metro/64/000000/delete.png\",alt:\"\",onClick:function onClick(){setNotesActive(notesActive=false);setConfirmDelete(confirmDelete=true);}}),/*#__PURE__*/_jsx(\"img\",{className:\"editPostBtn\",src:\"https://img.icons8.com/windows/64/000000/edit--v1.png\",alt:\"\",onClick:function onClick(){setNotesActive(notesActive=false);toggleUpdate(update,setUpdate);}})]})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"postFooter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notesBtn\",onClick:function onClick(){toggleNotes(notesActive,setNotesActive);},children:[notesCount,\" notes\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"postOptions\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"addCommentBtn\",src:\"https://img.icons8.com/windows/64/000000/speech-bubble--v1.png\",alt:\"\",onClick:function onClick(){toggleNotes();}}),/*#__PURE__*/_jsx(\"img\",{className:\"repostIcon\",src:\"https://img.icons8.com/material-outlined/64/000000/retweet.png\",alt:\"\",onClick:function onClick(){setNotesActive(notesActive=false);setRepostActive(repostActive=true);}}),/*#__PURE__*/_jsx(LikeButton,{post:post,liked:doesUserLikePost,refetchDoesUserLikePost:refetch})]})]});}};export default PostOptions;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/social/Post_Options.js"],"names":["React","useQuery","Cookies","LikeButton","Queries","PostFormUtil","DOES_USER_LIKE_POST","handlePostId","PostOptions","post","refetchNotes","notesCount","notesActive","setNotesActive","toggleNotes","update","setUpdate","toggleUpdate","repostActive","setRepostActive","confirmDelete","setConfirmDelete","postId","variables","user","get","loading","error","data","refetch","doesUserLikePost","blogName"],"mappings":"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","sourcesContent":["import React from 'react'; \nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport LikeButton from './Like_Button'\n\nimport Queries from '../../../../../graphql/queries';\nimport PostFormUtil from '../../functions/post_form_util.js';\nconst { DOES_USER_LIKE_POST } = Queries;\nconst { handlePostId } = PostFormUtil;\n\nconst PostOptions = ({ \n  post, \n  refetchNotes, \n  notesCount,\n  notesActive, \n  setNotesActive, \n  toggleNotes,\n  update, \n  setUpdate, \n  toggleUpdate,\n  repostActive,\n  setRepostActive,\n  confirmDelete,\n  setConfirmDelete\n}) => {\n  var postId = handlePostId(post)\n\n  let { loading, error, data, refetch } = useQuery(DOES_USER_LIKE_POST,{\n    variables: {\n      user: Cookies.get('currentUser'),\n      postId: postId\n    }\n  })\n\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`\n\n  const { doesUserLikePost } = data;\n\n  if (post.user.blogName === Cookies.get('currentUser')) {\n    return (\n      <div\n        className='postFooter'\n      >\n        <div\n          className='notesBtn'\n          onClick={() => {\n            toggleNotes(notesActive, setNotesActive)\n          }}\n        >\n          {notesCount} notes\n        </div>\n        \n        <div\n          className='postOptions'\n        >\n          <img\n            className='commentBubbleBtn'\n            src=\"https://img.icons8.com/windows/64/000000/speech-bubble--v1.png\"\n            alt=''\n            onClick={() => {\n              toggleNotes()\n            }}\n          />\n\n          <img \n            className='repostIcon'\n            src=\"https://img.icons8.com/material-outlined/64/000000/retweet.png\"\n            alt=''\n            onClick={() => {\n              setNotesActive(notesActive = false)\n              setRepostActive(repostActive = true)\n            }}\n          />\n\n          <LikeButton\n            post={post}\n            liked={doesUserLikePost}\n            refetchDoesUserLikePost={refetch}\n            refetchNotes={refetchNotes}\n          />\n\n          <img\n            className='deletePostBtn'\n            src=\"https://img.icons8.com/metro/64/000000/delete.png\"\n            alt=''\n            onClick={() => {\n              setNotesActive(notesActive = false)\n              setConfirmDelete(confirmDelete = true)\n            }}\n          />\n          <img\n            className='editPostBtn'\n            src=\"https://img.icons8.com/windows/64/000000/edit--v1.png\"\n            alt=''\n            onClick={() => {\n              setNotesActive(notesActive = false)\n              toggleUpdate(update, setUpdate)\n            }}\n          />\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div\n        className='postFooter'\n      >\n        <div\n          className='notesBtn'\n          onClick={() => {\n            toggleNotes(notesActive, setNotesActive)\n          }}\n        >\n          {notesCount} notes\n        </div>\n  \n        <div\n          className='postOptions'\n        >\n          <img\n            className='addCommentBtn'\n            src=\"https://img.icons8.com/windows/64/000000/speech-bubble--v1.png\"\n            alt=''\n            onClick={() => {\n              toggleNotes()\n            }}\n          />\n\n          <img \n            className='repostIcon'\n            src=\"https://img.icons8.com/material-outlined/64/000000/retweet.png\"\n            alt=''\n            onClick={() => {\n              setNotesActive(notesActive = false)\n              setRepostActive(repostActive = true)\n            }}\n          />\n          \n          <LikeButton\n            post={post}\n            liked={doesUserLikePost}\n            refetchDoesUserLikePost={refetch}\n          />\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default PostOptions;"]},"metadata":{},"sourceType":"module"}