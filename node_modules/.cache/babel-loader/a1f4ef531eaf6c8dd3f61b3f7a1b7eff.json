{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/user/util/components/Edit_Profile_Pic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport PhotoPostOrRegisterPhotoInput from '../../../posts/util/components/forms/inputTypes/Photo_Post_Or_Register_Photo_Input';\nimport Queries from '../../../../graphql/queries';\nimport Mutations from '../../../../graphql/mutations.js';\nimport PostFormUtil from '../../../posts/util/functions/post_form_util.js';\nimport UserSettingsUtil from '../functions/user_settings_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  handleFormData,\n  mainPost\n} = PostFormUtil;\nconst {\n  UPDATE_PROFILE_PIC\n} = Mutations;\nconst {\n  FETCH_USER\n} = Queries;\nconst {\n  updateCacheUpdateProfilePic\n} = UserSettingsUtil;\n\nconst EditProfilePic = ({\n  user\n}) => {\n  _s();\n\n  let [active, setActive] = useState(false);\n  let [profileImageFile, setProfileImageFile] = useState(null);\n  let [password, setPassword] = useState('');\n  let [errorMessage, setErrorMessage] = useState('');\n  let [render, setRender] = useState(0);\n  let previewProfilePicRef = useRef({});\n  let iconUrls = {\n    user: user.profilePic ? user.profilePic.src : null,\n    default: \"https://img.icons8.com/dusk/64/000000/kawaii-ice-cream.png\"\n  };\n  useEffect(() => {\n    if (iconUrls.user) {\n      previewProfilePicRef.current.src = iconUrls.user;\n      previewProfilePicRef.current.alt = '';\n    } else {\n      previewProfilePicRef.current.src = iconUrls.default;\n      previewProfilePicRef.current.alt = '';\n    }\n  }, [iconUrls.user, iconUrls.default]);\n  let [updateProfilePic] = useMutation(UPDATE_PROFILE_PIC, {\n    update(client, {\n      data\n    }) {\n      const {\n        updateProfilePic\n      } = data;\n      var currentUser = Cookies.get('currentUser');\n      var query = FETCH_USER;\n      updateCacheUpdateProfilePic(client, updateProfilePic, currentUser, query);\n    },\n\n    onCompleted(data) {\n      resetInputs();\n      setActive(active = false);\n    },\n\n    onError(error) {\n      setErrorMessage(errorMessage = `mutation error: ${error.message}`);\n    }\n\n  });\n\n  const resetInputs = () => {\n    previewProfilePicRef.current = {};\n    setProfileImageFile(profileImageFile = null);\n    setErrorMessage(errorMessage = '');\n    setPassword(password = '');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (profileImageFile) {\n      var profileImageFormData = handleFormData(profileImageFile);\n    }\n\n    Promise.all([mainPost(profileImageFormData)]).then(([mainUpload]) => {\n      var instanceData = {\n        profilePicId: mainUpload.length > 0 ? mainUpload[0]._id : null,\n        password: password,\n        user: Cookies.get('currentUser')\n      };\n      updateProfilePic({\n        variables: {\n          instanceData: instanceData\n        }\n      });\n    });\n  };\n\n  if (active) {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"upload\",\n      onSubmit: e => {\n        if (profileImageFile && password) {\n          handleSubmit(e);\n        } else {\n          setErrorMessage(errorMessage = 'Please confirm your password');\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(PhotoPostOrRegisterPhotoInput, {\n        register: true,\n        edit: true,\n        user: user,\n        previewProfilePicRef: previewProfilePicRef,\n        profileImageFile: profileImageFile,\n        setProfileImageFile: setProfileImageFile,\n        render: render,\n        setRender: setRender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errMessage\",\n        children: errorMessage ? `${errorMessage}` : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputAndBtnContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm password\",\n          value: password,\n          onChange: e => {\n            setPassword(password = e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel\",\n            type: \"button\",\n            onClick: () => {\n              resetInputs();\n              setActive(active = false);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currentProPic settingContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profilePic\",\n        src: iconUrls.user ? iconUrls.user : iconUrls.default,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"editPostBtn\",\n        src: \"https://img.icons8.com/windows/64/000000/edit--v1.png\",\n        alt: \"\",\n        onClick: () => {\n          setActive(active = true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(EditProfilePic, \"Jv0a/55HvLCi2+zDHANbzf41hns=\", false, function () {\n  return [useMutation];\n});\n\n_c = EditProfilePic;\nexport default EditProfilePic;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePic\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/user/util/components/Edit_Profile_Pic.js"],"names":["React","useState","useRef","useEffect","useMutation","Cookies","PhotoPostOrRegisterPhotoInput","Queries","Mutations","PostFormUtil","UserSettingsUtil","handleFormData","mainPost","UPDATE_PROFILE_PIC","FETCH_USER","updateCacheUpdateProfilePic","EditProfilePic","user","active","setActive","profileImageFile","setProfileImageFile","password","setPassword","errorMessage","setErrorMessage","render","setRender","previewProfilePicRef","iconUrls","profilePic","src","default","current","alt","updateProfilePic","update","client","data","currentUser","get","query","onCompleted","resetInputs","onError","error","message","handleSubmit","e","preventDefault","profileImageFormData","Promise","all","then","mainUpload","instanceData","profilePicId","length","_id","variables","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport PhotoPostOrRegisterPhotoInput from '../../../posts/util/components/forms/inputTypes/Photo_Post_Or_Register_Photo_Input';\n\nimport Queries from '../../../../graphql/queries';\nimport Mutations from '../../../../graphql/mutations.js';\nimport PostFormUtil from '../../../posts/util/functions/post_form_util.js';\nimport UserSettingsUtil from '../functions/user_settings_util.js'\nconst { handleFormData, mainPost } = PostFormUtil;\nconst { UPDATE_PROFILE_PIC } = Mutations;\nconst { FETCH_USER } = Queries;\nconst { updateCacheUpdateProfilePic } = UserSettingsUtil;\n\nconst EditProfilePic = ({\n  user\n}) => {\n  let [active, setActive] = useState(false);\n  let [profileImageFile, setProfileImageFile] = useState(null);\n  let [password, setPassword] = useState('');\n  let [errorMessage, setErrorMessage] = useState('');\n  let [render, setRender] = useState(0);\n  let previewProfilePicRef = useRef({});\n  \n  let iconUrls = {\n    user: user.profilePic ? user.profilePic.src : null,\n    default: \"https://img.icons8.com/dusk/64/000000/kawaii-ice-cream.png\"\n  }\n\n  useEffect(() => {\n    if (iconUrls.user) {\n      previewProfilePicRef.current.src = iconUrls.user\n      previewProfilePicRef.current.alt = ''\n    } else {\n      previewProfilePicRef.current.src = iconUrls.default\n      previewProfilePicRef.current.alt = ''\n    }\n  }, [iconUrls.user, iconUrls.default])\n\n  let [updateProfilePic] = useMutation(UPDATE_PROFILE_PIC, {\n    update(client, { data }) {\n      const { updateProfilePic } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER\n      \n      updateCacheUpdateProfilePic(client, updateProfilePic, currentUser, query)\n    },\n    onCompleted(data) {\n      resetInputs()\n      setActive(active = false)\n    },\n    onError(error) {\n      setErrorMessage(errorMessage = `mutation error: ${error.message}`)\n    }\n  })\n  \n  const resetInputs = () => {\n    previewProfilePicRef.current = {}\n    setProfileImageFile(profileImageFile = null)\n    setErrorMessage(errorMessage = '')\n    setPassword(password = '')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (profileImageFile) {\n      var profileImageFormData = handleFormData(profileImageFile)\n    }\n\n    Promise.all([\n      mainPost(profileImageFormData)\n    ])\n    .then(([mainUpload]) => {\n      \n      var instanceData = {\n        profilePicId: mainUpload.length > 0 ? mainUpload[0]._id : null,\n        password: password,\n        user: Cookies.get('currentUser')\n      }\n\n      updateProfilePic({\n        variables: {\n          instanceData: instanceData\n        }\n      })\n    })\n  }\n\n  if (active) {\n    return (\n      <form\n        className='upload'\n        onSubmit={e => {\n          if (profileImageFile && password) {\n            handleSubmit(e)\n          } else {\n            setErrorMessage(errorMessage = 'Please confirm your password')\n          }\n        }}\n      >\n        <PhotoPostOrRegisterPhotoInput\n          register={true}\n          edit={true}\n          user={user}\n          previewProfilePicRef={previewProfilePicRef}\n          profileImageFile={profileImageFile}\n          setProfileImageFile={setProfileImageFile}\n          render={render}\n          setRender={setRender}\n        />\n\n        <p\n          className='errMessage'\n        >{errorMessage ? `${errorMessage}` : ''}</p>\n\n        <div\n          className='inputAndBtnContainer'\n        >\n          <input\n            type='password'\n            placeholder='Confirm password'\n            value={password}\n            onChange={e => {\n              setPassword(password = e.target.value)\n            }}\n          />\n\n          <div>\n            <button\n              className='cancel'\n              type='button'\n              onClick={() => {\n                resetInputs()\n                setActive(active = false)\n              }}\n            >\n              Cancel\n            </button>\n            <button\n              className='save'\n              type='submit'\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </form>\n    )\n  } else {\n    return (\n      <div\n        className='currentProPic settingContainer'\n      >\n        <img\n          className='profilePic'\n          src={iconUrls.user ? iconUrls.user : iconUrls.default}\n          alt=''\n        />\n        <img\n          className='editPostBtn'\n          src=\"https://img.icons8.com/windows/64/000000/edit--v1.png\"\n          alt=''\n          onClick={() => {\n            setActive(active = true)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default EditProfilePic;"]},"metadata":{},"sourceType":"module"}