{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FourCcToken = void 0;\n\nconst Util_1 = require(\"./Util\");\n\nconst validFourCC = /^[\\x21-\\x7e©][\\x20-\\x7e\\x00()]{3}/;\n/**\r\n * Token for read FourCC\r\n * Ref: https://en.wikipedia.org/wiki/FourCC\r\n */\n\nexports.FourCcToken = {\n  len: 4,\n  get: (buf, off) => {\n    const id = buf.toString('binary', off, off + exports.FourCcToken.len);\n\n    switch (id) {\n      default:\n        if (!id.match(validFourCC)) {\n          throw new Error(`FourCC contains invalid characters: ${Util_1.default.a2hex(id)} \"${id}\"`);\n        }\n\n    }\n\n    return id;\n  },\n  put: (buffer, offset, id) => {\n    const str = Buffer.from(id, 'binary');\n    if (str.length !== 4) throw new Error(\"Invalid length\");\n    return str.copy(buffer, offset);\n  }\n};","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/node_modules/music-metadata/lib/common/FourCC.js"],"names":["Object","defineProperty","exports","value","FourCcToken","Util_1","require","validFourCC","len","get","buf","off","id","toString","match","Error","default","a2hex","put","buffer","offset","str","Buffer","from","length","copy"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,WAAW,GAAG,mCAApB;AACA;AACA;AACA;AACA;;AACAL,OAAO,CAACE,WAAR,GAAsB;AAClBI,EAAAA,GAAG,EAAE,CADa;AAElBC,EAAAA,GAAG,EAAE,CAACC,GAAD,EAAMC,GAAN,KAAc;AACf,UAAMC,EAAE,GAAGF,GAAG,CAACG,QAAJ,CAAa,QAAb,EAAuBF,GAAvB,EAA4BA,GAAG,GAAGT,OAAO,CAACE,WAAR,CAAoBI,GAAtD,CAAX;;AACA,YAAQI,EAAR;AACI;AACI,YAAI,CAACA,EAAE,CAACE,KAAH,CAASP,WAAT,CAAL,EAA4B;AACxB,gBAAM,IAAIQ,KAAJ,CAAW,uCAAsCV,MAAM,CAACW,OAAP,CAAeC,KAAf,CAAqBL,EAArB,CAAyB,KAAIA,EAAG,GAAjF,CAAN;AACH;;AAJT;;AAMA,WAAOA,EAAP;AACH,GAXiB;AAYlBM,EAAAA,GAAG,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBR,EAAjB,KAAwB;AACzB,UAAMS,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYX,EAAZ,EAAgB,QAAhB,CAAZ;AACA,QAAIS,GAAG,CAACG,MAAJ,KAAe,CAAnB,EACI,MAAM,IAAIT,KAAJ,CAAU,gBAAV,CAAN;AACJ,WAAOM,GAAG,CAACI,IAAJ,CAASN,MAAT,EAAiBC,MAAjB,CAAP;AACH;AAjBiB,CAAtB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FourCcToken = void 0;\r\nconst Util_1 = require(\"./Util\");\r\nconst validFourCC = /^[\\x21-\\x7e©][\\x20-\\x7e\\x00()]{3}/;\r\n/**\r\n * Token for read FourCC\r\n * Ref: https://en.wikipedia.org/wiki/FourCC\r\n */\r\nexports.FourCcToken = {\r\n    len: 4,\r\n    get: (buf, off) => {\r\n        const id = buf.toString('binary', off, off + exports.FourCcToken.len);\r\n        switch (id) {\r\n            default:\r\n                if (!id.match(validFourCC)) {\r\n                    throw new Error(`FourCC contains invalid characters: ${Util_1.default.a2hex(id)} \"${id}\"`);\r\n                }\r\n        }\r\n        return id;\r\n    },\r\n    put: (buffer, offset, id) => {\r\n        const str = Buffer.from(id, 'binary');\r\n        if (str.length !== 4)\r\n            throw new Error(\"Invalid length\");\r\n        return str.copy(buffer, offset);\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}