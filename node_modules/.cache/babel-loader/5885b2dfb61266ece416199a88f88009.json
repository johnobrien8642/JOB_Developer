{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/feeds/All_Tag_Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostShow from '../posts/types/showOrUpdate/PostShow';\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nimport Queries from '../../graphql/queries.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_ALL_TAG_FEED\n} = Queries;\nconst {\n  handlePostClassName\n} = PostShowUtil;\n\nconst AllTagFeed = ({\n  user\n}) => {\n  _s();\n\n  let leftFeedArr = useRef([]);\n  let rightFeedArr = useRef([]);\n  useEffect(() => {\n    return () => {\n      refetch();\n    }; //eslint-disable-next-line\n  }, []);\n  let {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(FETCH_ALL_TAG_FEED, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  });\n  if (loading) return '';\n  if (error) return `Error: ${error.message}`;\n  const {\n    fetchAllTagFeed\n  } = data;\n\n  if (fetchAllTagFeed) {\n    leftFeedArr.current = fetchAllTagFeed.slice(0, fetchAllTagFeed.length / 2);\n    rightFeedArr.current = fetchAllTagFeed.slice(fetchAllTagFeed.length / 2, fetchAllTagFeed.length);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"discoverFeed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftColumn\",\n      children: leftFeedArr.current.map((post, i) => {\n        if (post.kind === 'Repost') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: handlePostClassName(post),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userRepostShowHeader\",\n              children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n                user: post.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"user\",\n                  to: `/view/blog/${Cookies.get('currentUser')}`,\n                  children: Cookies.get('currentUser')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"repostedFrom\",\n                    to: `/view/blog/${post.user.blogName}`,\n                    children: post.user.blogName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PostShow, {\n              post: post,\n              discover: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: handlePostClassName(post),\n            children: /*#__PURE__*/_jsxDEV(PostShow, {\n              post: post,\n              user: user,\n              discover: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightColumn\",\n      children: rightFeedArr.current.map((post, i) => {\n        if (post.kind === 'Repost') {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: handlePostClassName(post),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userRepostShowHeader\",\n              children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n                user: post.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"user\",\n                  to: `/view/blog/${Cookies.get('currentUser')}`,\n                  children: Cookies.get('currentUser')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"repostedFrom\",\n                    to: `/view/blog/${post.user.blogName}`,\n                    children: post.user.blogName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PostShow, {\n              post: post,\n              discover: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: handlePostClassName(post),\n            children: /*#__PURE__*/_jsxDEV(PostShow, {\n              post: post,\n              user: user,\n              discover: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllTagFeed, \"R6NSmfmYv2FaoSPvazRsf3abbd8=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllTagFeed;\nexport default AllTagFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTagFeed\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/feeds/All_Tag_Feed.js"],"names":["React","useRef","useEffect","Link","useQuery","Cookies","ProfilePic","PostShow","PostShowUtil","Queries","FETCH_ALL_TAG_FEED","handlePostClassName","AllTagFeed","user","leftFeedArr","rightFeedArr","refetch","loading","error","data","variables","query","get","message","fetchAllTagFeed","current","slice","length","map","post","i","kind","blogName","_id"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useQuery } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostShow from '../posts/types/showOrUpdate/PostShow';\n\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_ALL_TAG_FEED } = Queries;\nconst { handlePostClassName } = PostShowUtil;\n\nconst AllTagFeed = ({\n  user\n}) => {\n  let leftFeedArr = useRef([]);\n  let rightFeedArr = useRef([]);\n\n  useEffect(() => {\n    \n    return () => {\n      refetch()\n    }\n    //eslint-disable-next-line\n  }, [])\n  \n  let { loading, error, data, refetch } = useQuery(FETCH_ALL_TAG_FEED, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading) return '';\n  if (error) return `Error: ${error.message}`;\n  \n  const { fetchAllTagFeed } = data;\n  \n  if (fetchAllTagFeed) {\n    leftFeedArr.current = fetchAllTagFeed.slice(0, (fetchAllTagFeed.length / 2))\n    rightFeedArr.current = fetchAllTagFeed.slice((fetchAllTagFeed.length / 2), fetchAllTagFeed.length)\n  }\n\n  return(\n    <div\n      className='discoverFeed'\n    >\n      <div\n        className='leftColumn'\n      >\n      {leftFeedArr.current.map((post, i) => {\n        if (post.kind === 'Repost') {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <div\n                className='userRepostShowHeader'\n              >\n                <ProfilePic\n                  user={post.user}\n                />\n                <span>\n                  <Link \n                    className='user'\n                    to={`/view/blog/${Cookies.get('currentUser')}`}>\n                    {Cookies.get('currentUser')}\n                  </Link>\n\n                  <div>\n                    <img\n                      src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                      alt=''\n                    />\n                    <Link\n                      className='repostedFrom'\n                      to={`/view/blog/${post.user.blogName}`}\n                    >\n                      {post.user.blogName}\n                    </Link>\n                  </div>\n                </span>\n              </div>\n\n              <PostShow\n                post={post}\n                discover={true}\n              />\n            </div>\n          )\n        } else {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <PostShow\n                post={post}\n                user={user}\n                discover={true}\n              />\n            </div>\n          )\n        }\n      })}\n      </div>\n      <div\n        className='rightColumn'\n      >\n      {rightFeedArr.current.map((post, i) => {\n        if (post.kind === 'Repost') {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <div\n                className='userRepostShowHeader'\n              >\n                <ProfilePic\n                  user={post.user}\n                />\n                <span>\n                  <Link \n                    className='user'\n                    to={`/view/blog/${Cookies.get('currentUser')}`}>\n                    {Cookies.get('currentUser')}\n                  </Link>\n\n                  <div>\n                    <img\n                      src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                      alt=''\n                    />\n                    <Link\n                      className='repostedFrom'\n                      to={`/view/blog/${post.user.blogName}`}\n                    >\n                      {post.user.blogName}\n                    </Link>\n                  </div>\n                </span>\n              </div>\n\n              <PostShow\n                post={post}\n                discover={true}\n              />\n            </div>\n          )\n        } else {\n          return (\n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <PostShow\n                post={post}\n                user={user}\n                discover={true}\n              />\n            </div>\n          )\n        }\n      })}\n      </div>\n    </div>\n  )\n}\n\nexport default AllTagFeed;"]},"metadata":{},"sourceType":"module"}