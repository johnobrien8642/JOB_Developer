{"ast":null,"code":"import _toConsumableArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import TagResult from'../../../search/resultTypes/Tag_Result';import UserResult from'../../../search/resultTypes/User_Result';import{jsx as _jsx}from\"react/jsx-runtime\";var header=function header(user,tag){if(user){return/*#__PURE__*/_jsx(UserResult,{user:user});}else if(tag){return/*#__PURE__*/_jsx(TagResult,{tag:tag});}};var infiniteScroll=function infiniteScroll(client,updateCacheFunc,query,gqlQuery,cursorId,fetchMoreDiv,fetchMoreDivId){return document.addEventListener('scroll',function(event){fetchMoreDiv.current=document.querySelector(fetchMoreDivId.current);if(fetchMoreDiv.current){var el=fetchMoreDiv.current.getBoundingClientRect();var elTop=el.top;var elBottom=el.bottom;var innerHeight=window.innerHeight;if(elTop>=0&&elBottom<=innerHeight){client.query({query:gqlQuery.current,variables:{query:query.current,cursorId:cursorId.current},fetchPolicy:'no-cache'}).then(function(res){if(res.loading)return'Loading...';updateCacheFunc(res,client,query.current,gqlQuery.current,cursorId);});}}});};var handlePostNotesScrollOutOfWindow=function handlePostNotesScrollOutOfWindow(notesActive,setNotesActive){return document.addEventListener('scroll',function(event){var node=document.querySelector('.postNotes');if(node){var el=node.getBoundingClientRect(),elTop=el.top,elBottom=el.bottom,innerHeight=window.innerHeight;if(elTop>innerHeight+10||elBottom<-10){setNotesActive(notesActive=false);}}});};var updateCacheInfScroll=function updateCacheInfScroll(res,client,query,gqlQuery,cursorId){var readFeed=client.readQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current}});if(readFeed){var fetchTagFeed=readFeed.fetchTagFeed,fetchUserFeed=readFeed.fetchUserFeed,fetchAllUserActivity=readFeed.fetchAllUserActivity;}var newData;var oldArr;var newArr;if(fetchTagFeed){oldArr=fetchTagFeed;newData=res.data.fetchTagFeed;newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchTagFeed:newArr}});}else if(fetchUserFeed){oldArr=fetchUserFeed;newData=res.data.fetchUserFeed;newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchUserFeed:newArr}});}else if(fetchAllUserActivity){oldArr=fetchAllUserActivity;newData=res.data.fetchAllUserActivity;newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchAllUserActivity:newArr}});}else if(fetchAllUserActivity){oldArr=fetchAllUserActivity;newData=res.data.fetchAllUserActivity;newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchAllUserActivity:newArr}});}if(newData){cursorId.current=newData.length>0?newData[newData.length-1]._id:null;}};var updateCacheInfScrollActivity=function updateCacheInfScrollActivity(res,client,query,gqlQuery,cursorId){var readFeed=client.readQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current}});if(readFeed){var fetchAllUserActivity=readFeed.fetchAllUserActivity;}var oldArr;var newData;if(fetchAllUserActivity){console.log(fetchAllUserActivity);oldArr=fetchAllUserActivity;newData=res.data.fetchAllUserActivity;var newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));if(fetchAllUserActivity){client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchAllUserActivity:newArr}});}if(newData){cursorId.current=newData.length>0?newData[newData.length-1]._id:null;}}};var updateCacheInfScrollUserFollowers=function updateCacheInfScrollUserFollowers(res,client,query,gqlQuery,cursorId){var readFeed=client.readQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current}});if(readFeed){var fetchUserFollowers=readFeed.fetchUserFollowers;}var oldArr;var newData;var newArr;if(fetchUserFollowers){oldArr=fetchUserFollowers;newData=res.data.fetchUserFollowers;newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchUserFollowers:newArr}});}if(newData){cursorId.current=newData.length>0?newData[newData.length-1]._id:null;}};var updateCacheInfScrollFollowedUsers=function updateCacheInfScrollFollowedUsers(res,client,query,gqlQuery,cursorId){var readFeed=client.readQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current}});if(readFeed){var fetchFollowedUsers=readFeed.fetchFollowedUsers;}var oldArr;var newData;var newArr;if(fetchFollowedUsers){oldArr=fetchFollowedUsers;newData=res.data.fetchFollowedUsers;newArr=[].concat(_toConsumableArray(oldArr),_toConsumableArray(newData));client.writeQuery({query:gqlQuery,variables:{query:query,cursorId:cursorId.current},data:{fetchFollowedUsers:newArr}});}if(newData){cursorId.current=newData.length>0?newData[newData.length-1]._id:null;}};var handleData=function handleData(data,feedArr,cursorId,endOfPosts){var fetchUserFeed=data.fetchUserFeed,fetchTagFeed=data.fetchTagFeed,fetchAllUserActivity=data.fetchAllUserActivity,fetchUserFollowers=data.fetchUserFollowers,fetchFollowedUsers=data.fetchFollowedUsers,fetchUserLikes=data.fetchUserLikes;if(fetchUserFeed){feedArr.current=fetchUserFeed;}else if(fetchTagFeed){feedArr.current=fetchTagFeed;}else if(fetchAllUserActivity){var arr=_toConsumableArray(fetchAllUserActivity);arr.sort(function(a,b){return b.createdAt-a.createdAt;});feedArr.current=arr;}else if(fetchUserFollowers){feedArr.current=fetchUserFollowers;}else if(fetchFollowedUsers){feedArr.current=fetchFollowedUsers;}else if(fetchUserLikes){feedArr.current=fetchUserLikes;}else if(fetchFollowedUsers){feedArr.current=fetchFollowedUsers;}else if(fetchUserFollowers){feedArr.current=fetchUserFollowers;}endOfPosts.current=feedArr.current.length===0?true:false;if(feedArr.current.length>0){cursorId.current=feedArr.current[feedArr.current.length-1]._id;}};var setgqlQueryAndQueryFeed=function setgqlQueryAndQueryFeed(tag,user,userLikes,gqlQuery,query,FETCH_TAG_FEED,FETCH_USER_LIKES,currentUser){if(tag){query.current=tag.title.slice(1);gqlQuery.current=FETCH_TAG_FEED;}else if(user){query.current=user.blogName;}else if(userLikes){query.current=currentUser;gqlQuery.current=FETCH_USER_LIKES;}else{query.current=currentUser;}};var setgqlQueryUserFollowedOrFollowingOrActivity=function setgqlQueryUserFollowedOrFollowingOrActivity(historyParam,gqlQuery,FETCH_USER_FOLLOWERS,FETCH_FOLLOWED_USERS,FETCH_ALL_ACTIVITY){if(historyParam==='/followers'){gqlQuery.current=FETCH_USER_FOLLOWERS;}else if(historyParam==='/following'){gqlQuery.current=FETCH_FOLLOWED_USERS;}else if(historyParam==='/activity'){gqlQuery.current=FETCH_ALL_ACTIVITY;}};var FeedUtil={header:header,updateCacheInfScroll:updateCacheInfScroll,infiniteScroll:infiniteScroll,updateCacheInfScrollActivity:updateCacheInfScrollActivity,updateCacheInfScrollUserFollowers:updateCacheInfScrollUserFollowers,updateCacheInfScrollFollowedUsers:updateCacheInfScrollFollowedUsers,handlePostNotesScrollOutOfWindow:handlePostNotesScrollOutOfWindow,handleData:handleData,setgqlQueryAndQueryFeed:setgqlQueryAndQueryFeed,setgqlQueryUserFollowedOrFollowingOrActivity:setgqlQueryUserFollowedOrFollowingOrActivity// doesUserFollowUser\n};export default FeedUtil;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/functions/feed_util.js"],"names":["React","TagResult","UserResult","header","user","tag","infiniteScroll","client","updateCacheFunc","query","gqlQuery","cursorId","fetchMoreDiv","fetchMoreDivId","document","addEventListener","event","current","querySelector","el","getBoundingClientRect","elTop","top","elBottom","bottom","innerHeight","window","variables","fetchPolicy","then","res","loading","handlePostNotesScrollOutOfWindow","notesActive","setNotesActive","node","updateCacheInfScroll","readFeed","readQuery","fetchTagFeed","fetchUserFeed","fetchAllUserActivity","newData","oldArr","newArr","data","writeQuery","length","_id","updateCacheInfScrollActivity","console","log","updateCacheInfScrollUserFollowers","fetchUserFollowers","updateCacheInfScrollFollowedUsers","fetchFollowedUsers","handleData","feedArr","endOfPosts","fetchUserLikes","arr","sort","a","b","createdAt","setgqlQueryAndQueryFeed","userLikes","FETCH_TAG_FEED","FETCH_USER_LIKES","currentUser","title","slice","blogName","setgqlQueryUserFollowedOrFollowingOrActivity","historyParam","FETCH_USER_FOLLOWERS","FETCH_FOLLOWED_USERS","FETCH_ALL_ACTIVITY","FeedUtil"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TagResult from '../../../search/resultTypes/Tag_Result';\nimport UserResult from '../../../search/resultTypes/User_Result';\n\nconst header = (user, tag) => {\n  if (user) {\n    return (\n      <UserResult user={user} />\n    )\n  } else if (tag) {\n    return (\n      <TagResult tag={tag} />\n    )\n  }\n}\n\nconst infiniteScroll = (\n  client,\n  updateCacheFunc,\n  query, \n  gqlQuery,\n  cursorId,\n  fetchMoreDiv,\n  fetchMoreDivId\n) => {\n\n  return document.addEventListener('scroll', function(event) {\n    fetchMoreDiv.current = document.querySelector(fetchMoreDivId.current)\n      if (fetchMoreDiv.current) {\n        var el = fetchMoreDiv.current.getBoundingClientRect()\n        var elTop = el.top\n        var elBottom = el.bottom\n        var innerHeight = window.innerHeight\n        \n        if (elTop >= 0 && elBottom <= innerHeight) {\n          client.query({\n            query: gqlQuery.current,\n            variables: {\n              query: query.current,\n              cursorId: cursorId.current\n            },\n            fetchPolicy: 'no-cache'\n            \n          }).then(res => {\n            if (res.loading) return 'Loading...';\n              updateCacheFunc(\n                res, client, query.current,\n                gqlQuery.current, cursorId\n              )\n          })\n        }\n      }\n    })\n}\n\nconst handlePostNotesScrollOutOfWindow = (\n  notesActive,\n  setNotesActive\n) => {\n  return document.addEventListener('scroll', function(event) {\n    var node = document.querySelector('.postNotes')\n    if (node) {\n      var el = node.getBoundingClientRect(),\n      elTop = el.top,\n      elBottom = el.bottom,\n      innerHeight = window.innerHeight\n      \n      if (elTop > innerHeight + 10 || elBottom < -10) {\n        setNotesActive(notesActive = false)\n      }\n    }\n  })\n}\n\nconst updateCacheInfScroll = (\n  res, \n  client, \n  query, \n  gqlQuery, \n  cursorId\n) => {\n  \n  var readFeed  = client.readQuery({\n    query: gqlQuery,\n    variables: {\n      query: query,\n      cursorId: cursorId.current\n    },\n  })\n  \n  if (readFeed) {\n    var { fetchTagFeed, fetchUserFeed, \n          fetchAllUserActivity } = readFeed;\n  }\n  \n  var newData\n  var oldArr\n  var newArr\n  if (fetchTagFeed) {\n    oldArr = fetchTagFeed\n    newData = res.data.fetchTagFeed\n    newArr = [...oldArr, ...newData]\n\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query,\n        cursorId: cursorId.current\n      },\n      data: {\n        fetchTagFeed: newArr\n      }\n    })\n  } else if (fetchUserFeed) {\n    oldArr = fetchUserFeed\n    newData = res.data.fetchUserFeed\n    newArr = [...oldArr, ...newData]\n\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query,\n        cursorId: cursorId.current\n      },\n      data: {\n        fetchUserFeed: newArr\n      }\n    })\n  } else if (fetchAllUserActivity) {\n    oldArr = fetchAllUserActivity\n    newData = res.data.fetchAllUserActivity\n    newArr = [...oldArr, ...newData]\n\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query,\n        cursorId: cursorId.current\n      },\n      data: {\n        fetchAllUserActivity: newArr\n      }\n    })\n  } else if (fetchAllUserActivity) {\n    oldArr = fetchAllUserActivity\n    newData = res.data.fetchAllUserActivity\n    newArr = [...oldArr, ...newData]\n\n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query,\n        cursorId: cursorId.current\n      },\n      data: {\n        fetchAllUserActivity: newArr\n      }\n    })\n  }\n  \n  if (newData) {\n    cursorId.current = newData.length > 0 ? newData[newData.length - 1]._id : null\n  }\n}\n\nconst updateCacheInfScrollActivity = (\n  res, \n  client, \n  query, \n  gqlQuery, \n  cursorId\n) => {\n  \n  var readFeed  = client.readQuery({\n    query: gqlQuery,\n    variables: {\n      query: query,\n      cursorId: cursorId.current\n    },\n  })\n  \n  if (readFeed) {\n    var { fetchAllUserActivity } = readFeed;\n  }\n\n  var oldArr\n  var newData\n  \n  if (fetchAllUserActivity) {\n    console.log(fetchAllUserActivity)\n    oldArr = fetchAllUserActivity\n    newData = res.data.fetchAllUserActivity\n\n    var newArr = [...oldArr, ...newData]\n    \n    if (fetchAllUserActivity) {\n      client.writeQuery({\n        query: gqlQuery,\n        variables: {\n          query: query,\n          cursorId: cursorId.current\n        },\n        data: {\n          fetchAllUserActivity: newArr\n        }\n      })\n    }\n    \n    if (newData) {\n      cursorId.current = newData.length > 0 ? newData[newData.length - 1]._id : null\n    }\n  }\n}\n\nconst updateCacheInfScrollUserFollowers = (\n  res, \n  client, \n  query, \n  gqlQuery, \n  cursorId\n) => {\n  \n  var readFeed  = client.readQuery({\n    query: gqlQuery,\n    variables: {\n      query: query,\n      cursorId: cursorId.current\n    },\n  })\n  \n  if (readFeed) {\n    var { fetchUserFollowers } = readFeed;\n  }\n\n  var oldArr\n  var newData\n  var newArr\n  if (fetchUserFollowers) {\n    oldArr = fetchUserFollowers\n    newData = res.data.fetchUserFollowers\n    newArr = [...oldArr, ...newData]\n    \n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query,\n        cursorId: cursorId.current\n      },\n      data: {\n        fetchUserFollowers: newArr\n      }\n    })\n  }\n\n  if (newData) {\n    cursorId.current = newData.length > 0 ? newData[newData.length - 1]._id : null\n  }\n}\n\nconst updateCacheInfScrollFollowedUsers = (\n  res, \n  client, \n  query, \n  gqlQuery, \n  cursorId\n) => {\n  \n  var readFeed  = client.readQuery({\n    query: gqlQuery,\n    variables: {\n      query: query,\n      cursorId: cursorId.current\n    },\n  })\n  \n  if (readFeed) {\n    var { fetchFollowedUsers } = readFeed;\n  }\n\n  var oldArr\n  var newData\n  var newArr\n  \n  if (fetchFollowedUsers) {\n    oldArr = fetchFollowedUsers\n    newData = res.data.fetchFollowedUsers\n    newArr = [...oldArr, ...newData]\n    \n    client.writeQuery({\n      query: gqlQuery,\n      variables: {\n        query: query,\n        cursorId: cursorId.current\n      },\n      data: {\n        fetchFollowedUsers: newArr\n      }\n    })\n  }\n\n  if (newData) {\n    cursorId.current = newData.length > 0 ? newData[newData.length - 1]._id : null\n  }\n}\n\nconst handleData = (data, feedArr, cursorId, endOfPosts) => {\n  var { fetchUserFeed, \n        fetchTagFeed, \n        fetchAllUserActivity, \n        fetchUserFollowers,\n        fetchFollowedUsers,\n        fetchUserLikes } = data\n\n  if (fetchUserFeed) {\n    feedArr.current = fetchUserFeed\n  } else if (fetchTagFeed) {\n    feedArr.current = fetchTagFeed\n  } else if (fetchAllUserActivity) {\n    var arr = [...fetchAllUserActivity]\n    arr.sort((a, b) => b.createdAt - a.createdAt)\n    feedArr.current = arr\n  } else if (fetchUserFollowers) {\n    feedArr.current = fetchUserFollowers\n  } else if (fetchFollowedUsers) {\n    feedArr.current = fetchFollowedUsers\n  } else if (fetchUserLikes) {\n    feedArr.current = fetchUserLikes\n  } else if (fetchFollowedUsers) {\n    feedArr.current = fetchFollowedUsers\n  } else if (fetchUserFollowers) {\n    feedArr.current = fetchUserFollowers\n  }\n  \n  endOfPosts.current = feedArr.current.length === 0 ? true : false\n  if (feedArr.current.length > 0) {\n    cursorId.current = feedArr.current[feedArr.current.length - 1]._id\n  }\n}\n\nconst setgqlQueryAndQueryFeed = (\n  tag, user, userLikes,\n  gqlQuery, query, \n  FETCH_TAG_FEED,\n  FETCH_USER_LIKES,\n  currentUser\n) => {\n\n  if (tag) {\n    query.current = tag.title.slice(1)\n    gqlQuery.current = FETCH_TAG_FEED\n  } else if (user) {\n    query.current = user.blogName\n  } else if (userLikes) {\n    query.current = currentUser\n    gqlQuery.current = FETCH_USER_LIKES\n  } else {\n    query.current = currentUser\n  }\n}\n\nconst setgqlQueryUserFollowedOrFollowingOrActivity = (\n  historyParam,\n  gqlQuery,\n  FETCH_USER_FOLLOWERS,\n  FETCH_FOLLOWED_USERS,\n  FETCH_ALL_ACTIVITY\n) => {\n\n  if (historyParam === '/followers') {\n    gqlQuery.current = FETCH_USER_FOLLOWERS\n  } else if (historyParam === '/following') {\n    gqlQuery.current = FETCH_FOLLOWED_USERS\n  } else if (historyParam === '/activity') {\n    gqlQuery.current = FETCH_ALL_ACTIVITY\n  }\n}\n\n\n\nconst FeedUtil = { \n  header, updateCacheInfScroll,\n  infiniteScroll,\n  updateCacheInfScrollActivity,\n  updateCacheInfScrollUserFollowers,\n  updateCacheInfScrollFollowedUsers,\n  handlePostNotesScrollOutOfWindow,\n  handleData, setgqlQueryAndQueryFeed,\n  setgqlQueryUserFollowedOrFollowingOrActivity\n  // doesUserFollowUser\n}\n\nexport default FeedUtil;"]},"metadata":{},"sourceType":"module"}