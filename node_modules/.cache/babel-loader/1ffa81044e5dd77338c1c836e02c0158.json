{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/feeds/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useQuery, useApolloClient } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport PostUpdateOrShow from '../posts/types/showOrUpdate/PostUpdateOrShow';\nimport Cookies from 'js-cookie';\nimport Queries from '../../graphql/queries';\nimport FeedUtil from '../posts/util/functions/feed_util.js';\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostLoading from '../nav/Post_Loading';\nimport FollowButton from '../posts/util/components/social/Follow_Button';\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_USER_FEED,\n  FETCH_USER_BLOG_FEED,\n  FETCH_TAG_FEED,\n  FETCH_USER_LIKES\n} = Queries;\nconst {\n  infiniteScroll,\n  updateCacheInfScroll,\n  handleData,\n  setgqlQueryAndQueryFeed\n} = FeedUtil;\nconst {\n  handlePostClassName\n} = PostShowUtil;\n\nconst Feed = ({\n  user,\n  tag,\n  userLikes,\n  currentUser,\n  uploading,\n  setUploading\n}) => {\n  _s();\n\n  let feedArr = useRef([]);\n  let fetchMoreDiv = useRef(null);\n  let fetchMoreDivId = useRef('#fetchMoreFeed');\n  let cursorId = useRef(null);\n  let query = useRef(Cookies.get('currentUser'));\n  let gqlQuery = useRef(FETCH_USER_FEED);\n  let endOfPosts = useRef(false);\n  const client = useApolloClient();\n  setgqlQueryAndQueryFeed(tag, user, userLikes, gqlQuery, query, FETCH_TAG_FEED, FETCH_USER_BLOG_FEED, FETCH_USER_LIKES, Cookies.get('currentUser'));\n  useEffect(() => {\n    var scroll = infiniteScroll(client, updateCacheInfScroll, query, gqlQuery, cursorId, fetchMoreDiv, fetchMoreDivId);\n    return () => {\n      document.removeEventListener('scroll', scroll);\n    }; //eslint-disable-next-line\n  }, []);\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(gqlQuery.current, {\n    variables: {\n      query: query.current,\n      cursorId: null\n    }\n  });\n  if (loading) return '';\n  if (error) return `Error: ${error}`;\n  handleData(data, feedArr, cursorId, endOfPosts);\n\n  var handleLikesHeader = () => {\n    if (userLikes) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userLikesHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"totalLikeCount\",\n          children: `${currentUser.totalLikeCount} likes`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userOrTagFeed\",\n    children: [handleLikesHeader(), /*#__PURE__*/_jsxDEV(PostLoading, {\n      uploading: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), feedArr.current.map((obj, i) => {\n      if (obj.kind === 'Repost') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: handlePostClassName(obj),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userRepostShowHeader\",\n            children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n              user: obj.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"repostHeaderContainer\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: \"user\",\n                to: `/view/blog/${obj.user.blogName}`,\n                children: obj.user.blogName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"iconRepostedAndFollowContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"repostedFrom\",\n                  to: `/view/blog/${obj.repostedFrom.blogName}`,\n                  children: obj.repostedFrom.blogName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FollowButton, {\n                  feed: true,\n                  user: obj.repostedFrom\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PostUpdateOrShow, {\n            post: obj,\n            repostFormBool: false,\n            uploading: uploading,\n            setUploading: setUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, obj._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: handlePostClassName(obj),\n          children: /*#__PURE__*/_jsxDEV(PostUpdateOrShow, {\n            post: obj,\n            currentUser: currentUser,\n            uploading: uploading,\n            setUploading: setUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, obj._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"fetchMoreFeed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"9xjuuUdANMZ4UK/TvPsTnOyoTjQ=\", false, function () {\n  return [useApolloClient, useQuery];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/feeds/Feed.js"],"names":["React","useEffect","useRef","useQuery","useApolloClient","Link","PostUpdateOrShow","Cookies","Queries","FeedUtil","ProfilePic","PostLoading","FollowButton","PostShowUtil","FETCH_USER_FEED","FETCH_USER_BLOG_FEED","FETCH_TAG_FEED","FETCH_USER_LIKES","infiniteScroll","updateCacheInfScroll","handleData","setgqlQueryAndQueryFeed","handlePostClassName","Feed","user","tag","userLikes","currentUser","uploading","setUploading","feedArr","fetchMoreDiv","fetchMoreDivId","cursorId","query","get","gqlQuery","endOfPosts","client","scroll","document","removeEventListener","loading","error","data","current","variables","handleLikesHeader","totalLikeCount","map","obj","i","kind","blogName","repostedFrom","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useQuery, useApolloClient } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport PostUpdateOrShow from '../posts/types/showOrUpdate/PostUpdateOrShow';\nimport Cookies from 'js-cookie';\nimport Queries from '../../graphql/queries';\nimport FeedUtil from '../posts/util/functions/feed_util.js';\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostLoading from '../nav/Post_Loading';\nimport FollowButton from '../posts/util/components/social/Follow_Button';\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nconst { FETCH_USER_FEED, FETCH_USER_BLOG_FEED, FETCH_TAG_FEED, FETCH_USER_LIKES } = Queries;\nconst { infiniteScroll, updateCacheInfScroll,\n        handleData, setgqlQueryAndQueryFeed } = FeedUtil;\nconst { handlePostClassName } = PostShowUtil;\n\nconst Feed = ({\n  user, \n  tag,\n  userLikes,\n  currentUser,\n  uploading,\n  setUploading\n}) => {\n  let feedArr = useRef([])\n  let fetchMoreDiv = useRef(null);\n  let fetchMoreDivId = useRef('#fetchMoreFeed');\n  let cursorId = useRef(null);\n  let query = useRef(Cookies.get('currentUser'))\n  let gqlQuery = useRef(FETCH_USER_FEED)\n  let endOfPosts = useRef(false)\n  const client = useApolloClient();\n\n  setgqlQueryAndQueryFeed(\n    tag, \n    user, \n    userLikes, \n    gqlQuery, \n    query,\n    FETCH_TAG_FEED,\n    FETCH_USER_BLOG_FEED,\n    FETCH_USER_LIKES,\n    Cookies.get('currentUser')\n  )\n  \n  useEffect(() => {\n    \n    var scroll = infiniteScroll(\n      client, updateCacheInfScroll,\n      query, gqlQuery,\n      cursorId, fetchMoreDiv,\n      fetchMoreDivId\n    )\n    \n    return () => {\n      document.removeEventListener('scroll', scroll)\n    }\n    //eslint-disable-next-line\n  }, [])\n  \n  let { loading, error, data } = useQuery(gqlQuery.current, {\n    variables: {\n      query: query.current,\n      cursorId: null\n    },\n  })\n\n  if (loading) return '';\n  if (error) return `Error: ${error}`;\n  \n  handleData(data, feedArr, cursorId, endOfPosts)\n\n  var handleLikesHeader = () => {\n    if (userLikes) {\n      return (\n        <div\n          className='userLikesHeader'\n        >\n          <h1>Likes</h1>\n          <span \n            className='totalLikeCount'\n          >\n            {`${currentUser.totalLikeCount} likes`}\n          </span>\n        </div>\n      )\n    }\n  }\n  \n  return(\n    <div\n      className='userOrTagFeed'\n    >\n\n      {handleLikesHeader()}\n\n      <PostLoading \n        uploading={uploading}\n      />\n      {feedArr.current.map((obj, i) => {\n        if (obj.kind === 'Repost') {\n          return (\n            <div\n              className={handlePostClassName(obj)}\n              key={obj._id}\n            >\n              \n              <div\n                className='userRepostShowHeader'\n              >\n                <ProfilePic\n                  user={obj.user}\n                />\n                <span\n                  className='repostHeaderContainer'\n                >\n                  <Link \n                    className='user'\n                    to={`/view/blog/${obj.user.blogName}`}>\n                    {obj.user.blogName}\n                  </Link>\n\n                  <div\n                    className='iconRepostedAndFollowContainer'\n                  >\n                    <img\n                      src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                      alt=''\n                    />\n                    <Link\n                      className='repostedFrom'\n                      to={`/view/blog/${obj.repostedFrom.blogName}`}\n                    >\n                      {obj.repostedFrom.blogName}\n                    </Link>\n                    <FollowButton\n                      feed={true}\n                      user={obj.repostedFrom}\n                    />\n                  </div>\n                </span>\n              </div>\n              \n              <PostUpdateOrShow\n                post={obj}\n                repostFormBool={false}\n                uploading={uploading}\n                setUploading={setUploading}\n              />\n            </div>\n          )\n        } else {\n          return (\n            <div\n              className={handlePostClassName(obj)}\n              key={obj._id}\n            >\n              <PostUpdateOrShow\n                post={obj}\n                currentUser={currentUser}\n                uploading={uploading}\n                setUploading={setUploading}\n              />\n            </div>\n          )\n        }\n      })}\n      <div\n        id='fetchMoreFeed'\n      >\n      </div>\n    </div>\n  )\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}