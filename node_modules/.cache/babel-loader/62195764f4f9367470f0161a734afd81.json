{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Route, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport PostsNav from '../nav/Posts_Nav';\nimport Feed from '../feeds/Feed.js';\nimport PostRadar from '../dashboard/util/Post_Radar';\nimport CheckOutTheseBlogs from '../dashboard/util/Check_Out_These_Blogs';\nimport RepostForm from '../posts/util/components/social/Repost_Form';\nimport Queries from '../../graphql/queries.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_USER\n} = Queries;\n\nconst Dashboard = props => {\n  _s();\n\n  let [uploading, setUploading] = useState(false);\n  let history = useHistory();\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`;\n  const {\n    user\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/repost/:blogName/:postId/:typename`,\n      component: RepostForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${props.match.path}/create`,\n      render: props => /*#__PURE__*/_jsxDEV(PostsNav, {\n        props: props,\n        mobile: true,\n        user: user,\n        uploading: uploading,\n        setUploading: setUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column1\",\n      children: [/*#__PURE__*/_jsxDEV(PostsNav, {\n        props: props,\n        userLikes: history.location.pathname === '/likes' ? true : false,\n        user: user,\n        uploading: uploading,\n        setUploading: setUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Feed, {\n        user: null,\n        userLikes: history.location.pathname === '/likes' ? true : false,\n        currentUser: user,\n        uploading: uploading,\n        setUploading: setUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column2\",\n      children: [/*#__PURE__*/_jsxDEV(CheckOutTheseBlogs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostRadar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"+Jcc8/KvTr1VuPO8SjvGKFiLC9U=\", false, function () {\n  return [useHistory, useQuery];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/dashboard/Dashboard.js"],"names":["React","useState","useQuery","Route","useHistory","Cookies","PostsNav","Feed","PostRadar","CheckOutTheseBlogs","RepostForm","Queries","FETCH_USER","Dashboard","props","uploading","setUploading","history","loading","error","data","variables","query","get","user","match","path","location","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAiBD,OAAvB;;AAEA,MAAME,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAIgB,OAAO,GAAGb,UAAU,EAAxB;AAEA,MAAI;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BlB,QAAQ,CAACU,UAAD,EAAa;AAClDS,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEjB,OAAO,CAACkB,GAAR,CAAY,aAAZ;AADE;AADuC,GAAb,CAAvC;AAMA,MAAIL,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAEX,QAAM;AAAEK,IAAAA;AAAF,MAAWJ,IAAjB;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,WADZ;AAAA,4BAGE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AACQ,MAAA,IAAI,EAAG,GAAEN,KAAK,CAACW,KAAN,CAAYC,IAAK,qCADlC;AAEE,MAAA,SAAS,EAAEhB;AAFb;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,KAAD;AACE,MAAA,KAAK,MADP;AACQ,MAAA,IAAI,EAAG,GAAEI,KAAK,CAACW,KAAN,CAAYC,IAAK,SADlC;AAEE,MAAA,MAAM,EAAGZ,KAAD,iBACN,QAAC,QAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,MAAM,EAAE,IAFV;AAGE,QAAA,IAAI,EAAEU,IAHR;AAIE,QAAA,SAAS,EAAET,SAJb;AAKE,QAAA,YAAY,EAAEC;AALhB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YAPF,eAoBE;AACE,MAAA,SAAS,EAAC,SADZ;AAAA,8BAGE,QAAC,QAAD;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,SAAS,EAAEG,OAAO,CAACU,QAAR,CAAiBC,QAAjB,KAA8B,QAA9B,GAAyC,IAAzC,GAAgD,KAF7D;AAGE,QAAA,IAAI,EAAEJ,IAHR;AAIE,QAAA,SAAS,EAAET,SAJb;AAKE,QAAA,YAAY,EAAEC;AALhB;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE,QAAC,IAAD;AACE,QAAA,IAAI,EAAE,IADR;AAEE,QAAA,SAAS,EAAEC,OAAO,CAACU,QAAR,CAAiBC,QAAjB,KAA8B,QAA9B,GAAyC,IAAzC,GAAgD,KAF7D;AAGE,QAAA,WAAW,EAAEJ,IAHf;AAIE,QAAA,SAAS,EAAET,SAJb;AAKE,QAAA,YAAY,EAAEC;AALhB;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAuCE;AACE,MAAA,SAAS,EAAC,SADZ;AAAA,8BAGE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,CAhED;;GAAMH,S;UAEUT,U,EAEiBF,Q;;;KAJ3BW,S;AAkEN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Route, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport PostsNav from '../nav/Posts_Nav';\nimport Feed from '../feeds/Feed.js';\nimport PostRadar from '../dashboard/util/Post_Radar';\nimport CheckOutTheseBlogs from '../dashboard/util/Check_Out_These_Blogs';\nimport RepostForm from '../posts/util/components/social/Repost_Form';\n\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_USER } = Queries;\n\nconst Dashboard = props => {\n  let [uploading, setUploading] = useState(false)\n  let history = useHistory()\n  \n  let { loading, error, data } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`;\n\n  const { user } = data;\n\n  return(\n    <div\n      className='dashboard'\n    >\n      <Route\n        exact path={`${props.match.path}/repost/:blogName/:postId/:typename`}\n        component={RepostForm}\n      />\n      <Route\n        exact path={`${props.match.path}/create`}\n        render={(props) => (\n          <PostsNav\n            props={props}\n            mobile={true}\n            user={user}\n            uploading={uploading}\n            setUploading={setUploading}\n          />\n        )}\n      />\n      \n      <div\n        className='column1'\n      >\n        <PostsNav \n          props={props}\n          userLikes={history.location.pathname === '/likes' ? true : false}\n          user={user}\n          uploading={uploading}\n          setUploading={setUploading}\n        />\n        <Feed \n          user={null}\n          userLikes={history.location.pathname === '/likes' ? true : false}\n          currentUser={user}\n          uploading={uploading}\n          setUploading={setUploading}\n        />\n      </div>\n\n      <div\n        className='column2'\n      >\n        <CheckOutTheseBlogs />\n        <PostRadar />\n      </div>\n    {/* </React.Fragment> */}\n    </div>\n  )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}