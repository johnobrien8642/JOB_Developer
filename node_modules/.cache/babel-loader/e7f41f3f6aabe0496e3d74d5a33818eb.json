{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/dragAndDrop/Body_Image_DnD.js\";\nimport React from 'react';\nimport PostFormUtil from '../../../functions/post_form_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  removeBodyObj,\n  drag,\n  onDropBody,\n  allowDrop\n} = PostFormUtil;\n\nconst BodyImageDnD = ({\n  bodyIdx,\n  img,\n  body,\n  setBodyImageFiles,\n  bodyImageFiles,\n  render,\n  setRender,\n  objsToClean\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"draggable imageContentContainer\",\n    onDrop: e => {\n      var sortedBodyImageFiles = onDropBody(e, bodyIdx, body, bodyImageFiles);\n      setBodyImageFiles(bodyImageFiles = [...sortedBodyImageFiles]);\n    },\n    draggable: \"true\",\n    onDragStart: e => drag(e, bodyIdx, JSON.stringify(img)),\n    onDragOver: e => allowDrop(e),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"removeBtn\",\n      type: \"button\",\n      onClick: () => {\n        removeBodyObj(img.srcType, body, setBodyImageFiles, bodyImageFiles, objsToClean, bodyIdx, img.arrPos);\n        setRender(render + 1);\n      },\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"imageContent\",\n      src: img.src,\n      alt: img.alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BodyImageDnD;\nexport default BodyImageDnD;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyImageDnD\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/forms/dragAndDrop/Body_Image_DnD.js"],"names":["React","PostFormUtil","removeBodyObj","drag","onDropBody","allowDrop","BodyImageDnD","bodyIdx","img","body","setBodyImageFiles","bodyImageFiles","render","setRender","objsToClean","e","sortedBodyImageFiles","JSON","stringify","srcType","arrPos","src","alt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,sCAAzB;;AACA,MAAM;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,IAAjB;AACEC,EAAAA,UADF;AACcC,EAAAA;AADd,IAC4BJ,YADlC;;AAGA,MAAMK,YAAY,GAAG,CAAC;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,GAFoB;AAGpBC,EAAAA,IAHoB;AAIpBC,EAAAA,iBAJoB;AAKpBC,EAAAA,cALoB;AAMpBC,EAAAA,MANoB;AAOpBC,EAAAA,SAPoB;AAQpBC,EAAAA;AARoB,CAAD,KASf;AAEJ,sBACE;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,MAAM,EAAEC,CAAC,IAAI;AACT,UAAIC,oBAAoB,GAAGZ,UAAU,CACnCW,CADmC,EAChCR,OADgC,EACvBE,IADuB,EAEnCE,cAFmC,CAArC;AAKAD,MAAAA,iBAAiB,CAACC,cAAc,GAAG,CAAC,GAAGK,oBAAJ,CAAlB,CAAjB;AACD,KATL;AAWE,IAAA,SAAS,EAAC,MAXZ;AAYE,IAAA,WAAW,EAAED,CAAC,IAAIZ,IAAI,CAACY,CAAD,EAAIR,OAAJ,EAAaU,IAAI,CAACC,SAAL,CAAeV,GAAf,CAAb,CAZxB;AAaE,IAAA,UAAU,EAAEO,CAAC,IAAIV,SAAS,CAACU,CAAD,CAb5B;AAAA,4BAeE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAE,MAAM;AACbb,QAAAA,aAAa,CACXM,GAAG,CAACW,OADO,EACEV,IADF,EAEXC,iBAFW,EAGXC,cAHW,EAIXG,WAJW,EAIEP,OAJF,EAIWC,GAAG,CAACY,MAJf,CAAb;AAOAP,QAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eA+BE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,GAAG,EAAEJ,GAAG,CAACa,GAFX;AAGE,MAAA,GAAG,EAAEb,GAAG,CAACc;AAHX;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAlDD;;KAAMhB,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React from 'react'\n\nimport PostFormUtil from '../../../functions/post_form_util.js'\nconst { removeBodyObj, drag, \n        onDropBody, allowDrop } = PostFormUtil;\n\nconst BodyImageDnD = ({\n  bodyIdx, \n  img, \n  body, \n  setBodyImageFiles,\n  bodyImageFiles,\n  render, \n  setRender,\n  objsToClean\n}) => {\n\n  return (\n    <div\n      className='draggable imageContentContainer'\n      onDrop={e => {\n          var sortedBodyImageFiles = onDropBody(\n            e, bodyIdx, body,\n            bodyImageFiles\n          )\n          \n          setBodyImageFiles(bodyImageFiles = [...sortedBodyImageFiles])\n        }\n      }\n      draggable='true'\n      onDragStart={e => drag(e, bodyIdx, JSON.stringify(img))}\n      onDragOver={e => allowDrop(e)}\n    >\n      <button\n        className='removeBtn'\n        type='button' \n        onClick={() => {\n          removeBodyObj(\n            img.srcType, body,\n            setBodyImageFiles, \n            bodyImageFiles,\n            objsToClean, bodyIdx, img.arrPos\n          )\n\n          setRender(render + 1)\n        }}\n      >\n        X\n      </button>\n      <img\n        className='imageContent'\n        src={img.src} \n        alt={img.alt} \n      />\n    </div>\n  )\n}\n\nexport default BodyImageDnD;"]},"metadata":{},"sourceType":"module"}