{"ast":null,"code":"import _regeneratorRuntime from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import{useMutation}from'@apollo/client';import{useHistory}from'react-router-dom';import Cookies from'js-cookie';import randomstring from'randomstring';import ChatPostInput from'../../util/components/forms/inputTypes/Chat_Post_Input';import BodyImageAndText from'../../util/components/forms/Body_Image_And_Text';import Tags from'../../util/components/forms/Tags';import ProfilePic from'../../../user/util/components/Profile_Pic';import ConfirmClose from'../../../nav/Confirm_Close.js';import Mutations from'../../../../graphql/mutations.js';import Queries from'../../../../graphql/queries.js';import UpdateCacheUtil from'../../util/functions/update_cache_util.js';import PostFormUtil from'../../util/functions/post_form_util.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var postCreate=UpdateCacheUtil.postCreate,postUpdate=UpdateCacheUtil.postUpdate;var bodyPost=PostFormUtil.bodyPost,handleFormData=PostFormUtil.handleFormData,stripAllImgs=PostFormUtil.stripAllImgs,handleUploadedFiles=PostFormUtil.handleUploadedFiles,resetDisplayIdx=PostFormUtil.resetDisplayIdx,handleMentions=PostFormUtil.handleMentions,discardMentions=PostFormUtil.discardMentions,handleAllTextChatPost=PostFormUtil.handleAllTextChatPost,preventScroll=PostFormUtil.preventScroll,allowScroll=PostFormUtil.allowScroll,handleTagInput=PostFormUtil.handleTagInput;var CREATE_OR_UPDATE_POST=Mutations.CREATE_OR_UPDATE_POST;var FETCH_USER_FEED=Queries.FETCH_USER_FEED;var ChatPostForm=function ChatPostForm(_ref){var mobile=_ref.mobile,user=_ref.user,post=_ref.post,update=_ref.update,setUpdate=_ref.setUpdate,chatPostActive=_ref.chatPostActive,setChatPostActive=_ref.setChatPostActive,postFormModal=_ref.postFormModal,setPostFormModal=_ref.setPostFormModal,postFormOpen=_ref.postFormOpen,setPostFormOpen=_ref.setPostFormOpen,uploading=_ref.uploading,setUploading=_ref.setUploading;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),chat=_useState2[0],setChat=_useState2[1];var objsToClean=useRef([]);var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),bodyImageFiles=_useState6[0],setBodyImageFiles=_useState6[1];var body=useRef([]);var allText=useRef('');var bodyImages=useRef([]);var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),tag=_useState8[0],setTag=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),tags=_useState10[0],setTags=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),errMessage=_useState12[0],setErrMessage=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),render=_useState14[0],setRender=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),confirmClose=_useState16[0],setConfirmClose=_useState16[1];var history=useHistory();var formId='chatPostForm';var formInputId='chatPostInput';useEffect(function(){preventScroll(chatPostActive,document);},[chatPostActive]);useEffect(function(){resetDisplayIdx(body);});var _useMutation=useMutation(CREATE_OR_UPDATE_POST,{update:function update(client,_ref2){var data=_ref2.data;var createOrUpdatePost=data.createOrUpdatePost;var currentUser=Cookies.get('currentUser');var query=FETCH_USER_FEED;if(post){postUpdate(client,createOrUpdatePost,currentUser,query);}else{postCreate(client,createOrUpdatePost,currentUser,query);}},onCompleted:function onCompleted(){resetInputs();if(post){setUpdate(update=false);setUploading(uploading=false);}else{allowScroll(document);setChatPostActive(chatPostActive=false);if(mobile){setPostFormOpen(postFormOpen=false);history.push('/dashboard');}setUploading(uploading=false);}},onError:function onError(error){console.log(error);}}),_useMutation2=_slicedToArray(_useMutation,1),createOrUpdatePost=_useMutation2[0];var resetInputs=function resetInputs(){setChat(chat='');setDescription(description='');body.current=[];allText.current='';setBodyImageFiles(bodyImageFiles=[]);bodyImages.current=[];setTag(tag='');setTags(tags=[]);setErrMessage(errMessage='');};var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var bodyImagesFormData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();bodyImagesFormData=handleFormData(bodyImageFiles);Promise.all([bodyPost(bodyImagesFormData)]).then(function(_ref4){var _ref5=_slicedToArray(_ref4,1),bodyUploads=_ref5[0];var mentions=handleMentions(body,stripAllImgs);discardMentions(post,mentions,objsToClean);var descriptions=stripAllImgs(body);handleAllTextChatPost(allText,descriptions,chat);var instanceData={variants:{chat:chat},allText:allText.current,descriptions:descriptions,descriptionImages:handleUploadedFiles(body,bodyUploads),mentions:mentions,user:Cookies.get('currentUser'),tags:tags,kind:'ChatPost',objsToClean:objsToClean.current,postId:post?post._id:null};createOrUpdatePost({variables:{instanceData:instanceData}});});case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref3.apply(this,arguments);};}();var disabledBool=function disabledBool(){return!chat&&body.current.length===0&&!description;};var handleChatPostFormClass=function handleChatPostFormClass(){if(chatPostActive&&!uploading||update){return'postForm chatPostForm active';}else if(chatPostActive&&uploading){return'postForm chatPostForm hidden';}else{return'postForm chatPostForm none';}};if(chatPostActive||update){return/*#__PURE__*/_jsxs(\"div\",{className:update?'postFormContainer update':'postFormContainer',children:[/*#__PURE__*/_jsx(ProfilePic,{user:update?post.user:user}),/*#__PURE__*/_jsx(\"div\",{className:handleChatPostFormClass(),children:/*#__PURE__*/_jsxs(\"form\",{id:formId,onSubmit:function onSubmit(e){return handleSubmit(e);},onKeyPress:function onKeyPress(e){e.key==='Enter'&&e.preventDefault();},encType:'multipart/form-data',children:[/*#__PURE__*/_jsx(\"h3\",{className:\"userNameHeader\",children:update?post.user.blogName:user.blogName}),/*#__PURE__*/_jsx(ChatPostInput,{chat:chat,setChat:setChat,post:post,update:update}),/*#__PURE__*/_jsx(BodyImageAndText,{post:post,update:update,formId:formId,formInputId:formInputId,objsToClean:objsToClean,body:body,bodyImageFiles:bodyImageFiles,setBodyImageFiles:setBodyImageFiles,description:description,setDescription:setDescription,render:render,setRender:setRender,errMessage:errMessage,setErrMessage:setErrMessage}),/*#__PURE__*/_jsx(Tags,{post:post,tag:tag,setTag:setTag,tags:tags,setTags:setTags}),/*#__PURE__*/_jsxs(\"div\",{className:\"closeOrPostContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"closeBtn\",onClick:function onClick(){if(disabledBool()){resetInputs();allowScroll(document);if(!update){setPostFormModal(postFormModal=false);setChatPostActive(chatPostActive=false);}else{setUpdate(update=false);}if(mobile){setPostFormOpen(postFormOpen=false);}}else{setConfirmClose(confirmClose=true);}},children:\"Close\"}),/*#__PURE__*/_jsx(ConfirmClose,{mobile:mobile,update:update,setUpdate:setUpdate,confirmClose:confirmClose,setConfirmClose:setConfirmClose,allowScroll:allowScroll,resetInputs:resetInputs,setFormActive:setChatPostActive,formActive:chatPostActive,setPostFormModal:setPostFormModal,postFormModal:postFormModal,postFormOpen:postFormOpen,setPostFormOpen:setPostFormOpen}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:disabledBool()?'formSubmitBtn disabled':'formSubmitBtn',disabled:disabledBool(),onClick:function onClick(){if(description){var textObj={kind:'text',srcType:'text',content:description,displayIdx:body.current.length,uniqId:randomstring.generate({length:12,charset:'alphabetic'})};body.current.push(textObj);setDescription(description='');}if(tag){handleTagInput(tag,setTag,tags,setTags);}if(!update){setPostFormModal(postFormModal=false);}setUploading(uploading=true);},children:post?'Update':'Post'})]})]})})]});}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default ChatPostForm;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/types/create/ChatPostForm.js"],"names":["React","useState","useRef","useEffect","useMutation","useHistory","Cookies","randomstring","ChatPostInput","BodyImageAndText","Tags","ProfilePic","ConfirmClose","Mutations","Queries","UpdateCacheUtil","PostFormUtil","postCreate","postUpdate","bodyPost","handleFormData","stripAllImgs","handleUploadedFiles","resetDisplayIdx","handleMentions","discardMentions","handleAllTextChatPost","preventScroll","allowScroll","handleTagInput","CREATE_OR_UPDATE_POST","FETCH_USER_FEED","ChatPostForm","mobile","user","post","update","setUpdate","chatPostActive","setChatPostActive","postFormModal","setPostFormModal","postFormOpen","setPostFormOpen","uploading","setUploading","chat","setChat","objsToClean","description","setDescription","bodyImageFiles","setBodyImageFiles","body","allText","bodyImages","tag","setTag","tags","setTags","errMessage","setErrMessage","render","setRender","confirmClose","setConfirmClose","history","formId","formInputId","document","client","data","createOrUpdatePost","currentUser","get","query","onCompleted","resetInputs","push","onError","error","console","log","current","handleSubmit","e","preventDefault","bodyImagesFormData","Promise","all","then","bodyUploads","mentions","descriptions","instanceData","variants","descriptionImages","kind","postId","_id","variables","disabledBool","length","handleChatPostFormClass","key","blogName","textObj","srcType","content","displayIdx","uniqId","generate","charset"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport randomstring from 'randomstring';\n\nimport ChatPostInput from '../../util/components/forms/inputTypes/Chat_Post_Input'\nimport BodyImageAndText from '../../util/components/forms/Body_Image_And_Text'\nimport Tags from '../../util/components/forms/Tags'\nimport ProfilePic from '../../../user/util/components/Profile_Pic';\nimport ConfirmClose from '../../../nav/Confirm_Close.js';\n\nimport Mutations from '../../../../graphql/mutations.js';\nimport Queries from '../../../../graphql/queries.js';\nimport UpdateCacheUtil from '../../util/functions/update_cache_util.js';\nimport PostFormUtil from '../../util/functions/post_form_util.js';\nconst { postCreate, postUpdate } = UpdateCacheUtil;\nconst { bodyPost, handleFormData, stripAllImgs,\n        handleUploadedFiles, resetDisplayIdx,\n        handleMentions, discardMentions,\n        handleAllTextChatPost, preventScroll,\n        allowScroll, handleTagInput } = PostFormUtil;\nconst { CREATE_OR_UPDATE_POST } = Mutations;\nconst { FETCH_USER_FEED } = Queries;\n\nconst ChatPostForm = ({\n  mobile,\n  user,\n  post, \n  update,\n  setUpdate,\n  chatPostActive,\n  setChatPostActive,\n  postFormModal,\n  setPostFormModal,\n  postFormOpen,\n  setPostFormOpen,\n  uploading,\n  setUploading\n}) => {\n  let [chat, setChat] = useState('')\n\n  let objsToClean = useRef([])\n  let [description, setDescription] = useState('');\n  let [bodyImageFiles, setBodyImageFiles] = useState([]);\n  let body = useRef([]);\n  let allText = useRef('');\n  let bodyImages = useRef([]);\n  let [tag, setTag] = useState('');\n  let [tags, setTags] = useState([]);\n  let [errMessage, setErrMessage] = useState('');\n  let [render, setRender] = useState(0);\n  let [confirmClose, setConfirmClose] = useState(false);\n  let history = useHistory();\n  const formId = 'chatPostForm';\n  const formInputId = 'chatPostInput';\n\n  useEffect(() => {\n  \n    preventScroll(chatPostActive, document)\n\n  }, [chatPostActive])\n\n  useEffect(() => {\n    resetDisplayIdx(body)\n  })\n\n  let [createOrUpdatePost] = useMutation(CREATE_OR_UPDATE_POST, {\n    update(client, { data }){\n      const { createOrUpdatePost } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER_FEED\n      \n      if (post) {\n        postUpdate(client, createOrUpdatePost, currentUser, query)\n      } else {\n        postCreate(client, createOrUpdatePost, currentUser, query)\n      }\n    },\n    onCompleted() {\n      resetInputs();\n      if (post) {\n        setUpdate(update = false)\n        setUploading(uploading = false)\n      } else {\n        allowScroll(document)\n        setChatPostActive(chatPostActive = false)\n\n        if (mobile) {\n          setPostFormOpen(postFormOpen = false)\n          history.push('/dashboard')\n        }\n\n        setUploading(uploading = false)\n      }\n    },\n    onError(error) {\n      console.log(error)\n    }\n  });\n\n  const resetInputs = () => {\n    setChat(chat = '');\n    setDescription(description = '');\n    body.current = [];\n    allText.current = '';\n    setBodyImageFiles(bodyImageFiles = []);\n    bodyImages.current = [];\n    setTag(tag = '');\n    setTags(tags = []);\n    setErrMessage(errMessage = '');\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    var bodyImagesFormData = handleFormData(bodyImageFiles)\n\n    Promise.all([\n      bodyPost(bodyImagesFormData)\n    ]).then(\n      ([bodyUploads]) => {\n\n        var mentions = handleMentions(body, stripAllImgs)\n        \n        discardMentions(post, mentions, objsToClean)\n        \n        var descriptions = stripAllImgs(body)\n\n        handleAllTextChatPost(allText, descriptions, chat)\n        \n        var instanceData = {\n          variants: { chat: chat },\n          allText: allText.current,\n          descriptions: descriptions,\n          descriptionImages: handleUploadedFiles(body, bodyUploads),\n          mentions: mentions,\n          user: Cookies.get('currentUser'),\n          tags, kind: 'ChatPost',\n          objsToClean: objsToClean.current,\n          postId: post ? post._id : null\n        };\n        \n        createOrUpdatePost({\n          variables: {\n            instanceData: instanceData\n          }\n        })\n      }\n    )\n  }\n  \n  const disabledBool = () => {\n    return !chat &&\n    body.current.length === 0 &&\n    !description\n  }\n\n  const handleChatPostFormClass = () => {\n    if ((chatPostActive && !uploading) || update) {\n      return 'postForm chatPostForm active'\n    } else if (chatPostActive && uploading) {\n      return 'postForm chatPostForm hidden'\n    } else {\n      return 'postForm chatPostForm none'\n    }\n  }\n  \n  if (chatPostActive || update) {\n    return (\n      <div\n        className={update ? 'postFormContainer update' : 'postFormContainer'}\n      >\n\n      <ProfilePic user={update ? post.user : user} />\n\n      <div\n        className={handleChatPostFormClass()}\n      >\n        <form\n          id={formId}\n          onSubmit={e => handleSubmit(e)}\n          onKeyPress={e => { e.key === 'Enter' && e.preventDefault() }}\n          encType={'multipart/form-data'}\n        >\n\n        <h3\n          className='userNameHeader'\n        >{update ? post.user.blogName : user.blogName}</h3>\n  \n        <ChatPostInput\n          chat={chat}\n          setChat={setChat}\n          post={post}\n          update={update}\n        />\n  \n        <BodyImageAndText\n          post={post}\n          update={update}\n          formId={formId}\n          formInputId={formInputId}\n          objsToClean={objsToClean}\n          body={body}\n          bodyImageFiles={bodyImageFiles}\n          setBodyImageFiles={setBodyImageFiles}\n          description={description}\n          setDescription={setDescription}\n          render={render}\n          setRender={setRender}\n          errMessage={errMessage}\n          setErrMessage={setErrMessage}\n        />\n  \n        <Tags\n          post={post}\n          tag={tag}\n          setTag={setTag}\n          tags={tags}\n          setTags={setTags}\n        />\n        <div\n          className='closeOrPostContainer'\n        >\n          <div\n            className='closeBtn'\n            onClick={() => {\n              if (disabledBool()) {\n                  resetInputs()\n                  allowScroll(document)\n                  \n                  if (!update) {\n                    setPostFormModal(postFormModal = false)\n                    setChatPostActive(chatPostActive = false)\n                  } else {\n                    setUpdate(update = false)\n                  }\n\n                  if (mobile) {\n                    setPostFormOpen(postFormOpen = false)\n                  }\n                } else {\n                  setConfirmClose(confirmClose = true)\n                }\n            }}\n          >\n            Close\n          </div>\n\n          <ConfirmClose\n            mobile={mobile}\n            update={update}\n            setUpdate={setUpdate}\n            confirmClose={confirmClose}\n            setConfirmClose={setConfirmClose}\n            allowScroll={allowScroll}\n            resetInputs={resetInputs}\n            setFormActive={setChatPostActive}\n            formActive={chatPostActive}\n            setPostFormModal={setPostFormModal}\n            postFormModal={postFormModal}\n            postFormOpen={postFormOpen}\n            setPostFormOpen={setPostFormOpen}\n          />\n\n          <button\n            type='submit'\n            className={disabledBool() ? 'formSubmitBtn disabled' : 'formSubmitBtn'}\n            disabled={disabledBool()}\n            onClick={() => {\n              if (description) {\n                var textObj = {\n                  kind: 'text',\n                  srcType: 'text',\n                  content: description,\n                  displayIdx: body.current.length,\n                  uniqId: randomstring.generate({\n                    length: 12,\n                    charset: 'alphabetic'\n                  })\n                }\n\n                body.current.push(textObj)\n              \n                setDescription(description = '')\n              }\n              \n              if (tag) {\n                handleTagInput(\n                  tag, setTag,\n                  tags, setTags\n                )\n              }\n              \n              if (!update) {\n                setPostFormModal(postFormModal = false)\n              }\n              \n              setUploading(uploading = true)\n            }}\n          >\n            {post ? 'Update' : 'Post'}\n          </button>\n        </div>\n        </form>\n      </div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default ChatPostForm;"]},"metadata":{},"sourceType":"module"}