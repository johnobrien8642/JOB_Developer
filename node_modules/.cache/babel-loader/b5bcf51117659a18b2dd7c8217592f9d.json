{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/social/Post_Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport DOMPurify from 'dompurify';\nimport DeleteComment from '../social/Delete_Comment';\nimport ProfilePic from '../../../../user/util/components/Profile_Pic';\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nimport FeedUtil from '../../functions/feed_util.js';\nimport UpdateCacheUtil from '../../functions/update_cache_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_LIKES_REPOSTS_AND_COMMENTS\n} = Queries;\nconst {\n  COMMENT_POST\n} = Mutations;\nconst {\n  handlePostNotesScrollOutOfWindow\n} = FeedUtil;\nconst {\n  commentPost\n} = UpdateCacheUtil;\n\nconst PostNotes = ({\n  post,\n  notesCount,\n  notes,\n  notesActive,\n  setNotesActive\n}) => {\n  _s();\n\n  var [content, setContent] = useState('');\n  useEffect(() => {\n    var el = document.querySelector('.notes');\n\n    if (el) {\n      el.scrollTop = el.scrollHeight;\n    }\n  });\n  useEffect(() => {\n    var scroll = handlePostNotesScrollOutOfWindow(notesActive, setNotesActive);\n    return () => {\n      document.removeEventListener('scroll', scroll);\n    };\n  }, [notesActive, setNotesActive]);\n  let [comment] = useMutation(COMMENT_POST, {\n    update(client, {\n      data\n    }) {\n      let {\n        comment\n      } = data;\n      let query = FETCH_LIKES_REPOSTS_AND_COMMENTS;\n      commentPost(client, comment, post, query);\n    },\n\n    onCompleted() {\n      setContent(content = '');\n    }\n\n  });\n\n  const resolveKind = note => {\n    if (note.kind === 'Repost') {\n      return 'Repost';\n    } else if (note.kind === 'Comment') {\n      return 'Comment';\n    } else if (note.kind === 'Like') {\n      return 'Like';\n    }\n  };\n\n  const handleSubmit = () => {\n    let commentData = {};\n    commentData.user = Cookies.get('currentUser');\n    commentData.postAuthorId = post.user._id;\n    commentData.postId = post._id;\n    commentData.content = content;\n    commentData.kind = post.kind;\n    comment({\n      variables: {\n        commentData: commentData\n      }\n    });\n  };\n\n  if (notesActive) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postNotes\",\n      tabIndex: -1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notesHeader\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"backBtn\",\n          src: \"https://img.icons8.com/windows/64/000000/long-arrow-left.png\",\n          alt: \"\",\n          onClick: () => {\n            setNotesActive(notesActive = false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [notesCount, \" notes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"notes\",\n        children: notes.map((n, i) => {\n          var note = resolveKind(n);\n\n          if (note === 'Comment') {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noteProfilePicContainer\",\n                children: /*#__PURE__*/_jsxDEV(ProfilePic, {\n                  user: n.user,\n                  activity: n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noteContentContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noteContentHeader\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/view/blog/${n.user.blogName}`,\n                    children: n.user.blogName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(DeleteComment, {\n                      post: post,\n                      comment: n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: n.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)]\n            }, n._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this);\n          } else if (note === 'Repost') {\n            var caption;\n            n.repostTrail.forEach(captionObj => {\n              if (captionObj.user._id === n.user._id) {\n                caption = captionObj.caption;\n              }\n            });\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noteProfileContainer\",\n                children: /*#__PURE__*/_jsxDEV(ProfilePic, {\n                  user: n.user,\n                  activity: n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noteContentContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noteContentHeader repost\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    className: \"user\",\n                    to: `/view/blog/${n.user.blogName}`,\n                    children: n.user.blogName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"repostIconAndRepostFromContainer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"repostIconHeader\",\n                      src: \"https://img.icons8.com/material-outlined/64/000000/retweet.png\",\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      className: \"repostedFrom\",\n                      to: `/view/blog/${n.repostedFrom.blogName}`,\n                      children: n.repostedFrom.blogName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  dangerouslySetInnerHTML: {\n                    __html: DOMPurify.sanitize(caption)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, n._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this);\n          } else if (note === 'Like') {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noteProfilePicContainer\",\n                children: /*#__PURE__*/_jsxDEV(ProfilePic, {\n                  user: n.user,\n                  activity: n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"noteContentContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noteContentHeader\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/view/blog/${n.user.blogName}`,\n                    children: n.user.blogName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"likes this\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, n._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentInputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          placeholder: 'Speak your mind...',\n          onChange: e => {\n            setContent(content = e.target.value);\n          },\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              handleSubmit();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !content,\n          onClick: () => {\n            handleSubmit();\n          },\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(PostNotes, \"vcys0nonsEEVsVDQIWdIMOAaRCY=\", false, function () {\n  return [useMutation];\n});\n\n_c = PostNotes;\nexport default PostNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostNotes\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/social/Post_Notes.js"],"names":["React","useState","useEffect","useMutation","Link","Cookies","DOMPurify","DeleteComment","ProfilePic","Queries","Mutations","FeedUtil","UpdateCacheUtil","FETCH_LIKES_REPOSTS_AND_COMMENTS","COMMENT_POST","handlePostNotesScrollOutOfWindow","commentPost","PostNotes","post","notesCount","notes","notesActive","setNotesActive","content","setContent","el","document","querySelector","scrollTop","scrollHeight","scroll","removeEventListener","comment","update","client","data","query","onCompleted","resolveKind","note","kind","handleSubmit","commentData","user","get","postAuthorId","_id","postId","variables","map","n","i","blogName","caption","repostTrail","forEach","captionObj","repostedFrom","__html","sanitize","e","target","value","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport DOMPurify from 'dompurify';\n\nimport DeleteComment from '../social/Delete_Comment'\nimport ProfilePic from '../../../../user/util/components/Profile_Pic';\n\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nimport FeedUtil from '../../functions/feed_util.js';\nimport UpdateCacheUtil from '../../functions/update_cache_util.js';\nconst { FETCH_LIKES_REPOSTS_AND_COMMENTS } = Queries;\nconst { COMMENT_POST } = Mutations;\nconst { handlePostNotesScrollOutOfWindow } = FeedUtil;\nconst { commentPost } = UpdateCacheUtil;\n\nconst PostNotes = ({\n  post,\n  notesCount,\n  notes, \n  notesActive,\n  setNotesActive, \n}) => {\n  var [content, setContent] = useState('')\n\n  useEffect(() => {\n    var el = document.querySelector('.notes')\n\n    if (el) {\n      el.scrollTop = el.scrollHeight\n    }\n  })\n\n  useEffect(() => {\n    var scroll = handlePostNotesScrollOutOfWindow(\n      notesActive,\n      setNotesActive\n    )\n\n    return () => {\n      document.removeEventListener('scroll', scroll)\n    }\n  }, [notesActive, setNotesActive])\n\n  let [comment] = useMutation(COMMENT_POST, {\n    update(client, { data }) {\n      let { comment } = data;\n      let query = FETCH_LIKES_REPOSTS_AND_COMMENTS;\n\n      commentPost(client, comment, post, query)\n    },\n    onCompleted() {\n      setContent(content = '')\n    }\n  })\n\n  const resolveKind = (note) => {\n    if (note.kind === 'Repost') {\n      return 'Repost'\n    } else if (note.kind === 'Comment') {\n      return 'Comment'\n    } else if (note.kind === 'Like') {\n      return 'Like'\n    }\n  }\n\n  const handleSubmit = () => {\n    let commentData = {}\n    commentData.user = Cookies.get('currentUser')\n    commentData.postAuthorId = post.user._id\n    commentData.postId = post._id\n    commentData.content = content\n    commentData.kind = post.kind\n\n    comment({\n      variables: {\n        commentData: commentData\n      }\n    })\n  }\n  \n  if (notesActive) {\n    return (\n      <div\n        className='postNotes'\n        tabIndex={-1}\n      >\n        <div\n          className='notesHeader'\n        >\n          <img\n            className='backBtn'\n            src=\"https://img.icons8.com/windows/64/000000/long-arrow-left.png\"\n            alt=''\n            onClick={() => {\n              setNotesActive(notesActive = false)\n            }}\n          />\n          <span>{notesCount} notes</span>\n        </div>\n\n        <ul\n          className='notes'\n        >\n          {notes.map((n, i) => {\n            var note = resolveKind(n)\n            if (note === 'Comment') {\n              return (\n                <li\n                  key={n._id}\n                >\n                  <div\n                    className='noteProfilePicContainer'\n                  >\n                    <ProfilePic\n                      user={n.user}\n                      activity={n}\n                    />\n                  </div>\n\n                  <div\n                    className='noteContentContainer'\n                  >\n                    <div\n                      className='noteContentHeader'\n                    >\n                      <Link\n                        to={`/view/blog/${n.user.blogName}`}\n                      >\n                        {n.user.blogName}\n                      </Link>\n\n                      <div>\n                        <DeleteComment\n                          post={post}\n                          comment={n}\n                        />\n                      </div>\n                    </div>\n                    <p>{n.content}</p>\n                  </div>\n                </li>\n              )\n            } else if (note === 'Repost') {\n\n              var caption\n              n.repostTrail.forEach(captionObj => {\n                if (captionObj.user._id === n.user._id) {\n                  caption = captionObj.caption\n                }\n              })\n\n              return (\n                <li\n                  key={n._id}\n                >\n                  <div\n                    className='noteProfileContainer'\n                  >\n                    <ProfilePic \n                      user={n.user}\n                      activity={n}\n                    />\n                  </div>\n\n                  <div\n                    className='noteContentContainer'\n                  >\n                    <div\n                      className='noteContentHeader repost'\n                    >\n                      <Link\n                        className='user'\n                        to={`/view/blog/${n.user.blogName}`}\n                      >\n                        {n.user.blogName}\n                      </Link>\n\n                      <div\n                        className='repostIconAndRepostFromContainer'\n                      >\n                        <img\n                          className='repostIconHeader'\n                          src=\"https://img.icons8.com/material-outlined/64/000000/retweet.png\"\n                          alt=''\n                        />\n\n                        <Link\n                          className='repostedFrom'\n                          to={`/view/blog/${n.repostedFrom.blogName}`}\n                        >\n                          {n.repostedFrom.blogName}\n                        </Link>\n                      </div>\n                    </div>\n                    \n                    <div \n                      dangerouslySetInnerHTML={{ \n                        __html: DOMPurify.sanitize(caption)\n                      }}\n                    />\n                  </div>\n                </li>\n              )\n            } else if (note === 'Like') {\n              return (\n                <li\n                  key={n._id}\n                >\n\n                  <div\n                    className='noteProfilePicContainer'\n                  >\n                    <ProfilePic\n                      user={n.user}\n                      activity={n}\n                    />\n                  </div>\n\n                  <div\n                    className='noteContentContainer'\n                  >\n                    <div\n                      className='noteContentHeader'\n                    >\n                      <Link\n                        to={`/view/blog/${n.user.blogName}`}\n                      >\n                        {n.user.blogName}\n                      </Link>\n                    </div>\n\n                    <p>likes this</p>\n                  </div>\n                </li>\n              )\n            } else {\n              return (\n                <div>\n                </div>\n              )\n            }\n          })}\n        </ul>\n\n        <div\n          className='commentInputContainer'\n        > \n          <textarea\n            value={content}\n            placeholder={'Speak your mind...'}\n            onChange={e => {\n              setContent(content = e.target.value)\n            }}\n            onKeyDown={e => {\n              if (e.key === 'Enter') {\n                handleSubmit()\n              }\n            }}\n          ></textarea>\n\n          <button\n            type='button'\n            disabled={!content}\n            onClick={() => {\n              handleSubmit() \n            }}\n          >\n            Reply\n          </button>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n\n\n}\n\nexport default PostNotes;"]},"metadata":{},"sourceType":"module"}