{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdHeader = void 0;\n\nconst Token = require(\"token-types\");\n/**\r\n * Opus ID Header parser\r\n * Ref: https://wiki.xiph.org/OggOpus#ID_Header\r\n */\n\n\nclass IdHeader {\n  constructor(len) {\n    this.len = len;\n\n    if (len < 19) {\n      throw new Error(\"ID-header-page 0 should be at least 19 bytes long\");\n    }\n  }\n\n  get(buf, off) {\n    return {\n      magicSignature: new Token.StringType(8, 'ascii').get(buf, off + 0),\n      version: buf.readUInt8(off + 8),\n      channelCount: buf.readUInt8(off + 9),\n      preSkip: buf.readInt16LE(off + 10),\n      inputSampleRate: buf.readInt32LE(off + 12),\n      outputGain: buf.readInt16LE(off + 16),\n      channelMapping: buf.readUInt8(off + 18)\n    };\n  }\n\n}\n\nexports.IdHeader = IdHeader;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/node_modules/music-metadata/lib/ogg/opus/Opus.js"],"names":["Object","defineProperty","exports","value","IdHeader","Token","require","constructor","len","Error","get","buf","off","magicSignature","StringType","version","readUInt8","channelCount","preSkip","readInt16LE","inputSampleRate","readInt32LE","outputGain","channelMapping"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;AACA;AACA;AACA;AACA;;;AACA,MAAMF,QAAN,CAAe;AACXG,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;;AACA,QAAIA,GAAG,GAAG,EAAV,EAAc;AACV,YAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACH;AACJ;;AACDC,EAAAA,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;AACV,WAAO;AACHC,MAAAA,cAAc,EAAE,IAAIR,KAAK,CAACS,UAAV,CAAqB,CAArB,EAAwB,OAAxB,EAAiCJ,GAAjC,CAAqCC,GAArC,EAA0CC,GAAG,GAAG,CAAhD,CADb;AAEHG,MAAAA,OAAO,EAAEJ,GAAG,CAACK,SAAJ,CAAcJ,GAAG,GAAG,CAApB,CAFN;AAGHK,MAAAA,YAAY,EAAEN,GAAG,CAACK,SAAJ,CAAcJ,GAAG,GAAG,CAApB,CAHX;AAIHM,MAAAA,OAAO,EAAEP,GAAG,CAACQ,WAAJ,CAAgBP,GAAG,GAAG,EAAtB,CAJN;AAKHQ,MAAAA,eAAe,EAAET,GAAG,CAACU,WAAJ,CAAgBT,GAAG,GAAG,EAAtB,CALd;AAMHU,MAAAA,UAAU,EAAEX,GAAG,CAACQ,WAAJ,CAAgBP,GAAG,GAAG,EAAtB,CANT;AAOHW,MAAAA,cAAc,EAAEZ,GAAG,CAACK,SAAJ,CAAcJ,GAAG,GAAG,EAApB;AAPb,KAAP;AASH;;AAjBU;;AAmBfV,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IdHeader = void 0;\r\nconst Token = require(\"token-types\");\r\n/**\r\n * Opus ID Header parser\r\n * Ref: https://wiki.xiph.org/OggOpus#ID_Header\r\n */\r\nclass IdHeader {\r\n    constructor(len) {\r\n        this.len = len;\r\n        if (len < 19) {\r\n            throw new Error(\"ID-header-page 0 should be at least 19 bytes long\");\r\n        }\r\n    }\r\n    get(buf, off) {\r\n        return {\r\n            magicSignature: new Token.StringType(8, 'ascii').get(buf, off + 0),\r\n            version: buf.readUInt8(off + 8),\r\n            channelCount: buf.readUInt8(off + 9),\r\n            preSkip: buf.readInt16LE(off + 10),\r\n            inputSampleRate: buf.readInt32LE(off + 12),\r\n            outputGain: buf.readInt16LE(off + 16),\r\n            channelMapping: buf.readUInt8(off + 18)\r\n        };\r\n    }\r\n}\r\nexports.IdHeader = IdHeader;\r\n"]},"metadata":{},"sourceType":"script"}