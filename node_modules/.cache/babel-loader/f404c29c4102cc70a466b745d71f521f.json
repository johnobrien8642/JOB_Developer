{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/feeds/User_Post_Show.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport PostUpdateOrShow from '../posts/types/showOrUpdate/PostUpdateOrShow';\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostLoading from '../nav/Post_Loading';\nimport FollowButton from '../posts/util/components/social/Follow_Button';\nimport Queries from '../../graphql/queries.js';\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  FETCH_POST\n} = Queries;\nconst {\n  handlePostClassName\n} = PostShowUtil;\n\nconst UserPostShow = () => {\n  _s();\n\n  let [uploading, setUploading] = useState(false);\n  let {\n    postId\n  } = useParams();\n  let {\n    loading,\n    error,\n    data\n  } = useQuery(FETCH_POST, {\n    variables: {\n      query: postId\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`;\n\n  if (data) {\n    const {\n      post\n    } = data;\n\n    if (uploading) {\n      return /*#__PURE__*/_jsxDEV(PostLoading, {\n        uploading: uploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    } else {\n      if (post.kind === 'Repost') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postShow\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"backBtn\",\n            to: \"/dashboard\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: handlePostClassName(post),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"userRepostShowHeader\",\n              children: [/*#__PURE__*/_jsxDEV(ProfilePic, {\n                user: post.post.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"repostHeaderContainer\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"user\",\n                  to: `/view/blog/${post.user.blogName}`,\n                  children: post.user.blogName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"iconRepostedAndFollowContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"repostedFrom\",\n                    to: `/view/blog/${post.repostedFrom.blogName}`,\n                    children: post.user.blogName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(FollowButton, {\n                    feed: true,\n                    user: post.repostedFrom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(PostUpdateOrShow, {\n              post: post,\n              repostFormBool: false,\n              uploading: uploading,\n              setUploading: setUploading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)]\n          }, post._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postShow\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: handlePostClassName(post),\n            children: /*#__PURE__*/_jsxDEV(PostUpdateOrShow, {\n              post: post,\n              uploading: uploading,\n              setUploading: setUploading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n};\n\n_s(UserPostShow, \"bke2H90MGseOxonDTQEZxgJuJIs=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = UserPostShow;\nexport default UserPostShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPostShow\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/feeds/User_Post_Show.js"],"names":["React","useState","Link","useQuery","useParams","PostUpdateOrShow","ProfilePic","PostLoading","FollowButton","Queries","PostShowUtil","FETCH_POST","handlePostClassName","UserPostShow","uploading","setUploading","postId","loading","error","data","variables","query","post","kind","user","blogName","repostedFrom","_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\n\nimport PostUpdateOrShow from '../posts/types/showOrUpdate/PostUpdateOrShow'\nimport ProfilePic from '../user/util/components/Profile_Pic';\nimport PostLoading from '../nav/Post_Loading';\nimport FollowButton from '../posts/util/components/social/Follow_Button';\n\nimport Queries from '../../graphql/queries.js';\nimport PostShowUtil from '../posts/util/functions/post_show_util.js';\nconst { FETCH_POST } = Queries;\nconst { handlePostClassName } = PostShowUtil;\n\n\nconst UserPostShow = () => {\n  let [uploading, setUploading] = useState(false)\n  let { postId } = useParams();\n\n  let { loading, error, data, } = useQuery(FETCH_POST, {\n    variables: {\n      query: postId\n    }\n  })\n\n  if (loading) return 'Loading...'\n  if (error) return `Error: ${error}`;\n\n  if (data) {\n    const { post } = data;\n  \n    if (uploading) {\n      return (\n        <PostLoading uploading={uploading} />\n      )\n    } else {\n      if (post.kind === 'Repost') {\n        return (\n          <div\n            className='postShow'\n          >\n\n          <Link\n            className='backBtn'\n            to='/dashboard'\n          >\n            Back\n          </Link>\n\n          <div\n            className={handlePostClassName(post)}\n            key={post._id}\n          >\n            \n            <div\n              className='userRepostShowHeader'\n            >\n              <ProfilePic\n                user={post.post.user}\n              />\n              <span\n                className='repostHeaderContainer'\n              >\n                <Link \n                  className='user'\n                  to={`/view/blog/${post.user.blogName}`}>\n                  {post.user.blogName}\n                </Link>\n    \n                <div\n                  className='iconRepostedAndFollowContainer'\n                >\n                  <img\n                    src=\"https://img.icons8.com/material-two-tone/24/ffffff/retweet.png\"\n                    alt=''\n                  />\n                  <Link\n                    className='repostedFrom'\n                    to={`/view/blog/${post.repostedFrom.blogName}`}\n                  >\n                    {post.user.blogName}\n                  </Link>\n                  <FollowButton\n                    feed={true}\n                    user={post.repostedFrom}\n                  />\n                </div>\n              </span>\n            </div>\n    \n            <PostUpdateOrShow\n              post={post}\n              repostFormBool={false}\n              uploading={uploading}\n              setUploading={setUploading}\n            />\n          </div>\n        </div>\n        )\n      } else {\n        return (\n          <div\n            className='postShow'\n          >\n\n            <Link\n              to='/dashboard'\n            >\n              Back\n            </Link>\n            \n            <div\n              className={handlePostClassName(post)}\n              key={post._id}\n            >\n              <PostUpdateOrShow\n                post={post}\n                uploading={uploading}\n                setUploading={setUploading}\n              />\n            </div>\n          </div>\n        )\n      }\n    }\n  }\n}\n\nexport default UserPostShow;"]},"metadata":{},"sourceType":"module"}