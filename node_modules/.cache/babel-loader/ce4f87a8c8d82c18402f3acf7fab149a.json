{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IdentificationHeader = exports.CommonHeader = exports.VorbisPictureToken = void 0;\n\nconst Token = require(\"token-types\");\n\nconst ID3v2Token_1 = require(\"../../id3v2/ID3v2Token\");\n/**\r\n * Parse the METADATA_BLOCK_PICTURE\r\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\r\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\r\n * // ToDo: move to ID3 / APIC?\r\n */\n\n\nclass VorbisPictureToken {\n  constructor(len) {\n    this.len = len;\n  }\n\n  static fromBase64(base64str) {\n    return this.fromBuffer(Buffer.from(base64str, 'base64'));\n  }\n\n  static fromBuffer(buffer) {\n    const pic = new VorbisPictureToken(buffer.length);\n    return pic.get(buffer, 0);\n  }\n\n  get(buffer, offset) {\n    const type = ID3v2Token_1.AttachedPictureType[Token.UINT32_BE.get(buffer, offset)];\n    const mimeLen = Token.UINT32_BE.get(buffer, offset += 4);\n    const format = buffer.toString('utf-8', offset += 4, offset + mimeLen);\n    const descLen = Token.UINT32_BE.get(buffer, offset += mimeLen);\n    const description = buffer.toString('utf-8', offset += 4, offset + descLen);\n    const width = Token.UINT32_BE.get(buffer, offset += descLen);\n    const height = Token.UINT32_BE.get(buffer, offset += 4);\n    const colour_depth = Token.UINT32_BE.get(buffer, offset += 4);\n    const indexed_color = Token.UINT32_BE.get(buffer, offset += 4);\n    const picDataLen = Token.UINT32_BE.get(buffer, offset += 4);\n    const data = Buffer.from(buffer.slice(offset += 4, offset + picDataLen));\n    return {\n      type,\n      format,\n      description,\n      width,\n      height,\n      colour_depth,\n      indexed_color,\n      data\n    };\n  }\n\n}\n\nexports.VorbisPictureToken = VorbisPictureToken;\n/**\r\n * Comment header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\r\n */\n\nexports.CommonHeader = {\n  len: 7,\n  get: (buf, off) => {\n    return {\n      packetType: buf.readUInt8(off),\n      vorbis: new Token.StringType(6, 'ascii').get(buf, off + 1)\n    };\n  }\n};\n/**\r\n * Identification header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\r\n */\n\nexports.IdentificationHeader = {\n  len: 23,\n  get: (buf, off) => {\n    return {\n      version: buf.readUInt32LE(off + 0),\n      channelMode: buf.readUInt8(off + 4),\n      sampleRate: buf.readUInt32LE(off + 5),\n      bitrateMax: buf.readUInt32LE(off + 9),\n      bitrateNominal: buf.readUInt32LE(off + 13),\n      bitrateMin: buf.readUInt32LE(off + 17)\n    };\n  }\n};","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js"],"names":["Object","defineProperty","exports","value","IdentificationHeader","CommonHeader","VorbisPictureToken","Token","require","ID3v2Token_1","constructor","len","fromBase64","base64str","fromBuffer","Buffer","from","buffer","pic","length","get","offset","type","AttachedPictureType","UINT32_BE","mimeLen","format","toString","descLen","description","width","height","colour_depth","indexed_color","picDataLen","data","slice","buf","off","packetType","readUInt8","vorbis","StringType","version","readUInt32LE","channelMode","sampleRate","bitrateMax","bitrateNominal","bitrateMin"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IdentificationHeader = exports.CommonHeader = exports.VorbisPictureToken = void 0;\r\nconst Token = require(\"token-types\");\r\nconst ID3v2Token_1 = require(\"../../id3v2/ID3v2Token\");\r\n/**\r\n * Parse the METADATA_BLOCK_PICTURE\r\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\r\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\r\n * // ToDo: move to ID3 / APIC?\r\n */\r\nclass VorbisPictureToken {\r\n    constructor(len) {\r\n        this.len = len;\r\n    }\r\n    static fromBase64(base64str) {\r\n        return this.fromBuffer(Buffer.from(base64str, 'base64'));\r\n    }\r\n    static fromBuffer(buffer) {\r\n        const pic = new VorbisPictureToken(buffer.length);\r\n        return pic.get(buffer, 0);\r\n    }\r\n    get(buffer, offset) {\r\n        const type = ID3v2Token_1.AttachedPictureType[Token.UINT32_BE.get(buffer, offset)];\r\n        const mimeLen = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const format = buffer.toString('utf-8', offset += 4, offset + mimeLen);\r\n        const descLen = Token.UINT32_BE.get(buffer, offset += mimeLen);\r\n        const description = buffer.toString('utf-8', offset += 4, offset + descLen);\r\n        const width = Token.UINT32_BE.get(buffer, offset += descLen);\r\n        const height = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const colour_depth = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const indexed_color = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const picDataLen = Token.UINT32_BE.get(buffer, offset += 4);\r\n        const data = Buffer.from(buffer.slice(offset += 4, offset + picDataLen));\r\n        return {\r\n            type,\r\n            format,\r\n            description,\r\n            width,\r\n            height,\r\n            colour_depth,\r\n            indexed_color,\r\n            data\r\n        };\r\n    }\r\n}\r\nexports.VorbisPictureToken = VorbisPictureToken;\r\n/**\r\n * Comment header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\r\n */\r\nexports.CommonHeader = {\r\n    len: 7,\r\n    get: (buf, off) => {\r\n        return {\r\n            packetType: buf.readUInt8(off),\r\n            vorbis: new Token.StringType(6, 'ascii').get(buf, off + 1)\r\n        };\r\n    }\r\n};\r\n/**\r\n * Identification header decoder\r\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\r\n */\r\nexports.IdentificationHeader = {\r\n    len: 23,\r\n    get: (buf, off) => {\r\n        return {\r\n            version: buf.readUInt32LE(off + 0),\r\n            channelMode: buf.readUInt8(off + 4),\r\n            sampleRate: buf.readUInt32LE(off + 5),\r\n            bitrateMax: buf.readUInt32LE(off + 9),\r\n            bitrateNominal: buf.readUInt32LE(off + 13),\r\n            bitrateMin: buf.readUInt32LE(off + 17)\r\n        };\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}