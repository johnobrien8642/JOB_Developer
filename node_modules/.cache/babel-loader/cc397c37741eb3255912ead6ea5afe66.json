{"ast":null,"code":"// ASF Objects\n'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _inherits = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WmPictureToken = exports.MetadataLibraryObjectState = exports.MetadataObjectState = exports.ExtendedStreamPropertiesObjectState = exports.ExtendedContentDescriptionObjectState = exports.ContentDescriptionObjectState = exports.readCodecEntries = exports.HeaderExtensionObject = exports.StreamPropertiesObject = exports.FilePropertiesObject = exports.IgnoreObjectState = exports.State = exports.HeaderObjectToken = exports.TopLevelHeaderObjectToken = exports.DataType = void 0;\n\nvar Util_1 = require(\"../common/Util\");\n\nvar Token = require(\"token-types\");\n\nvar GUID_1 = require(\"./GUID\");\n\nvar AsfUtil_1 = require(\"./AsfUtil\");\n\nvar ID3v2Token_1 = require(\"../id3v2/ID3v2Token\");\n/**\r\n * Data Type: Specifies the type of information being stored. The following values are recognized.\r\n */\n\n\nvar DataType;\n\n(function (DataType) {\n  /**\r\n   * Unicode string. The data consists of a sequence of Unicode characters.\r\n   */\n  DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\n  /**\r\n   * BYTE array. The type of data is implementation-specific.\r\n   */\n\n  DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\n  /**\r\n   * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\r\n   */\n\n  DataType[DataType[\"Bool\"] = 2] = \"Bool\";\n  /**\r\n   * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\r\n   */\n\n  DataType[DataType[\"DWord\"] = 3] = \"DWord\";\n  /**\r\n   * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\r\n   */\n\n  DataType[DataType[\"QWord\"] = 4] = \"QWord\";\n  /**\r\n   * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\r\n   */\n\n  DataType[DataType[\"Word\"] = 5] = \"Word\";\n})(DataType = exports.DataType || (exports.DataType = {}));\n/**\r\n * Token for: 3. ASF top-level Header Object\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\r\n */\n\n\nexports.TopLevelHeaderObjectToken = {\n  len: 30,\n  get: function get(buf, off) {\n    return {\n      objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n      objectSize: Token.UINT64_LE.get(buf, off + 16),\n      numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24) // Reserved: 2 bytes\n\n    };\n  }\n};\n/**\r\n * Token for: 3.1 Header Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\r\n */\n\nexports.HeaderObjectToken = {\n  len: 24,\n  get: function get(buf, off) {\n    return {\n      objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\n      objectSize: Token.UINT64_LE.get(buf, off + 16)\n    };\n  }\n};\n\nvar State = /*#__PURE__*/function () {\n  function State(header) {\n    _classCallCheck(this, State);\n\n    this.len = header.objectSize - exports.HeaderObjectToken.len;\n  }\n\n  _createClass(State, [{\n    key: \"postProcessTag\",\n    value: function postProcessTag(tags, name, valueType, data) {\n      if (name === 'WM/Picture') {\n        tags.push({\n          id: name,\n          value: WmPictureToken.fromBuffer(data)\n        });\n      } else {\n        var parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(valueType);\n\n        if (!parseAttr) {\n          throw new Error('unexpected value headerType: ' + valueType);\n        }\n\n        tags.push({\n          id: name,\n          value: parseAttr(data)\n        });\n      }\n    }\n  }]);\n\n  return State;\n}();\n\nexports.State = State; // ToDo: use ignore type\n\nvar IgnoreObjectState = /*#__PURE__*/function (_State) {\n  _inherits(IgnoreObjectState, _State);\n\n  var _super = _createSuper(IgnoreObjectState);\n\n  function IgnoreObjectState(header) {\n    _classCallCheck(this, IgnoreObjectState);\n\n    return _super.call(this, header);\n  }\n\n  _createClass(IgnoreObjectState, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      return null;\n    }\n  }]);\n\n  return IgnoreObjectState;\n}(State);\n\nexports.IgnoreObjectState = IgnoreObjectState;\n/**\r\n * Token for: 3.2: File Properties Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\r\n */\n\nvar FilePropertiesObject = /*#__PURE__*/function (_State2) {\n  _inherits(FilePropertiesObject, _State2);\n\n  var _super2 = _createSuper(FilePropertiesObject);\n\n  function FilePropertiesObject(header) {\n    _classCallCheck(this, FilePropertiesObject);\n\n    return _super2.call(this, header);\n  }\n\n  _createClass(FilePropertiesObject, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      return {\n        fileId: GUID_1.default.fromBin(buf, off),\n        fileSize: Token.UINT64_LE.get(buf, off + 16),\n        creationDate: Token.UINT64_LE.get(buf, off + 24),\n        dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n        playDuration: Token.UINT64_LE.get(buf, off + 40),\n        sendDuration: Token.UINT64_LE.get(buf, off + 48),\n        preroll: Token.UINT64_LE.get(buf, off + 56),\n        flags: {\n          broadcast: Util_1.default.strtokBITSET.get(buf, off + 64, 24),\n          seekable: Util_1.default.strtokBITSET.get(buf, off + 64, 25)\n        },\n        // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n        minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n        maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n        maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n      };\n    }\n  }]);\n\n  return FilePropertiesObject;\n}(State);\n\nexports.FilePropertiesObject = FilePropertiesObject;\nFilePropertiesObject.guid = GUID_1.default.FilePropertiesObject;\n/**\r\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\r\n */\n\nvar StreamPropertiesObject = /*#__PURE__*/function (_State3) {\n  _inherits(StreamPropertiesObject, _State3);\n\n  var _super3 = _createSuper(StreamPropertiesObject);\n\n  function StreamPropertiesObject(header) {\n    _classCallCheck(this, StreamPropertiesObject);\n\n    return _super3.call(this, header);\n  }\n\n  _createClass(StreamPropertiesObject, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      return {\n        streamType: GUID_1.default.decodeMediaType(GUID_1.default.fromBin(buf, off)),\n        errorCorrectionType: GUID_1.default.fromBin(buf, off + 8) // ToDo\n\n      };\n    }\n  }]);\n\n  return StreamPropertiesObject;\n}(State);\n\nexports.StreamPropertiesObject = StreamPropertiesObject;\nStreamPropertiesObject.guid = GUID_1.default.StreamPropertiesObject;\n/**\r\n * 3.4: Header Extension Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\r\n */\n\nvar HeaderExtensionObject = /*#__PURE__*/function () {\n  function HeaderExtensionObject() {\n    _classCallCheck(this, HeaderExtensionObject);\n\n    this.len = 22;\n  }\n\n  _createClass(HeaderExtensionObject, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      return {\n        reserved1: GUID_1.default.fromBin(buf, off),\n        reserved2: buf.readUInt16LE(off + 16),\n        extensionDataSize: buf.readUInt32LE(off + 18)\n      };\n    }\n  }]);\n\n  return HeaderExtensionObject;\n}();\n\nexports.HeaderExtensionObject = HeaderExtensionObject;\nHeaderExtensionObject.guid = GUID_1.default.HeaderExtensionObject;\n/**\r\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\r\n */\n\nvar CodecListObjectHeader = {\n  len: 20,\n  get: function get(buf, off) {\n    return {\n      entryCount: buf.readUInt16LE(off + 16)\n    };\n  }\n};\n\nfunction readString(_x) {\n  return _readString.apply(this, arguments);\n}\n/**\r\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\r\n */\n\n\nfunction _readString() {\n  _readString = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenizer) {\n    var length;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return tokenizer.readNumber(Token.UINT16_LE);\n\n          case 2:\n            length = _context.sent;\n            _context.next = 5;\n            return tokenizer.readToken(new Token.StringType(length * 2, 'utf16le'));\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent.replace('\\0', ''));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _readString.apply(this, arguments);\n}\n\nfunction readCodecEntries(_x2) {\n  return _readCodecEntries.apply(this, arguments);\n}\n\nfunction _readCodecEntries() {\n  _readCodecEntries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(tokenizer) {\n    var codecHeader, entries, i;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return tokenizer.readToken(CodecListObjectHeader);\n\n          case 2:\n            codecHeader = _context2.sent;\n            entries = [];\n            i = 0;\n\n          case 5:\n            if (!(i < codecHeader.entryCount)) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.t0 = entries;\n            _context2.next = 9;\n            return readCodecEntry(tokenizer);\n\n          case 9:\n            _context2.t1 = _context2.sent;\n\n            _context2.t0.push.call(_context2.t0, _context2.t1);\n\n          case 11:\n            ++i;\n            _context2.next = 5;\n            break;\n\n          case 14:\n            return _context2.abrupt(\"return\", entries);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _readCodecEntries.apply(this, arguments);\n}\n\nexports.readCodecEntries = readCodecEntries;\n\nfunction readInformation(_x3) {\n  return _readInformation.apply(this, arguments);\n}\n/**\r\n * Read Codec-Entries\r\n * @param tokenizer\r\n */\n\n\nfunction _readInformation() {\n  _readInformation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(tokenizer) {\n    var length, buf;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return tokenizer.readNumber(Token.UINT16_LE);\n\n          case 2:\n            length = _context3.sent;\n            buf = Buffer.alloc(length);\n            _context3.next = 6;\n            return tokenizer.readBuffer(buf);\n\n          case 6:\n            return _context3.abrupt(\"return\", buf);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _readInformation.apply(this, arguments);\n}\n\nfunction readCodecEntry(_x4) {\n  return _readCodecEntry.apply(this, arguments);\n}\n/**\r\n * 3.10 Content Description Object (optional, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\r\n */\n\n\nfunction _readCodecEntry() {\n  _readCodecEntry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(tokenizer) {\n    var type;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return tokenizer.readNumber(Token.UINT16_LE);\n\n          case 2:\n            type = _context4.sent;\n            _context4.t0 = {\n              videoCodec: (type & 0x0001) === 0x0001,\n              audioCodec: (type & 0x0002) === 0x0002\n            };\n            _context4.next = 6;\n            return readString(tokenizer);\n\n          case 6:\n            _context4.t1 = _context4.sent;\n            _context4.next = 9;\n            return readString(tokenizer);\n\n          case 9:\n            _context4.t2 = _context4.sent;\n            _context4.next = 12;\n            return readInformation(tokenizer);\n\n          case 12:\n            _context4.t3 = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              type: _context4.t0,\n              codecName: _context4.t1,\n              description: _context4.t2,\n              information: _context4.t3\n            });\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _readCodecEntry.apply(this, arguments);\n}\n\nvar ContentDescriptionObjectState = /*#__PURE__*/function (_State4) {\n  _inherits(ContentDescriptionObjectState, _State4);\n\n  var _super4 = _createSuper(ContentDescriptionObjectState);\n\n  function ContentDescriptionObjectState(header) {\n    _classCallCheck(this, ContentDescriptionObjectState);\n\n    return _super4.call(this, header);\n  }\n\n  _createClass(ContentDescriptionObjectState, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      var tags = [];\n      var pos = off + 10;\n\n      for (var i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n        var length = buf.readUInt16LE(off + i * 2);\n\n        if (length > 0) {\n          var tagName = ContentDescriptionObjectState.contentDescTags[i];\n          var end = pos + length;\n          tags.push({\n            id: tagName,\n            value: AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, end))\n          });\n          pos = end;\n        }\n      }\n\n      return tags;\n    }\n  }]);\n\n  return ContentDescriptionObjectState;\n}(State);\n\nexports.ContentDescriptionObjectState = ContentDescriptionObjectState;\nContentDescriptionObjectState.guid = GUID_1.default.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\r\n * 3.11 Extended Content Description Object (optional, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\r\n */\n\nvar ExtendedContentDescriptionObjectState = /*#__PURE__*/function (_State5) {\n  _inherits(ExtendedContentDescriptionObjectState, _State5);\n\n  var _super5 = _createSuper(ExtendedContentDescriptionObjectState);\n\n  function ExtendedContentDescriptionObjectState(header) {\n    _classCallCheck(this, ExtendedContentDescriptionObjectState);\n\n    return _super5.call(this, header);\n  }\n\n  _createClass(ExtendedContentDescriptionObjectState, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      var tags = [];\n      var attrCount = buf.readUInt16LE(off);\n      var pos = off + 2;\n\n      for (var i = 0; i < attrCount; i += 1) {\n        var nameLen = buf.readUInt16LE(pos);\n        pos += 2;\n        var name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n        pos += nameLen;\n        var valueType = buf.readUInt16LE(pos);\n        pos += 2;\n        var valueLen = buf.readUInt16LE(pos);\n        pos += 2;\n        var value = buf.slice(pos, pos + valueLen);\n        pos += valueLen;\n        this.postProcessTag(tags, name, valueType, value);\n      }\n\n      return tags;\n    }\n  }]);\n\n  return ExtendedContentDescriptionObjectState;\n}(State);\n\nexports.ExtendedContentDescriptionObjectState = ExtendedContentDescriptionObjectState;\nExtendedContentDescriptionObjectState.guid = GUID_1.default.ExtendedContentDescriptionObject;\n/**\r\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\r\n */\n\nvar ExtendedStreamPropertiesObjectState = /*#__PURE__*/function (_State6) {\n  _inherits(ExtendedStreamPropertiesObjectState, _State6);\n\n  var _super6 = _createSuper(ExtendedStreamPropertiesObjectState);\n\n  function ExtendedStreamPropertiesObjectState(header) {\n    _classCallCheck(this, ExtendedStreamPropertiesObjectState);\n\n    return _super6.call(this, header);\n  }\n\n  _createClass(ExtendedStreamPropertiesObjectState, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      return {\n        startTime: Token.UINT64_LE.get(buf, off),\n        endTime: Token.UINT64_LE.get(buf, off + 8),\n        dataBitrate: buf.readInt32LE(off + 12),\n        bufferSize: buf.readInt32LE(off + 16),\n        initialBufferFullness: buf.readInt32LE(off + 20),\n        alternateDataBitrate: buf.readInt32LE(off + 24),\n        alternateBufferSize: buf.readInt32LE(off + 28),\n        alternateInitialBufferFullness: buf.readInt32LE(off + 32),\n        maximumObjectSize: buf.readInt32LE(off + 36),\n        flags: {\n          reliableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 0),\n          seekableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 1),\n          resendLiveCleanpointsFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 2)\n        },\n        // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n        streamNumber: buf.readInt16LE(off + 42),\n        streamLanguageId: buf.readInt16LE(off + 44),\n        averageTimePerFrame: buf.readInt32LE(off + 52),\n        streamNameCount: buf.readInt32LE(off + 54),\n        payloadExtensionSystems: buf.readInt32LE(off + 56),\n        streamNames: [],\n        streamPropertiesObject: null\n      };\n    }\n  }]);\n\n  return ExtendedStreamPropertiesObjectState;\n}(State);\n\nexports.ExtendedStreamPropertiesObjectState = ExtendedStreamPropertiesObjectState;\nExtendedStreamPropertiesObjectState.guid = GUID_1.default.ExtendedStreamPropertiesObject;\n/**\r\n * 4.7  Metadata Object (optional, 0 or 1)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\r\n */\n\nvar MetadataObjectState = /*#__PURE__*/function (_State7) {\n  _inherits(MetadataObjectState, _State7);\n\n  var _super7 = _createSuper(MetadataObjectState);\n\n  function MetadataObjectState(header) {\n    _classCallCheck(this, MetadataObjectState);\n\n    return _super7.call(this, header);\n  }\n\n  _createClass(MetadataObjectState, [{\n    key: \"get\",\n    value: function get(buf, off) {\n      var tags = [];\n      var descriptionRecordsCount = buf.readUInt16LE(off);\n      var pos = off + 2;\n\n      for (var i = 0; i < descriptionRecordsCount; i += 1) {\n        pos += 4;\n        var nameLen = buf.readUInt16LE(pos);\n        pos += 2;\n        var dataType = buf.readUInt16LE(pos);\n        pos += 2;\n        var dataLen = buf.readUInt32LE(pos);\n        pos += 4;\n        var name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\n        pos += nameLen;\n        var data = buf.slice(pos, pos + dataLen);\n        pos += dataLen;\n        var parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(dataType);\n\n        if (!parseAttr) {\n          throw new Error('unexpected value headerType: ' + dataType);\n        }\n\n        this.postProcessTag(tags, name, dataType, data);\n      }\n\n      return tags;\n    }\n  }]);\n\n  return MetadataObjectState;\n}(State);\n\nexports.MetadataObjectState = MetadataObjectState;\nMetadataObjectState.guid = GUID_1.default.MetadataObject; // 4.8\tMetadata Library Object (optional, 0 or 1)\n\nvar MetadataLibraryObjectState = /*#__PURE__*/function (_MetadataObjectState) {\n  _inherits(MetadataLibraryObjectState, _MetadataObjectState);\n\n  var _super8 = _createSuper(MetadataLibraryObjectState);\n\n  function MetadataLibraryObjectState(header) {\n    _classCallCheck(this, MetadataLibraryObjectState);\n\n    return _super8.call(this, header);\n  }\n\n  return MetadataLibraryObjectState;\n}(MetadataObjectState);\n\nexports.MetadataLibraryObjectState = MetadataLibraryObjectState;\nMetadataLibraryObjectState.guid = GUID_1.default.MetadataLibraryObject;\n/**\r\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\r\n */\n\nvar WmPictureToken = /*#__PURE__*/function () {\n  function WmPictureToken(len) {\n    _classCallCheck(this, WmPictureToken);\n\n    this.len = len;\n  }\n\n  _createClass(WmPictureToken, [{\n    key: \"get\",\n    value: function get(buffer, offset) {\n      var typeId = buffer.readUInt8(offset++);\n      var size = buffer.readInt32LE(offset);\n      var index = 5;\n\n      while (buffer.readUInt16BE(index) !== 0) {\n        index += 2;\n      }\n\n      var format = buffer.slice(5, index).toString('utf16le');\n\n      while (buffer.readUInt16BE(index) !== 0) {\n        index += 2;\n      }\n\n      var description = buffer.slice(5, index).toString('utf16le');\n      return {\n        type: ID3v2Token_1.AttachedPictureType[typeId],\n        format: format,\n        description: description,\n        size: size,\n        data: buffer.slice(index + 4)\n      };\n    }\n  }], [{\n    key: \"fromBase64\",\n    value: function fromBase64(base64str) {\n      return this.fromBuffer(Buffer.from(base64str, 'base64'));\n    }\n  }, {\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      var pic = new WmPictureToken(buffer.length);\n      return pic.get(buffer, 0);\n    }\n  }]);\n\n  return WmPictureToken;\n}();\n\nexports.WmPictureToken = WmPictureToken;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/asf/AsfObject.js"],"names":["Object","defineProperty","exports","value","WmPictureToken","MetadataLibraryObjectState","MetadataObjectState","ExtendedStreamPropertiesObjectState","ExtendedContentDescriptionObjectState","ContentDescriptionObjectState","readCodecEntries","HeaderExtensionObject","StreamPropertiesObject","FilePropertiesObject","IgnoreObjectState","State","HeaderObjectToken","TopLevelHeaderObjectToken","DataType","Util_1","require","Token","GUID_1","AsfUtil_1","ID3v2Token_1","len","get","buf","off","objectId","default","fromBin","BufferType","objectSize","UINT64_LE","numberOfHeaderObjects","UINT32_LE","header","tags","name","valueType","data","push","id","fromBuffer","parseAttr","AsfUtil","getParserForAttr","Error","fileId","fileSize","creationDate","dataPacketsCount","playDuration","sendDuration","preroll","flags","broadcast","strtokBITSET","seekable","minimumDataPacketSize","maximumDataPacketSize","maximumBitrate","guid","streamType","decodeMediaType","errorCorrectionType","reserved1","reserved2","readUInt16LE","extensionDataSize","readUInt32LE","CodecListObjectHeader","entryCount","readString","tokenizer","readNumber","UINT16_LE","length","readToken","StringType","replace","codecHeader","entries","i","readCodecEntry","readInformation","Buffer","alloc","readBuffer","type","videoCodec","audioCodec","codecName","description","information","pos","contentDescTags","tagName","end","parseUnicodeAttr","slice","ContentDescriptionObject","attrCount","nameLen","valueLen","postProcessTag","ExtendedContentDescriptionObject","startTime","endTime","dataBitrate","readInt32LE","bufferSize","initialBufferFullness","alternateDataBitrate","alternateBufferSize","alternateInitialBufferFullness","maximumObjectSize","reliableFlag","seekableFlag","resendLiveCleanpointsFlag","streamNumber","readInt16LE","streamLanguageId","averageTimePerFrame","streamNameCount","payloadExtensionSystems","streamNames","streamPropertiesObject","ExtendedStreamPropertiesObject","descriptionRecordsCount","dataType","dataLen","MetadataObject","MetadataLibraryObject","buffer","offset","typeId","readUInt8","size","index","readUInt16BE","format","toString","AttachedPictureType","base64str","from","pic"],"mappings":"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","sourcesContent":["// ASF Objects\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WmPictureToken = exports.MetadataLibraryObjectState = exports.MetadataObjectState = exports.ExtendedStreamPropertiesObjectState = exports.ExtendedContentDescriptionObjectState = exports.ContentDescriptionObjectState = exports.readCodecEntries = exports.HeaderExtensionObject = exports.StreamPropertiesObject = exports.FilePropertiesObject = exports.IgnoreObjectState = exports.State = exports.HeaderObjectToken = exports.TopLevelHeaderObjectToken = exports.DataType = void 0;\r\nconst Util_1 = require(\"../common/Util\");\r\nconst Token = require(\"token-types\");\r\nconst GUID_1 = require(\"./GUID\");\r\nconst AsfUtil_1 = require(\"./AsfUtil\");\r\nconst ID3v2Token_1 = require(\"../id3v2/ID3v2Token\");\r\n/**\r\n * Data Type: Specifies the type of information being stored. The following values are recognized.\r\n */\r\nvar DataType;\r\n(function (DataType) {\r\n    /**\r\n     * Unicode string. The data consists of a sequence of Unicode characters.\r\n     */\r\n    DataType[DataType[\"UnicodeString\"] = 0] = \"UnicodeString\";\r\n    /**\r\n     * BYTE array. The type of data is implementation-specific.\r\n     */\r\n    DataType[DataType[\"ByteArray\"] = 1] = \"ByteArray\";\r\n    /**\r\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\r\n     */\r\n    DataType[DataType[\"Bool\"] = 2] = \"Bool\";\r\n    /**\r\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\r\n     */\r\n    DataType[DataType[\"DWord\"] = 3] = \"DWord\";\r\n    /**\r\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\r\n     */\r\n    DataType[DataType[\"QWord\"] = 4] = \"QWord\";\r\n    /**\r\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\r\n     */\r\n    DataType[DataType[\"Word\"] = 5] = \"Word\";\r\n})(DataType = exports.DataType || (exports.DataType = {}));\r\n/**\r\n * Token for: 3. ASF top-level Header Object\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\r\n */\r\nexports.TopLevelHeaderObjectToken = {\r\n    len: 30,\r\n    get: (buf, off) => {\r\n        return {\r\n            objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\r\n            objectSize: Token.UINT64_LE.get(buf, off + 16),\r\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\r\n            // Reserved: 2 bytes\r\n        };\r\n    }\r\n};\r\n/**\r\n * Token for: 3.1 Header Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\r\n */\r\nexports.HeaderObjectToken = {\r\n    len: 24,\r\n    get: (buf, off) => {\r\n        return {\r\n            objectId: GUID_1.default.fromBin(new Token.BufferType(16).get(buf, off)),\r\n            objectSize: Token.UINT64_LE.get(buf, off + 16)\r\n        };\r\n    }\r\n};\r\nclass State {\r\n    constructor(header) {\r\n        this.len = header.objectSize - exports.HeaderObjectToken.len;\r\n    }\r\n    postProcessTag(tags, name, valueType, data) {\r\n        if (name === 'WM/Picture') {\r\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\r\n        }\r\n        else {\r\n            const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(valueType);\r\n            if (!parseAttr) {\r\n                throw new Error('unexpected value headerType: ' + valueType);\r\n            }\r\n            tags.push({ id: name, value: parseAttr(data) });\r\n        }\r\n    }\r\n}\r\nexports.State = State;\r\n// ToDo: use ignore type\r\nclass IgnoreObjectState extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        return null;\r\n    }\r\n}\r\nexports.IgnoreObjectState = IgnoreObjectState;\r\n/**\r\n * Token for: 3.2: File Properties Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\r\n */\r\nclass FilePropertiesObject extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        return {\r\n            fileId: GUID_1.default.fromBin(buf, off),\r\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\r\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\r\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\r\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\r\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\r\n            preroll: Token.UINT64_LE.get(buf, off + 56),\r\n            flags: {\r\n                broadcast: Util_1.default.strtokBITSET.get(buf, off + 64, 24),\r\n                seekable: Util_1.default.strtokBITSET.get(buf, off + 64, 25)\r\n            },\r\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\r\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\r\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\r\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\r\n        };\r\n    }\r\n}\r\nexports.FilePropertiesObject = FilePropertiesObject;\r\nFilePropertiesObject.guid = GUID_1.default.FilePropertiesObject;\r\n/**\r\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\r\n */\r\nclass StreamPropertiesObject extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        return {\r\n            streamType: GUID_1.default.decodeMediaType(GUID_1.default.fromBin(buf, off)),\r\n            errorCorrectionType: GUID_1.default.fromBin(buf, off + 8)\r\n            // ToDo\r\n        };\r\n    }\r\n}\r\nexports.StreamPropertiesObject = StreamPropertiesObject;\r\nStreamPropertiesObject.guid = GUID_1.default.StreamPropertiesObject;\r\n/**\r\n * 3.4: Header Extension Object (mandatory, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\r\n */\r\nclass HeaderExtensionObject {\r\n    constructor() {\r\n        this.len = 22;\r\n    }\r\n    get(buf, off) {\r\n        return {\r\n            reserved1: GUID_1.default.fromBin(buf, off),\r\n            reserved2: buf.readUInt16LE(off + 16),\r\n            extensionDataSize: buf.readUInt32LE(off + 18)\r\n        };\r\n    }\r\n}\r\nexports.HeaderExtensionObject = HeaderExtensionObject;\r\nHeaderExtensionObject.guid = GUID_1.default.HeaderExtensionObject;\r\n/**\r\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\r\n */\r\nconst CodecListObjectHeader = {\r\n    len: 20,\r\n    get: (buf, off) => {\r\n        return {\r\n            entryCount: buf.readUInt16LE(off + 16)\r\n        };\r\n    }\r\n};\r\nasync function readString(tokenizer) {\r\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\r\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf16le'))).replace('\\0', '');\r\n}\r\n/**\r\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\r\n */\r\nasync function readCodecEntries(tokenizer) {\r\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\r\n    const entries = [];\r\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\r\n        entries.push(await readCodecEntry(tokenizer));\r\n    }\r\n    return entries;\r\n}\r\nexports.readCodecEntries = readCodecEntries;\r\nasync function readInformation(tokenizer) {\r\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\r\n    const buf = Buffer.alloc(length);\r\n    await tokenizer.readBuffer(buf);\r\n    return buf;\r\n}\r\n/**\r\n * Read Codec-Entries\r\n * @param tokenizer\r\n */\r\nasync function readCodecEntry(tokenizer) {\r\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\r\n    return {\r\n        type: {\r\n            videoCodec: (type & 0x0001) === 0x0001,\r\n            audioCodec: (type & 0x0002) === 0x0002\r\n        },\r\n        codecName: await readString(tokenizer),\r\n        description: await readString(tokenizer),\r\n        information: await readInformation(tokenizer)\r\n    };\r\n}\r\n/**\r\n * 3.10 Content Description Object (optional, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\r\n */\r\nclass ContentDescriptionObjectState extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        const tags = [];\r\n        let pos = off + 10;\r\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\r\n            const length = buf.readUInt16LE(off + i * 2);\r\n            if (length > 0) {\r\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\r\n                const end = pos + length;\r\n                tags.push({ id: tagName, value: AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, end)) });\r\n                pos = end;\r\n            }\r\n        }\r\n        return tags;\r\n    }\r\n}\r\nexports.ContentDescriptionObjectState = ContentDescriptionObjectState;\r\nContentDescriptionObjectState.guid = GUID_1.default.ContentDescriptionObject;\r\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\r\n/**\r\n * 3.11 Extended Content Description Object (optional, one only)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\r\n */\r\nclass ExtendedContentDescriptionObjectState extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        const tags = [];\r\n        const attrCount = buf.readUInt16LE(off);\r\n        let pos = off + 2;\r\n        for (let i = 0; i < attrCount; i += 1) {\r\n            const nameLen = buf.readUInt16LE(pos);\r\n            pos += 2;\r\n            const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\r\n            pos += nameLen;\r\n            const valueType = buf.readUInt16LE(pos);\r\n            pos += 2;\r\n            const valueLen = buf.readUInt16LE(pos);\r\n            pos += 2;\r\n            const value = buf.slice(pos, pos + valueLen);\r\n            pos += valueLen;\r\n            this.postProcessTag(tags, name, valueType, value);\r\n        }\r\n        return tags;\r\n    }\r\n}\r\nexports.ExtendedContentDescriptionObjectState = ExtendedContentDescriptionObjectState;\r\nExtendedContentDescriptionObjectState.guid = GUID_1.default.ExtendedContentDescriptionObject;\r\n/**\r\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\r\n */\r\nclass ExtendedStreamPropertiesObjectState extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        return {\r\n            startTime: Token.UINT64_LE.get(buf, off),\r\n            endTime: Token.UINT64_LE.get(buf, off + 8),\r\n            dataBitrate: buf.readInt32LE(off + 12),\r\n            bufferSize: buf.readInt32LE(off + 16),\r\n            initialBufferFullness: buf.readInt32LE(off + 20),\r\n            alternateDataBitrate: buf.readInt32LE(off + 24),\r\n            alternateBufferSize: buf.readInt32LE(off + 28),\r\n            alternateInitialBufferFullness: buf.readInt32LE(off + 32),\r\n            maximumObjectSize: buf.readInt32LE(off + 36),\r\n            flags: {\r\n                reliableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 0),\r\n                seekableFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 1),\r\n                resendLiveCleanpointsFlag: Util_1.default.strtokBITSET.get(buf, off + 40, 2)\r\n            },\r\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\r\n            streamNumber: buf.readInt16LE(off + 42),\r\n            streamLanguageId: buf.readInt16LE(off + 44),\r\n            averageTimePerFrame: buf.readInt32LE(off + 52),\r\n            streamNameCount: buf.readInt32LE(off + 54),\r\n            payloadExtensionSystems: buf.readInt32LE(off + 56),\r\n            streamNames: [],\r\n            streamPropertiesObject: null\r\n        };\r\n    }\r\n}\r\nexports.ExtendedStreamPropertiesObjectState = ExtendedStreamPropertiesObjectState;\r\nExtendedStreamPropertiesObjectState.guid = GUID_1.default.ExtendedStreamPropertiesObject;\r\n/**\r\n * 4.7  Metadata Object (optional, 0 or 1)\r\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\r\n */\r\nclass MetadataObjectState extends State {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n    get(buf, off) {\r\n        const tags = [];\r\n        const descriptionRecordsCount = buf.readUInt16LE(off);\r\n        let pos = off + 2;\r\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\r\n            pos += 4;\r\n            const nameLen = buf.readUInt16LE(pos);\r\n            pos += 2;\r\n            const dataType = buf.readUInt16LE(pos);\r\n            pos += 2;\r\n            const dataLen = buf.readUInt32LE(pos);\r\n            pos += 4;\r\n            const name = AsfUtil_1.AsfUtil.parseUnicodeAttr(buf.slice(pos, pos + nameLen));\r\n            pos += nameLen;\r\n            const data = buf.slice(pos, pos + dataLen);\r\n            pos += dataLen;\r\n            const parseAttr = AsfUtil_1.AsfUtil.getParserForAttr(dataType);\r\n            if (!parseAttr) {\r\n                throw new Error('unexpected value headerType: ' + dataType);\r\n            }\r\n            this.postProcessTag(tags, name, dataType, data);\r\n        }\r\n        return tags;\r\n    }\r\n}\r\nexports.MetadataObjectState = MetadataObjectState;\r\nMetadataObjectState.guid = GUID_1.default.MetadataObject;\r\n// 4.8\tMetadata Library Object (optional, 0 or 1)\r\nclass MetadataLibraryObjectState extends MetadataObjectState {\r\n    constructor(header) {\r\n        super(header);\r\n    }\r\n}\r\nexports.MetadataLibraryObjectState = MetadataLibraryObjectState;\r\nMetadataLibraryObjectState.guid = GUID_1.default.MetadataLibraryObject;\r\n/**\r\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\r\n */\r\nclass WmPictureToken {\r\n    constructor(len) {\r\n        this.len = len;\r\n    }\r\n    static fromBase64(base64str) {\r\n        return this.fromBuffer(Buffer.from(base64str, 'base64'));\r\n    }\r\n    static fromBuffer(buffer) {\r\n        const pic = new WmPictureToken(buffer.length);\r\n        return pic.get(buffer, 0);\r\n    }\r\n    get(buffer, offset) {\r\n        const typeId = buffer.readUInt8(offset++);\r\n        const size = buffer.readInt32LE(offset);\r\n        let index = 5;\r\n        while (buffer.readUInt16BE(index) !== 0) {\r\n            index += 2;\r\n        }\r\n        const format = buffer.slice(5, index).toString('utf16le');\r\n        while (buffer.readUInt16BE(index) !== 0) {\r\n            index += 2;\r\n        }\r\n        const description = buffer.slice(5, index).toString('utf16le');\r\n        return {\r\n            type: ID3v2Token_1.AttachedPictureType[typeId],\r\n            format,\r\n            description,\r\n            size,\r\n            data: buffer.slice(index + 4)\r\n        };\r\n    }\r\n}\r\nexports.WmPictureToken = WmPictureToken;\r\n"]},"metadata":{},"sourceType":"script"}