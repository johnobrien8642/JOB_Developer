{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useLocation, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Mutations from '../../graphql/mutations';\nimport Queries from '../../graphql/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  LOGIN_USER\n} = Mutations;\nconst {\n  IS_LOGGED_IN\n} = Queries;\n\nconst Login = () => {\n  _s();\n\n  let [email, setEmail] = useState('');\n  let [password, setPassword] = useState('');\n  let [errorMessages, addErrorMessage] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    if (location.state) {\n      addErrorMessage(errorMessages.concat(location.state.errMessage));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  const [loginUser] = useMutation(LOGIN_USER, {\n    onError(error) {\n      error.graphQLErrors.forEach((error, i) => {\n        addErrorMessage(errorMessages.concat(error.message));\n      });\n    },\n\n    onCompleted({\n      loginUser\n    }) {\n      const {\n        token,\n        blogName\n      } = loginUser;\n      Cookies.set('auth-token', token);\n      Cookies.set('currentUser', blogName);\n      resetInputs();\n      window.location.reload();\n    },\n\n    update(client, {\n      data\n    }) {\n      client.writeQuery({\n        query: IS_LOGGED_IN,\n        data: {\n          isLoggedIn: data.loginUser.loggedIn\n        }\n      });\n    }\n\n  });\n\n  const resetInputs = () => {\n    setEmail(email = '');\n    setPassword(password = '');\n    addErrorMessage(errorMessages = []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greetingHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rumblr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to Rumblr, a clone of Tumblr using MongoDB, Express, React, Node, Apollo and GraphQL!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/johnobrien8642/Rumblr_MERNG\",\n        children: \"Go to Github repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        loginUser({\n          variables: {\n            email,\n            password\n          }\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errorMessages.map((error, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: error\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        placeholder: 'Email',\n        onChange: e => setEmail(email = e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: 'Password',\n        onChange: e => setPassword(password = e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Don't have an account? Sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ql+scsrskHH48xZlFp5Fyq4MrwI=\", false, function () {\n  return [useLocation, useMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/auth/Login.js"],"names":["React","useState","useEffect","useMutation","useLocation","Link","Cookies","Mutations","Queries","LOGIN_USER","IS_LOGGED_IN","Login","email","setEmail","password","setPassword","errorMessages","addErrorMessage","location","state","concat","errMessage","loginUser","onError","error","graphQLErrors","forEach","i","message","onCompleted","token","blogName","set","resetInputs","window","reload","update","client","data","writeQuery","query","isLoggedIn","loggedIn","e","preventDefault","variables","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useLocation, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport Mutations from '../../graphql/mutations'\nimport Queries from '../../graphql/queries'\nconst { LOGIN_USER } = Mutations;\nconst { IS_LOGGED_IN } = Queries;\n\nconst Login = () => {\n  let [ email, setEmail ] = useState('');\n  let [ password, setPassword ] = useState('');\n  let [ errorMessages, addErrorMessage ] = useState([]);\n  const location = useLocation();\n  \n  useEffect(() => {\n    if (location.state) {\n      addErrorMessage(errorMessages.concat(location.state.errMessage))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  \n  const [ loginUser ] = useMutation(LOGIN_USER, {\n    onError(error) {\n      error.graphQLErrors.forEach((error, i) => {\n        addErrorMessage(errorMessages.concat(error.message))\n      })\n    },\n    onCompleted({ loginUser }) {\n      const { token, blogName } = loginUser;\n      Cookies.set('auth-token', token)\n      Cookies.set('currentUser', blogName)\n      resetInputs();\n      window.location.reload();\n    },\n    update(client, { data }) {\n      client.writeQuery({\n        query: IS_LOGGED_IN,\n        data: {\n          isLoggedIn: data.loginUser.loggedIn,\n        }\n      })\n    }\n  })\n  \n  const resetInputs = () => {\n    setEmail(email = '');\n    setPassword(password = '');\n    addErrorMessage(errorMessages = []);\n  }\n\n  return (\n    <div\n      className='loginForm'\n    >\n      <div\n        className='greetingHeader'\n      >\n        <h1>Rumblr</h1>\n        <p>\n          Welcome to Rumblr, a clone of Tumblr using\n          MongoDB, Express, React, Node, Apollo and GraphQL!\n        </p>\n          <a \n            href={\"https://github.com/johnobrien8642/Rumblr_MERNG\"}\n          >\n            Go to Github repository\n          </a>\n      </div>\n\n\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          loginUser({\n            variables: {\n              email, \n              password \n            }\n          })\n        }}\n      >\n\n        <ul>\n          {errorMessages.map((error, i) => {\n            return <li key={i}>{error}</li>\n          })}\n        </ul>\n\n        <input\n          type='text'\n          value={email}\n          placeholder={'Email'}\n          onChange={e => setEmail(email = e.target.value)}\n        />\n        <input\n          type='password'\n          value={password}\n          placeholder={'Password'}\n          onChange={e => setPassword(password = e.target.value)}\n        />\n        <button \n          type='submit'\n        >\n          Login\n        </button>\n        <Link\n          to='/register'\n        >\n          Don't have an account? Sign up!\n        </Link>\n      </form>\n    </div>\n  )\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}