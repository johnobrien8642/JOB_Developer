{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/forms/inputTypes/Video_Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport PostFormUtil from '../../../functions/post_form_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  previewVideoFile,\n  previewVideoLink,\n  removeVideoObj\n} = PostFormUtil;\n\nconst VideoInput = ({\n  displayBodyImageAndTextInput,\n  setDisplayBodyImageAndTextInput,\n  post,\n  update,\n  videoFile,\n  setVideoFile,\n  videoObj,\n  setVideoObj,\n  objsToClean,\n  active,\n  setActive,\n  isLink,\n  setIsLink\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (post) {\n      //eslint-disable-next-line\n      setVideoObj(videoObj = post.videoLink.url); //eslint-disable-next-line\n\n      setActive(active = true);\n    }\n  }, []);\n  useEffect(() => {\n    if (Object.keys(videoFile).length !== 0 || Object.keys(videoObj).length !== 0) {\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true);\n    }\n  }, [videoFile, videoObj]);\n  useEffect(() => {\n    if (update && videoObj) {\n      var el = document.querySelector('.videoLinkInput');\n\n      if (el) {\n        el.value = '';\n      }\n    }\n  }, [videoObj, update]);\n\n  const renderUpdateFileInput = () => {\n    if (update) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videoFileInputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"videoFileInputCustomLabel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"videoIcon\",\n              src: \"https://img.icons8.com/nolan/64/camcorder-pro.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Upload a different video file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"videoFileInput\",\n            type: \"file\",\n            accept: \"video/*\",\n            onChange: e => {\n              previewVideoFile(e, post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, objsToClean);\n              document.getElementById('videoFileInput').value = '';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"linkContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"linkIcon\",\n            src: \"https://img.icons8.com/flat-round/64/000000/link--v1.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"videoLinkInput\",\n            placeholder: \"Paste a new url\",\n            onChange: e => {\n              previewVideoLink(e, post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, objsToClean);\n              setIsLink(isLink = true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"borderMiddle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  if (active) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoPlayerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"removeBtn\",\n        type: \"button\",\n        onClick: () => {\n          removeVideoObj(post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, isLink, setIsLink, objsToClean);\n          setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        width: '100%',\n        url: videoObj,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), renderUpdateFileInput()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoFileInputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"videoFileInputCustomLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"videoIcon\",\n            src: \"https://img.icons8.com/nolan/64/camcorder-pro.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upload a video file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"videoFileInput\",\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: e => {\n            previewVideoFile(e, post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, objsToClean);\n            document.getElementById('videoFileInput').value = '';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"linkContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"linkIcon\",\n          src: \"https://img.icons8.com/flat-round/64/000000/link--v1.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Paste a url...\",\n          onChange: e => {\n            previewVideoLink(e, post, videoObj, setVideoObj, videoFile, setVideoFile, active, setActive, objsToClean);\n            setIsLink(isLink = true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"borderMiddle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(VideoInput, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n\n_c = VideoInput;\nexport default VideoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoInput\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/posts/util/components/forms/inputTypes/Video_Input.js"],"names":["React","useEffect","ReactPlayer","PostFormUtil","previewVideoFile","previewVideoLink","removeVideoObj","VideoInput","displayBodyImageAndTextInput","setDisplayBodyImageAndTextInput","post","update","videoFile","setVideoFile","videoObj","setVideoObj","objsToClean","active","setActive","isLink","setIsLink","videoLink","url","Object","keys","length","el","document","querySelector","value","renderUpdateFileInput","e","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport ReactPlayer from 'react-player';\n\nimport PostFormUtil from '../../../functions/post_form_util.js'\nconst { previewVideoFile, previewVideoLink, \n        removeVideoObj } = PostFormUtil;\n\nconst VideoInput = ({\n  displayBodyImageAndTextInput,\n  setDisplayBodyImageAndTextInput,\n  post,\n  update,\n  videoFile,\n  setVideoFile,\n  videoObj, \n  setVideoObj,\n  objsToClean,\n  active, \n  setActive,\n  isLink, \n  setIsLink\n}) => {\n\n  useEffect(() => {\n    if (post) {\n      //eslint-disable-next-line\n      setVideoObj(videoObj = post.videoLink.url)\n      //eslint-disable-next-line\n      setActive(active = true)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (\n        Object.keys(videoFile).length !== 0 || \n        Object.keys(videoObj).length !== 0\n      ) {\n\n      //eslint-disable-next-line\n      setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = true)\n    }\n  }, [videoFile, videoObj])\n\n  useEffect(() => {\n    if (update && videoObj) {\n      var el = document.querySelector('.videoLinkInput')\n\n      if (el) {\n        el.value = ''\n      }\n    }\n  }, [videoObj, update])\n\n  const renderUpdateFileInput = () => {\n    if (update) {\n      return (\n        <div\n          className='videoFileInputContainer'\n        >\n          <label\n            className='videoFileInputCustomLabel'\n          >\n          <div>\n            <img \n              className='videoIcon'\n              src=\"https://img.icons8.com/nolan/64/camcorder-pro.png\"\n              alt=''\n            />\n            <span>Upload a different video file</span>\n          </div>\n          <input\n            id='videoFileInput'\n            type='file'\n            accept='video/*'\n            onChange={e => {\n              previewVideoFile(\n                e,\n                post,\n                videoObj,\n                setVideoObj,\n                videoFile,\n                setVideoFile,\n                active, \n                setActive,\n                objsToClean\n              )\n\n              document.getElementById('videoFileInput').value = ''\n            }}\n          />\n          </label>\n\n          <div\n            className='linkContainer'\n          >\n          <img \n            className='linkIcon'\n            src=\"https://img.icons8.com/flat-round/64/000000/link--v1.png\"\n            alt=''\n          />\n          <textarea\n            className='videoLinkInput'\n            placeholder='Paste a new url'\n            onChange={e => {\n              previewVideoLink(\n                e,\n                post,\n                videoObj,\n                setVideoObj,\n                videoFile,\n                setVideoFile,\n                active, \n                setActive,\n                objsToClean\n              )\n\n              setIsLink(isLink = true) \n            }}\n          ></textarea>\n          </div>\n          <div className='borderMiddle' />\n        </div>\n      )\n    }\n  }\n\n  if (active) {\n    return (\n      <div\n        className='videoPlayerContainer'\n      >\n        <button\n          className='removeBtn'\n          type='button'\n          onClick={() => {\n              removeVideoObj(\n              post,\n              videoObj,\n              setVideoObj,\n              videoFile,\n              setVideoFile,\n              active,\n              setActive,\n              isLink,\n              setIsLink,\n              objsToClean\n            )\n\n            setDisplayBodyImageAndTextInput(displayBodyImageAndTextInput = false)\n          }}\n        >\n          <span>x</span>\n        </button>\n        <ReactPlayer\n          width={'100%'}\n          url={videoObj}\n          controls\n        />\n        {renderUpdateFileInput()}\n      </div>\n    )\n  } else {\n    return(\n      <div\n        className='videoFileInputContainer'\n      >\n        <label\n          className='videoFileInputCustomLabel'\n        >\n          <div>\n            <img \n              className='videoIcon'\n              src=\"https://img.icons8.com/nolan/64/camcorder-pro.png\"\n              alt=''\n            />\n            <span>Upload a video file</span>\n          </div>\n          <input\n            id='videoFileInput'\n            type='file'\n            accept='video/*'\n            onChange={e => {\n              previewVideoFile(\n                e,\n                post,\n                videoObj,\n                setVideoObj,\n                videoFile,\n                setVideoFile,\n                active, \n                setActive,\n                objsToClean\n              )\n\n              document.getElementById('videoFileInput').value = ''\n            }}\n          />\n        </label>\n\n        <div\n          className='linkContainer'\n        >\n          <img \n            className='linkIcon'\n            src=\"https://img.icons8.com/flat-round/64/000000/link--v1.png\"\n            alt=''\n          />\n          <textarea\n            placeholder='Paste a url...'\n            onChange={e => {\n              previewVideoLink(\n                e,\n                post,\n                videoObj,\n                setVideoObj,\n                videoFile,\n                setVideoFile,\n                active,\n                setActive,\n                objsToClean\n              )\n\n              setIsLink(isLink = true)\n            }}\n          ></textarea>\n        </div>\n        <div  className='borderMiddle' />\n      </div>\n    )\n  }\n}\n\nexport default VideoInput;"]},"metadata":{},"sourceType":"module"}