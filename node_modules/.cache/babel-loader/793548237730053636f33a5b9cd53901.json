{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useMutation}from'@apollo/client';import{useLocation,Link}from'react-router-dom';import Cookies from'js-cookie';import Mutations from'../../graphql/mutations';import Queries from'../../graphql/queries';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LOGIN_USER=Mutations.LOGIN_USER;var IS_LOGGED_IN=Queries.IS_LOGGED_IN;var Login=function Login(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),errorMessages=_useState6[0],addErrorMessage=_useState6[1];var location=useLocation();useEffect(function(){if(location.state){addErrorMessage(errorMessages.concat(location.state.errMessage));}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var _useMutation=useMutation(LOGIN_USER,{onError:function onError(error){error.graphQLErrors.forEach(function(error,i){addErrorMessage(errorMessages.concat(error.message));});},onCompleted:function onCompleted(_ref){var loginUser=_ref.loginUser;var token=loginUser.token,blogName=loginUser.blogName;Cookies.set('auth-token',token);Cookies.set('currentUser',blogName);resetInputs();window.location.reload();},update:function update(client,_ref2){var data=_ref2.data;client.writeQuery({query:IS_LOGGED_IN,data:{isLoggedIn:data.loginUser.loggedIn}});}}),_useMutation2=_slicedToArray(_useMutation,1),loginUser=_useMutation2[0];var resetInputs=function resetInputs(){setEmail(email='');setPassword(password='');addErrorMessage(errorMessages=[]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"loginForm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"greetingHeader\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Rumblr\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Welcome to Rumblr, a clone of Tumblr using MongoDB, Express, React, Node, Apollo and GraphQL!\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/johnobrien8642/Rumblr_MERNG\",children:\"Go to Github repository\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();loginUser({variables:{email:email,password:password}});},children:[/*#__PURE__*/_jsx(\"ul\",{children:errorMessages.map(function(error,i){return/*#__PURE__*/_jsx(\"li\",{children:error},i);})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:email,placeholder:'Email',onChange:function onChange(e){return setEmail(email=e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,placeholder:'Password',onChange:function onChange(e){return setPassword(password=e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Don't have an account? Sign up!\"})]})]});};export default Login;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/auth/Login.js"],"names":["React","useState","useEffect","useMutation","useLocation","Link","Cookies","Mutations","Queries","LOGIN_USER","IS_LOGGED_IN","Login","email","setEmail","password","setPassword","errorMessages","addErrorMessage","location","state","concat","errMessage","onError","error","graphQLErrors","forEach","i","message","onCompleted","loginUser","token","blogName","set","resetInputs","window","reload","update","client","data","writeQuery","query","isLoggedIn","loggedIn","e","preventDefault","variables","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useLocation, Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport Mutations from '../../graphql/mutations'\nimport Queries from '../../graphql/queries'\nconst { LOGIN_USER } = Mutations;\nconst { IS_LOGGED_IN } = Queries;\n\nconst Login = () => {\n  let [ email, setEmail ] = useState('');\n  let [ password, setPassword ] = useState('');\n  let [ errorMessages, addErrorMessage ] = useState([]);\n  const location = useLocation();\n  \n  useEffect(() => {\n    if (location.state) {\n      addErrorMessage(errorMessages.concat(location.state.errMessage))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  \n  const [ loginUser ] = useMutation(LOGIN_USER, {\n    onError(error) {\n      error.graphQLErrors.forEach((error, i) => {\n        addErrorMessage(errorMessages.concat(error.message))\n      })\n    },\n    onCompleted({ loginUser }) {\n      const { token, blogName } = loginUser;\n      Cookies.set('auth-token', token)\n      Cookies.set('currentUser', blogName)\n      resetInputs();\n      window.location.reload();\n    },\n    update(client, { data }) {\n      client.writeQuery({\n        query: IS_LOGGED_IN,\n        data: {\n          isLoggedIn: data.loginUser.loggedIn,\n        }\n      })\n    }\n  })\n  \n  const resetInputs = () => {\n    setEmail(email = '');\n    setPassword(password = '');\n    addErrorMessage(errorMessages = []);\n  }\n\n  return (\n    <div\n      className='loginForm'\n    >\n      <div\n        className='greetingHeader'\n      >\n        <h1>Rumblr</h1>\n        <p>\n          Welcome to Rumblr, a clone of Tumblr using\n          MongoDB, Express, React, Node, Apollo and GraphQL!\n        </p>\n          <a \n            href={\"https://github.com/johnobrien8642/Rumblr_MERNG\"}\n          >\n            Go to Github repository\n          </a>\n      </div>\n\n\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          loginUser({\n            variables: {\n              email, \n              password \n            }\n          })\n        }}\n      >\n\n        <ul>\n          {errorMessages.map((error, i) => {\n            return <li key={i}>{error}</li>\n          })}\n        </ul>\n\n        <input\n          type='text'\n          value={email}\n          placeholder={'Email'}\n          onChange={e => setEmail(email = e.target.value)}\n        />\n        <input\n          type='password'\n          value={password}\n          placeholder={'Password'}\n          onChange={e => setPassword(password = e.target.value)}\n        />\n        <button \n          type='submit'\n        >\n          Login\n        </button>\n        <Link\n          to='/register'\n        >\n          Don't have an account? Sign up!\n        </Link>\n      </form>\n    </div>\n  )\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}