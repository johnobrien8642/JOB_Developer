{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useMutation}from'@apollo/client';import Cookies from'js-cookie';import Mutations from'../../../../graphql/mutations.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UPDATE_USER_PASSWORD=Mutations.UPDATE_USER_PASSWORD;var Password=function Password(_ref){var mobile=_ref.mobile;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),currentPW=_useState4[0],setCurrentPW=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newPassword=_useState6[0],setNewPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confNewPassword=_useState8[0],setConfNewPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),errorMessage=_useState10[0],setError=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),alert=_useState12[0],setAlert=_useState12[1];var _useMutation=useMutation(UPDATE_USER_PASSWORD,{onCompleted:function onCompleted(data){resetInputs();setAlert(alert='Password updated');setTimeout(function(){setAlert(alert='');},5000);setActive(active=false);},onError:function onError(error){setError(errorMessage=error.message);}}),_useMutation2=_slicedToArray(_useMutation,1),updateUserPassword=_useMutation2[0];var resetInputs=function resetInputs(){setCurrentPW(currentPW='');setNewPassword(newPassword='');setConfNewPassword(confNewPassword='');setError(errorMessage='');};var renderConfirmPW=function renderConfirmPW(){if(newPassword){return/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm new password\",value:confNewPassword,onChange:function onChange(e){setConfNewPassword(confNewPassword=e.target.value);}});}};if(active){return/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();if(newPassword===confNewPassword){updateUserPassword({variables:{currentPW:currentPW,newPassword:newPassword,user:Cookies.get('currentUser')}});}else{setError(errorMessage=\"Passwords don't match\");}},children:/*#__PURE__*/_jsxs(\"div\",{className:\"inputAndBtnContainer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Current password\",value:currentPW,onChange:function onChange(e){setCurrentPW(currentPW=e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New password\",value:newPassword,onChange:function onChange(e){setNewPassword(newPassword=e.target.value);}}),renderConfirmPW(),/*#__PURE__*/_jsx(\"p\",{className:\"errMessage\",children:errorMessage?\"\".concat(errorMessage):''}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"cancel\",type:\"button\",onClick:function onClick(){resetInputs();setActive(active=false);},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"save\",type:\"submit\",children:\"Save\"})]})]})});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"settingContainer\",children:[/*#__PURE__*/_jsx(\"p\",{children:alert?\"\".concat(alert):''}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",disabled:true,value:'password'}),/*#__PURE__*/_jsx(\"img\",{className:\"editPostBtn\",src:\"https://img.icons8.com/windows/64/000000/edit--v1.png\",alt:\"\",onClick:function onClick(){setActive(active=true);}})]});}};export default Password;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/user/util/components/Password.js"],"names":["React","useState","useMutation","Cookies","Mutations","UPDATE_USER_PASSWORD","Password","mobile","active","setActive","currentPW","setCurrentPW","newPassword","setNewPassword","confNewPassword","setConfNewPassword","errorMessage","setError","alert","setAlert","onCompleted","data","resetInputs","setTimeout","onError","error","message","updateUserPassword","renderConfirmPW","e","target","value","preventDefault","variables","user","get"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Mutations from '../../../../graphql/mutations.js';\nconst { UPDATE_USER_PASSWORD } = Mutations;\n\nconst Password = ({\n  mobile\n}) => {\n  let [active, setActive] = useState(false);\n  let [currentPW, setCurrentPW] = useState('');\n  let [newPassword, setNewPassword] = useState('');\n  let [confNewPassword, setConfNewPassword] = useState('');\n  let [errorMessage, setError] = useState(null)\n  let [alert, setAlert] = useState('')\n\n  let [updateUserPassword] = useMutation(UPDATE_USER_PASSWORD, {\n    onCompleted(data) {\n      resetInputs()\n      setAlert(alert = 'Password updated')\n      setTimeout(() => {\n        setAlert(alert = '')\n      }, 5000)\n      setActive(active = false)\n    },\n    onError(error) {\n      setError(errorMessage = error.message)\n    }\n  })\n\n  const resetInputs = () => {\n    setCurrentPW(currentPW = '')\n    setNewPassword(newPassword = '')\n    setConfNewPassword(confNewPassword = '')\n    setError(errorMessage = '')\n  }\n\n  const renderConfirmPW = () => {\n    if (newPassword) {\n      return (\n        <input\n          type='password'\n          placeholder='Confirm new password'\n          value={confNewPassword}\n          onChange={e => {\n            setConfNewPassword(confNewPassword = e.target.value)\n          }}\n        />\n      )\n    }\n  }\n\n  if (active) {\n    return (\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (newPassword === confNewPassword) {\n            updateUserPassword({\n              variables: {\n                currentPW: currentPW,\n                newPassword: newPassword,\n                user: Cookies.get('currentUser')\n              }\n            })\n          } else {\n            setError(errorMessage = \"Passwords don't match\")\n          }\n        }}\n      >\n        <div\n          className='inputAndBtnContainer'\n        >\n          <input\n            type='password'\n            placeholder='Current password'\n            value={currentPW}\n            onChange={e => {\n              setCurrentPW(currentPW = e.target.value)\n            }}\n          />\n          <input\n            type='password'\n            placeholder='New password'\n            value={newPassword}\n            onChange={e => {\n              setNewPassword(newPassword = e.target.value)\n            }}\n          />\n          {renderConfirmPW()}\n          <p\n            className='errMessage'\n          >{errorMessage ? `${errorMessage}` : ''}</p>\n          <div>\n            <button\n              className='cancel'\n              type='button'\n              onClick={() => {\n                resetInputs()\n                setActive(active = false)\n              }}\n            >Cancel</button>\n            <button\n              className='save'\n              type='submit'\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </form>\n    )\n  } else {\n    return (\n      <div\n        className='settingContainer'\n      >\n        <p>{alert ? `${alert}` : ''}</p>\n        <input\n            type='password'\n            disabled\n            value={'password'}\n          />\n        <img\n          className='editPostBtn'\n          src=\"https://img.icons8.com/windows/64/000000/edit--v1.png\"\n          alt=''\n          onClick={() => {\n            setActive(active = true)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Password;"]},"metadata":{},"sourceType":"module"}