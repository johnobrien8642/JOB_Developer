{"ast":null,"code":"var _jsxFileName = \"/Users/johnobrien/Desktop/JOB_Developer/client/src/components/user/util/components/Filter_Post_Content_Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\nimport Queries from '../../../../graphql/queries.js';\nimport Mutations from '../../../../graphql/mutations.js';\nimport UpdateCacheUtil from '../../../posts/util/functions/update_cache_util.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  filterPostContent\n} = UpdateCacheUtil;\nconst {\n  ADD_FILTER_POST_CONTENT,\n  DELETE_FILTER_POST_CONTENT\n} = Mutations;\nconst {\n  FETCH_USER\n} = Queries;\n\nconst FilterPostContentInput = ({\n  user\n}) => {\n  _s();\n\n  let [active, setActive] = useState(user.filteredPostContent.length > 0 ? true : false);\n  let [postContent, setPostContent] = useState('');\n  let [addFilterPostContent] = useMutation(ADD_FILTER_POST_CONTENT, {\n    update(client, {\n      data\n    }) {\n      const {\n        addFilterPostContent\n      } = data;\n      var currentUser = Cookies.get('currentUser');\n      var query = FETCH_USER;\n      filterPostContent(client, addFilterPostContent, currentUser, query);\n    },\n\n    onCompleted() {\n      setPostContent(postContent = '');\n    }\n\n  });\n  let [deleteFilterPostContent] = useMutation(DELETE_FILTER_POST_CONTENT, {\n    update(client, {\n      data\n    }) {\n      const {\n        deleteFilterPostContent\n      } = data;\n      var currentUser = Cookies.get('currentUser');\n      var query = FETCH_USER;\n      filterPostContent(client, deleteFilterPostContent, currentUser, query);\n    },\n\n    onCompleted() {\n      setPostContent(postContent = '');\n    }\n\n  });\n\n  if (active) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          addFilterPostContent({\n            variables: {\n              postContent: postContent,\n              user: Cookies.get('currentUser')\n            }\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filterTagInputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Filter content\",\n            value: postContent,\n            onChange: e => {\n              setPostContent(postContent = e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: postContent ? false : true,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: user.filteredPostContent.map((postContent, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"filteredTag\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: postContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                deleteFilterPostContent({\n                  variables: {\n                    postContent: postContent,\n                    user: Cookies.get('currentUser')\n                  }\n                });\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You're not filtering any post content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"editPostBtn\",\n        src: \"https://img.icons8.com/windows/64/000000/edit--v1.png\",\n        alt: \"\",\n        onClick: () => {\n          setActive(active = true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(FilterPostContentInput, \"4u3RFZZAfkXsgGqGayqY03hKFnk=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = FilterPostContentInput;\nexport default FilterPostContentInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterPostContentInput\");","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/src/components/user/util/components/Filter_Post_Content_Input.js"],"names":["React","useState","useMutation","Cookies","Queries","Mutations","UpdateCacheUtil","filterPostContent","ADD_FILTER_POST_CONTENT","DELETE_FILTER_POST_CONTENT","FETCH_USER","FilterPostContentInput","user","active","setActive","filteredPostContent","length","postContent","setPostContent","addFilterPostContent","update","client","data","currentUser","get","query","onCompleted","deleteFilterPostContent","e","preventDefault","variables","target","value","map","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Queries from '../../../../graphql/queries.js';\nimport Mutations from '../../../../graphql/mutations.js';\nimport UpdateCacheUtil from '../../../posts/util/functions/update_cache_util.js';\nconst { filterPostContent } = UpdateCacheUtil;\nconst { ADD_FILTER_POST_CONTENT, DELETE_FILTER_POST_CONTENT } = Mutations;\nconst { FETCH_USER } = Queries;\n\nconst FilterPostContentInput = ({\n  user\n}) => {\n  let [active, setActive] = useState(user.filteredPostContent.length > 0 ? true : false)\n  let [postContent, setPostContent] = useState('')\n\n  let [addFilterPostContent] = useMutation(ADD_FILTER_POST_CONTENT, {\n    update(client, { data }) {\n      const { addFilterPostContent } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER\n      \n      filterPostContent(client, addFilterPostContent, currentUser, query)\n    },\n    onCompleted() {\n      setPostContent(postContent = '')\n    }\n  })\n\n  let [deleteFilterPostContent] = useMutation(DELETE_FILTER_POST_CONTENT, {\n    update(client, { data }) {\n      const { deleteFilterPostContent } = data;\n      var currentUser = Cookies.get('currentUser')\n      var query = FETCH_USER\n      \n      filterPostContent(client, deleteFilterPostContent, currentUser, query)\n    },\n    onCompleted() {\n      setPostContent(postContent = '')\n    }\n  })\n\n  if (active) {\n    return (\n      <React.Fragment>\n        <form\n          onSubmit={e => {\n            e.preventDefault()\n    \n            addFilterPostContent({\n                variables: {\n                  postContent: postContent,\n                  user: Cookies.get('currentUser')\n                }\n              })\n            }}\n          >\n            <div\n              className='filterTagInputContainer'\n            >\n              <input\n                type='text'\n                placeholder='Filter content'\n                value={postContent}\n                onChange={e => {\n                  setPostContent(postContent = e.target.value)\n                }}\n              />\n              <button\n                type='submit'\n                disabled={postContent ? false : true}\n              >\n                Add\n              </button>\n            </div>\n          </form>\n        <ul>\n          {user.filteredPostContent.map((postContent, i) => {\n            return (\n              <li\n                className='filteredTag'\n                key={i}\n              >\n                <span>{postContent}</span>\n                <button\n                  type='button'\n                  onClick={() => {\n                    deleteFilterPostContent({\n                      variables: {\n                        postContent: postContent,\n                        user: Cookies.get('currentUser')\n                      }\n                    })\n                  }}\n                >\n                  Remove\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div\n        className='settingContainer'\n      >\n        <p>You're not filtering any post content</p>\n        <img\n          className='editPostBtn'\n          src=\"https://img.icons8.com/windows/64/000000/edit--v1.png\"\n          alt=''\n          onClick={() => {\n            setActive(active = true)\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default FilterPostContentInput;"]},"metadata":{},"sourceType":"module"}