{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useQuery}from'@apollo/client';import{Route,useHistory}from'react-router-dom';import Cookies from'js-cookie';import PostsNav from'../nav/Posts_Nav';import Feed from'../feeds/Feed.js';import PostRadar from'../dashboard/util/Post_Radar';import CheckOutTheseBlogs from'../dashboard/util/Check_Out_These_Blogs';import RepostForm from'../posts/util/components/social/Repost_Form';import Queries from'../../graphql/queries.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FETCH_USER=Queries.FETCH_USER;var Dashboard=function Dashboard(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),uploading=_useState2[0],setUploading=_useState2[1];var history=useHistory();var _useQuery=useQuery(FETCH_USER,{variables:{query:Cookies.get('currentUser')}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(loading)return'Loading...';if(error)return\"Error: \".concat(error);var user=data.user;return/*#__PURE__*/ (// <React.Fragment>\n_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(props.match.path,\"/repost/:blogName/:postId/:typename\"),component:RepostForm}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(props.match.path,\"/create\"),render:function render(props){return/*#__PURE__*/_jsx(PostsNav,{props:props,mobile:true,user:user});}}),/*#__PURE__*/_jsxs(\"div\",{className:\"column1\",children:[/*#__PURE__*/_jsx(PostsNav,{props:props,userLikes:history.location.pathname==='/likes'?true:false,user:user,uploading:uploading,setUploading:setUploading}),/*#__PURE__*/_jsx(Feed,{user:null,userLikes:history.location.pathname==='/likes'?true:false,currentUser:user,uploading:uploading,setUploading:setUploading})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"column2\",children:[/*#__PURE__*/_jsx(CheckOutTheseBlogs,{}),/*#__PURE__*/_jsx(PostRadar,{})]})]}));};export default Dashboard;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/dashboard/Dashboard.js"],"names":["React","useState","useQuery","Route","useHistory","Cookies","PostsNav","Feed","PostRadar","CheckOutTheseBlogs","RepostForm","Queries","FETCH_USER","Dashboard","props","uploading","setUploading","history","variables","query","get","loading","error","data","user","match","path","location","pathname"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,kBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,kBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,yCAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,6CAAvB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,C,wFACA,GAAQC,CAAAA,UAAR,CAAuBD,OAAvB,CAAQC,UAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,KAAK,CAAI,CACzB,cAAgCb,QAAQ,CAAC,KAAD,CAAxC,wCAAKc,SAAL,eAAgBC,YAAhB,eACA,GAAIC,CAAAA,OAAO,CAAGb,UAAU,EAAxB,CAEA,cAA+BF,QAAQ,CAACU,UAAD,CAAa,CAClDM,SAAS,CAAE,CACTC,KAAK,CAAEd,OAAO,CAACe,GAAR,CAAY,aAAZ,CADE,CADuC,CAAb,CAAvC,CAAMC,OAAN,WAAMA,OAAN,CAAeC,KAAf,WAAeA,KAAf,CAAsBC,IAAtB,WAAsBA,IAAtB,CAMA,GAAIF,OAAJ,CAAa,MAAO,YAAP,CACb,GAAIC,KAAJ,CAAW,uBAAiBA,KAAjB,EAEX,GAAQE,CAAAA,IAAR,CAAiBD,IAAjB,CAAQC,IAAR,CAEA,oBACE;AACA,aACE,SAAS,CAAC,WADZ,wBAGE,KAAC,KAAD,EACE,KAAK,KADP,CACQ,IAAI,WAAKV,KAAK,CAACW,KAAN,CAAYC,IAAjB,uCADZ,CAEE,SAAS,CAAEhB,UAFb,EAHF,cAOE,KAAC,KAAD,EACE,KAAK,KADP,CACQ,IAAI,WAAKI,KAAK,CAACW,KAAN,CAAYC,IAAjB,WADZ,CAEE,MAAM,CAAE,gBAACZ,KAAD,qBACN,KAAC,QAAD,EACE,KAAK,CAAEA,KADT,CAEE,MAAM,CAAE,IAFV,CAGE,IAAI,CAAEU,IAHR,EADM,EAFV,EAPF,cAkBE,aACE,SAAS,CAAC,SADZ,wBAGE,KAAC,QAAD,EACE,KAAK,CAAEV,KADT,CAEE,SAAS,CAAEG,OAAO,CAACU,QAAR,CAAiBC,QAAjB,GAA8B,QAA9B,CAAyC,IAAzC,CAAgD,KAF7D,CAGE,IAAI,CAAEJ,IAHR,CAIE,SAAS,CAAET,SAJb,CAKE,YAAY,CAAEC,YALhB,EAHF,cAUE,KAAC,IAAD,EACE,IAAI,CAAE,IADR,CAEE,SAAS,CAAEC,OAAO,CAACU,QAAR,CAAiBC,QAAjB,GAA8B,QAA9B,CAAyC,IAAzC,CAAgD,KAF7D,CAGE,WAAW,CAAEJ,IAHf,CAIE,SAAS,CAAET,SAJb,CAKE,YAAY,CAAEC,YALhB,EAVF,GAlBF,cAqCE,aACE,SAAS,CAAC,SADZ,wBAGE,KAAC,kBAAD,IAHF,cAIE,KAAC,SAAD,IAJF,GArCF,GAFF,EAgDD,CA/DD,CAiEA,cAAeH,CAAAA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Route, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport PostsNav from '../nav/Posts_Nav';\nimport Feed from '../feeds/Feed.js';\nimport PostRadar from '../dashboard/util/Post_Radar';\nimport CheckOutTheseBlogs from '../dashboard/util/Check_Out_These_Blogs';\nimport RepostForm from '../posts/util/components/social/Repost_Form';\n\nimport Queries from '../../graphql/queries.js';\nconst { FETCH_USER } = Queries;\n\nconst Dashboard = props => {\n  let [uploading, setUploading] = useState(false)\n  let history = useHistory()\n  \n  let { loading, error, data } = useQuery(FETCH_USER, {\n    variables: {\n      query: Cookies.get('currentUser')\n    }\n  })\n\n  if (loading) return 'Loading...';\n  if (error) return `Error: ${error}`;\n\n  const { user } = data;\n\n  return(\n    // <React.Fragment>\n    <div\n      className='dashboard'\n    >\n      <Route\n        exact path={`${props.match.path}/repost/:blogName/:postId/:typename`}\n        component={RepostForm}\n      />\n      <Route\n        exact path={`${props.match.path}/create`}\n        render={(props) => (\n          <PostsNav\n            props={props}\n            mobile={true}\n            user={user}\n          />\n        )}\n      />\n      \n      <div\n        className='column1'\n      >\n        <PostsNav \n          props={props}\n          userLikes={history.location.pathname === '/likes' ? true : false}\n          user={user}\n          uploading={uploading}\n          setUploading={setUploading}\n        />\n        <Feed \n          user={null}\n          userLikes={history.location.pathname === '/likes' ? true : false}\n          currentUser={user}\n          uploading={uploading}\n          setUploading={setUploading}\n        />\n      </div>\n\n      <div\n        className='column2'\n      >\n        <CheckOutTheseBlogs />\n        <PostRadar />\n      </div>\n    {/* </React.Fragment> */}\n    </div>\n  )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}