{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Windows1292Decoder = void 0;\n/**\r\n * windows-1252 / iso_8859-1 decoder (ANSI)\r\n */\n\nclass Windows1292Decoder {\n  static decode(buffer) {\n    let str = '';\n\n    for (const i in buffer) {\n      if (buffer.hasOwnProperty(i)) {\n        str += Windows1292Decoder.codePointToString(Windows1292Decoder.singleByteDecoder(buffer[i]));\n      }\n    }\n\n    return str;\n  }\n\n  static inRange(a, min, max) {\n    return min <= a && a <= max;\n  }\n\n  static codePointToString(cp) {\n    if (cp <= 0xFFFF) {\n      return String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      return String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\n    }\n  }\n\n  static singleByteDecoder(bite) {\n    if (Windows1292Decoder.inRange(bite, 0x00, 0x7F)) {\n      return bite;\n    }\n\n    const codePoint = Windows1292Decoder.windows1252[bite - 0x80];\n\n    if (codePoint === null) {\n      throw Error('invaliding encoding');\n    }\n\n    return codePoint;\n  }\n\n}\n\nexports.Windows1292Decoder = Windows1292Decoder;\nWindows1292Decoder.windows1252 = [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255];","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/node_modules/music-metadata/lib/common/Windows1292Decoder.js"],"names":["Object","defineProperty","exports","value","Windows1292Decoder","decode","buffer","str","i","hasOwnProperty","codePointToString","singleByteDecoder","inRange","a","min","max","cp","String","fromCharCode","bite","codePoint","windows1252","Error"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Windows1292Decoder = void 0;\r\n/**\r\n * windows-1252 / iso_8859-1 decoder (ANSI)\r\n */\r\nclass Windows1292Decoder {\r\n    static decode(buffer) {\r\n        let str = '';\r\n        for (const i in buffer) {\r\n            if (buffer.hasOwnProperty(i)) {\r\n                str += Windows1292Decoder.codePointToString(Windows1292Decoder.singleByteDecoder(buffer[i]));\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    static inRange(a, min, max) {\r\n        return min <= a && a <= max;\r\n    }\r\n    static codePointToString(cp) {\r\n        if (cp <= 0xFFFF) {\r\n            return String.fromCharCode(cp);\r\n        }\r\n        else {\r\n            cp -= 0x10000;\r\n            return String.fromCharCode((cp >> 10) + 0xD800, (cp & 0x3FF) + 0xDC00);\r\n        }\r\n    }\r\n    static singleByteDecoder(bite) {\r\n        if (Windows1292Decoder.inRange(bite, 0x00, 0x7F)) {\r\n            return bite;\r\n        }\r\n        const codePoint = Windows1292Decoder.windows1252[bite - 0x80];\r\n        if (codePoint === null) {\r\n            throw Error('invaliding encoding');\r\n        }\r\n        return codePoint;\r\n    }\r\n}\r\nexports.Windows1292Decoder = Windows1292Decoder;\r\nWindows1292Decoder.windows1252 = [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352,\r\n    8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732,\r\n    8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168,\r\n    169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184,\r\n    185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,\r\n    201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,\r\n    217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,\r\n    233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,\r\n    248, 249, 250, 251, 252, 253, 254, 255];\r\n"]},"metadata":{},"sourceType":"script"}