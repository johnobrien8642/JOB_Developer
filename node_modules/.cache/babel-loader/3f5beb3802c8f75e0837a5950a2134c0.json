{"ast":null,"code":"import _slicedToArray from\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useMutation}from'@apollo/client';import Cookies from'js-cookie';import Queries from'../../../../../graphql/queries';import Mutations from'../../../../../graphql/mutations';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DELETE_COMMENT=Mutations.DELETE_COMMENT;var FETCH_LIKES_REPOSTS_AND_COMMENTS=Queries.FETCH_LIKES_REPOSTS_AND_COMMENTS;var DeleteComment=function DeleteComment(_ref){var post=_ref.post,comment=_ref.comment;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var _useMutation=useMutation(DELETE_COMMENT,{update:function update(client){var query=FETCH_LIKES_REPOSTS_AND_COMMENTS;var readFeed=client.readQuery({query:query,variables:{postId:post._id}});var fetchLikesRepostsAndComments=readFeed.fetchLikesRepostsAndComments;var newPostArr=fetchLikesRepostsAndComments.filter(function(note){if(note._id===comment._id){return false;}else{return true;}});client.writeQuery({query:query,variables:{postId:post._id},data:{fetchLikesRepostsAndComments:newPostArr}});},onCompleted:function onCompleted(){setActive(active=false);}}),_useMutation2=_slicedToArray(_useMutation,1),deleteComment=_useMutation2[0];if(comment.user.blogName===Cookies.get('currentUser')){if(active){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"img\",{className:\"commentOptions active\",src:\"https://img.icons8.com/ios-glyphs/64/000000/more.png\",alt:\"\",onClick:function onClick(){setActive(active=false);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"deleteCommentContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"deleteCommentBtn\",onClick:function onClick(){deleteComment({variables:{commentId:comment._id,postId:post._id}});},children:\"Delete reply\"}),/*#__PURE__*/_jsx(\"div\",{className:\"closeCommentBtn\",onClick:function onClick(){setActive(active=false);},children:\"Close\"})]})]});}else{return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"img\",{className:\"commentOptions\",src:\"https://img.icons8.com/ios-glyphs/64/000000/more.png\",alt:\"\",onClick:function onClick(){setActive(active=true);}})});}}else{return/*#__PURE__*/_jsx(\"div\",{});}};export default DeleteComment;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/src/components/posts/util/components/social/Delete_Comment.js"],"names":["React","useState","useMutation","Cookies","Queries","Mutations","DELETE_COMMENT","FETCH_LIKES_REPOSTS_AND_COMMENTS","DeleteComment","post","comment","active","setActive","update","client","query","readFeed","readQuery","variables","postId","_id","fetchLikesRepostsAndComments","newPostArr","filter","note","writeQuery","data","onCompleted","deleteComment","user","blogName","get","commentId"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Cookies from 'js-cookie';\n\nimport Queries from '../../../../../graphql/queries';\nimport Mutations from '../../../../../graphql/mutations';\nconst { DELETE_COMMENT } = Mutations;\nconst { FETCH_LIKES_REPOSTS_AND_COMMENTS } = Queries\n\nconst DeleteComment = ({\n  post, \n  comment\n}) => {\n  let [active, setActive] = useState(false)\n  \n  let [deleteComment] = useMutation(DELETE_COMMENT, {\n    update(client) {\n      var query = FETCH_LIKES_REPOSTS_AND_COMMENTS\n      \n      var readFeed = client.readQuery({\n        query: query,\n        variables: {\n          postId: post._id\n        }\n      })\n      \n      var { fetchLikesRepostsAndComments } = readFeed;\n      \n      var newPostArr = fetchLikesRepostsAndComments.filter(note => {\n        if (note._id === comment._id) {\n          return false\n        } else {\n          return true\n        }\n      })\n\n      client.writeQuery({\n        query: query,\n        variables: {\n          postId: post._id\n        },\n        data: {\n          fetchLikesRepostsAndComments: newPostArr\n        }\n      })\n    },\n    onCompleted() {\n      setActive(active = false)\n    }\n  })\n\n  if (comment.user.blogName === Cookies.get('currentUser')) {\n    if (active) {\n      return (\n        <React.Fragment>\n          <img\n              className='commentOptions active'\n              src=\"https://img.icons8.com/ios-glyphs/64/000000/more.png\"\n              alt=''\n              onClick={() => {\n                setActive(active = false)\n              }}\n            />\n          <div\n            className='deleteCommentContainer'\n          >\n            <div\n              className='deleteCommentBtn'\n              onClick={() => {\n                deleteComment({\n                  variables: {\n                    commentId: comment._id,\n                    postId: post._id\n                  }\n                })\n              }}\n            >\n              Delete reply\n            </div>\n            <div\n              className='closeCommentBtn'\n              onClick={() => {\n                setActive(active = false)\n              }}\n            >\n              Close\n            </div>\n          </div>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <img\n            className='commentOptions'\n            src=\"https://img.icons8.com/ios-glyphs/64/000000/more.png\"\n            alt=''\n            onClick={() => {\n              setActive(active = true)\n            }}\n          />\n        </React.Fragment>\n      )\n    }\n  } else {\n    return (\n      <div>\n      </div>\n    )\n  }\n\n}\n\nexport default DeleteComment;"]},"metadata":{},"sourceType":"module"}