{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpusParser = void 0;\n\nvar Token = require(\"token-types\");\n\nvar Opus = require(\"./Opus\");\n\nvar VorbisParser_1 = require(\"../vorbis/VorbisParser\");\n/**\r\n * Opus parser\r\n * Internet Engineering Task Force (IETF) - RFC 6716\r\n * Used by OggParser\r\n */\n\n\nvar OpusParser = /*#__PURE__*/function (_VorbisParser_1$Vorbi) {\n  _inherits(OpusParser, _VorbisParser_1$Vorbi);\n\n  var _super = _createSuper(OpusParser);\n\n  function OpusParser(metadata, options, tokenizer) {\n    var _this;\n\n    _classCallCheck(this, OpusParser);\n\n    _this = _super.call(this, metadata, options);\n    _this.tokenizer = tokenizer;\n    _this.lastPos = -1;\n    return _this;\n  }\n  /**\r\n   * Parse first Opus Ogg page\r\n   * @param {IPageHeader} header\r\n   * @param {Buffer} pageData\r\n   */\n\n\n  _createClass(OpusParser, [{\n    key: \"parseFirstPage\",\n    value: function parseFirstPage(header, pageData) {\n      this.metadata.setFormat('codec', 'Opus'); // Parse Opus ID Header\n\n      this.idHeader = new Opus.IdHeader(pageData.length).get(pageData, 0);\n      if (this.idHeader.magicSignature !== \"OpusHead\") throw new Error(\"Illegal ogg/Opus magic-signature\");\n      this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\n      this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\n    }\n  }, {\n    key: \"parseFullPage\",\n    value: function parseFullPage(pageData) {\n      var magicSignature = new Token.StringType(8, 'ascii').get(pageData, 0);\n\n      switch (magicSignature) {\n        case 'OpusTags':\n          this.parseUserCommentList(pageData, 8);\n          this.lastPos = this.tokenizer.position - pageData.length;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"calculateDuration\",\n    value: function calculateDuration(header) {\n      if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n        // Calculate duration\n        var pos_48bit = header.absoluteGranulePosition - this.idHeader.preSkip;\n        this.metadata.setFormat('numberOfSamples', pos_48bit);\n        this.metadata.setFormat('duration', pos_48bit / 48000);\n\n        if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n          var dataSize = this.tokenizer.fileInfo.size - this.lastPos;\n          this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n        }\n      }\n    }\n  }]);\n\n  return OpusParser;\n}(VorbisParser_1.VorbisParser);\n\nexports.OpusParser = OpusParser;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/Rumblr_PROD/client/node_modules/music-metadata/lib/ogg/opus/OpusParser.js"],"names":["Object","defineProperty","exports","value","OpusParser","Token","require","Opus","VorbisParser_1","metadata","options","tokenizer","lastPos","header","pageData","setFormat","idHeader","IdHeader","length","get","magicSignature","Error","inputSampleRate","channelCount","StringType","parseUserCommentList","position","format","sampleRate","absoluteGranulePosition","pos_48bit","preSkip","fileInfo","size","duration","dataSize","VorbisParser"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAME,cAAc,GAAGF,OAAO,CAAC,wBAAD,CAA9B;AACA;AACA;AACA;AACA;AACA;;;IACMF,U;;;;;AACF,sBAAYK,QAAZ,EAAsBC,OAAtB,EAA+BC,SAA/B,EAA0C;AAAA;;AAAA;;AACtC,8BAAMF,QAAN,EAAgBC,OAAhB;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AACA,UAAKC,OAAL,GAAe,CAAC,CAAhB;AAHsC;AAIzC;AACD;AACJ;AACA;AACA;AACA;;;;;WACI,wBAAeC,MAAf,EAAuBC,QAAvB,EAAiC;AAC7B,WAAKL,QAAL,CAAcM,SAAd,CAAwB,OAAxB,EAAiC,MAAjC,EAD6B,CAE7B;;AACA,WAAKC,QAAL,GAAgB,IAAIT,IAAI,CAACU,QAAT,CAAkBH,QAAQ,CAACI,MAA3B,EAAmCC,GAAnC,CAAuCL,QAAvC,EAAiD,CAAjD,CAAhB;AACA,UAAI,KAAKE,QAAL,CAAcI,cAAd,KAAiC,UAArC,EACI,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACJ,WAAKZ,QAAL,CAAcM,SAAd,CAAwB,YAAxB,EAAsC,KAAKC,QAAL,CAAcM,eAApD;AACA,WAAKb,QAAL,CAAcM,SAAd,CAAwB,kBAAxB,EAA4C,KAAKC,QAAL,CAAcO,YAA1D;AACH;;;WACD,uBAAcT,QAAd,EAAwB;AACpB,UAAMM,cAAc,GAAG,IAAIf,KAAK,CAACmB,UAAV,CAAqB,CAArB,EAAwB,OAAxB,EAAiCL,GAAjC,CAAqCL,QAArC,EAA+C,CAA/C,CAAvB;;AACA,cAAQM,cAAR;AACI,aAAK,UAAL;AACI,eAAKK,oBAAL,CAA0BX,QAA1B,EAAoC,CAApC;AACA,eAAKF,OAAL,GAAe,KAAKD,SAAL,CAAee,QAAf,GAA0BZ,QAAQ,CAACI,MAAlD;AACA;;AACJ;AACI;AANR;AAQH;;;WACD,2BAAkBL,MAAlB,EAA0B;AACtB,UAAI,KAAKJ,QAAL,CAAckB,MAAd,CAAqBC,UAArB,IAAmCf,MAAM,CAACgB,uBAAP,IAAkC,CAAzE,EAA4E;AACxE;AACA,YAAMC,SAAS,GAAGjB,MAAM,CAACgB,uBAAP,GAAiC,KAAKb,QAAL,CAAce,OAAjE;AACA,aAAKtB,QAAL,CAAcM,SAAd,CAAwB,iBAAxB,EAA2Ce,SAA3C;AACA,aAAKrB,QAAL,CAAcM,SAAd,CAAwB,UAAxB,EAAoCe,SAAS,GAAG,KAAhD;;AACA,YAAI,KAAKlB,OAAL,KAAiB,CAAC,CAAlB,IAAuB,KAAKD,SAAL,CAAeqB,QAAf,CAAwBC,IAA/C,IAAuD,KAAKxB,QAAL,CAAckB,MAAd,CAAqBO,QAAhF,EAA0F;AACtF,cAAMC,QAAQ,GAAG,KAAKxB,SAAL,CAAeqB,QAAf,CAAwBC,IAAxB,GAA+B,KAAKrB,OAArD;AACA,eAAKH,QAAL,CAAcM,SAAd,CAAwB,SAAxB,EAAmC,IAAIoB,QAAJ,GAAe,KAAK1B,QAAL,CAAckB,MAAd,CAAqBO,QAAvE;AACH;AACJ;AACJ;;;;EA1CoB1B,cAAc,CAAC4B,Y;;AA4CxClC,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OpusParser = void 0;\r\nconst Token = require(\"token-types\");\r\nconst Opus = require(\"./Opus\");\r\nconst VorbisParser_1 = require(\"../vorbis/VorbisParser\");\r\n/**\r\n * Opus parser\r\n * Internet Engineering Task Force (IETF) - RFC 6716\r\n * Used by OggParser\r\n */\r\nclass OpusParser extends VorbisParser_1.VorbisParser {\r\n    constructor(metadata, options, tokenizer) {\r\n        super(metadata, options);\r\n        this.tokenizer = tokenizer;\r\n        this.lastPos = -1;\r\n    }\r\n    /**\r\n     * Parse first Opus Ogg page\r\n     * @param {IPageHeader} header\r\n     * @param {Buffer} pageData\r\n     */\r\n    parseFirstPage(header, pageData) {\r\n        this.metadata.setFormat('codec', 'Opus');\r\n        // Parse Opus ID Header\r\n        this.idHeader = new Opus.IdHeader(pageData.length).get(pageData, 0);\r\n        if (this.idHeader.magicSignature !== \"OpusHead\")\r\n            throw new Error(\"Illegal ogg/Opus magic-signature\");\r\n        this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\r\n        this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\r\n    }\r\n    parseFullPage(pageData) {\r\n        const magicSignature = new Token.StringType(8, 'ascii').get(pageData, 0);\r\n        switch (magicSignature) {\r\n            case 'OpusTags':\r\n                this.parseUserCommentList(pageData, 8);\r\n                this.lastPos = this.tokenizer.position - pageData.length;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    calculateDuration(header) {\r\n        if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\r\n            // Calculate duration\r\n            const pos_48bit = header.absoluteGranulePosition - this.idHeader.preSkip;\r\n            this.metadata.setFormat('numberOfSamples', pos_48bit);\r\n            this.metadata.setFormat('duration', pos_48bit / 48000);\r\n            if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\r\n                const dataSize = this.tokenizer.fileInfo.size - this.lastPos;\r\n                this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.OpusParser = OpusParser;\r\n"]},"metadata":{},"sourceType":"script"}