{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst initDebug = require(\"debug\");\n\nconst Token = require(\"token-types\");\n\nconst MpcSv8Parser_1 = require(\"./sv8/MpcSv8Parser\");\n\nconst MpcSv7Parser_1 = require(\"./sv7/MpcSv7Parser\");\n\nconst AbstractID3Parser_1 = require(\"../id3v2/AbstractID3Parser\");\n\nconst debug = initDebug('music-metadata:parser:musepack');\n\nclass MusepackParser extends AbstractID3Parser_1.AbstractID3Parser {\n  async _parse() {\n    const signature = await this.tokenizer.peekToken(new Token.StringType(3, 'binary'));\n    let mpcParser;\n\n    switch (signature) {\n      case 'MP+':\n        {\n          debug('Musepack stream-version 7');\n          mpcParser = new MpcSv7Parser_1.MpcSv7Parser();\n          break;\n        }\n\n      case 'MPC':\n        {\n          debug('Musepack stream-version 8');\n          mpcParser = new MpcSv8Parser_1.MpcSv8Parser();\n          break;\n        }\n\n      default:\n        {\n          throw new Error('Invalid Musepack signature prefix');\n        }\n    }\n\n    mpcParser.init(this.metadata, this.tokenizer, this.options);\n    return mpcParser.parse();\n  }\n\n}\n\nexports.default = MusepackParser;","map":{"version":3,"sources":["/Users/johnobrien/Desktop/JOB_Developer/client/node_modules/music-metadata/lib/musepack/index.js"],"names":["Object","defineProperty","exports","value","initDebug","require","Token","MpcSv8Parser_1","MpcSv7Parser_1","AbstractID3Parser_1","debug","MusepackParser","AbstractID3Parser","_parse","signature","tokenizer","peekToken","StringType","mpcParser","MpcSv7Parser","MpcSv8Parser","Error","init","metadata","options","parse","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,aAAD,CAArB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,oBAAD,CAA9B;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,oBAAD,CAA9B;;AACA,MAAMI,mBAAmB,GAAGJ,OAAO,CAAC,4BAAD,CAAnC;;AACA,MAAMK,KAAK,GAAGN,SAAS,CAAC,gCAAD,CAAvB;;AACA,MAAMO,cAAN,SAA6BF,mBAAmB,CAACG,iBAAjD,CAAmE;AACnD,QAANC,MAAM,GAAG;AACX,UAAMC,SAAS,GAAG,MAAM,KAAKC,SAAL,CAAeC,SAAf,CAAyB,IAAIV,KAAK,CAACW,UAAV,CAAqB,CAArB,EAAwB,QAAxB,CAAzB,CAAxB;AACA,QAAIC,SAAJ;;AACA,YAAQJ,SAAR;AACI,WAAK,KAAL;AAAY;AACRJ,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACAQ,UAAAA,SAAS,GAAG,IAAIV,cAAc,CAACW,YAAnB,EAAZ;AACA;AACH;;AACD,WAAK,KAAL;AAAY;AACRT,UAAAA,KAAK,CAAC,2BAAD,CAAL;AACAQ,UAAAA,SAAS,GAAG,IAAIX,cAAc,CAACa,YAAnB,EAAZ;AACA;AACH;;AACD;AAAS;AACL,gBAAM,IAAIC,KAAJ,CAAU,mCAAV,CAAN;AACH;AAbL;;AAeAH,IAAAA,SAAS,CAACI,IAAV,CAAe,KAAKC,QAApB,EAA8B,KAAKR,SAAnC,EAA8C,KAAKS,OAAnD;AACA,WAAON,SAAS,CAACO,KAAV,EAAP;AACH;;AArB8D;;AAuBnEvB,OAAO,CAACwB,OAAR,GAAkBf,cAAlB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst initDebug = require(\"debug\");\r\nconst Token = require(\"token-types\");\r\nconst MpcSv8Parser_1 = require(\"./sv8/MpcSv8Parser\");\r\nconst MpcSv7Parser_1 = require(\"./sv7/MpcSv7Parser\");\r\nconst AbstractID3Parser_1 = require(\"../id3v2/AbstractID3Parser\");\r\nconst debug = initDebug('music-metadata:parser:musepack');\r\nclass MusepackParser extends AbstractID3Parser_1.AbstractID3Parser {\r\n    async _parse() {\r\n        const signature = await this.tokenizer.peekToken(new Token.StringType(3, 'binary'));\r\n        let mpcParser;\r\n        switch (signature) {\r\n            case 'MP+': {\r\n                debug('Musepack stream-version 7');\r\n                mpcParser = new MpcSv7Parser_1.MpcSv7Parser();\r\n                break;\r\n            }\r\n            case 'MPC': {\r\n                debug('Musepack stream-version 8');\r\n                mpcParser = new MpcSv8Parser_1.MpcSv8Parser();\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Invalid Musepack signature prefix');\r\n            }\r\n        }\r\n        mpcParser.init(this.metadata, this.tokenizer, this.options);\r\n        return mpcParser.parse();\r\n    }\r\n}\r\nexports.default = MusepackParser;\r\n"]},"metadata":{},"sourceType":"script"}